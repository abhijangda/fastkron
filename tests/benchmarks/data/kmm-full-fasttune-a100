nohup: ignoring input
------- Single CUDA KMM FLOAT FastTune NN -------
2_2x2^1  &  0.001 & 0.001 & 0.000 & 14.884
4_2x2^1  &  0.002 & 0.002 & 0.000 & 14.866
16_2x2^1  &  0.009 & 0.009 & 0.001 & 14.689
64_2x2^1  &  0.036 & 0.036 & 0.002 & 14.932
256_2x2^1  &  0.145 & 0.146 & 0.010 & 14.350
2_2x2^2  &  0.002 & 0.002 & 0.000 & 10.698
4_2x2^2  &  0.005 & 0.005 & 0.000 & 10.684
16_2x2^2  &  0.019 & 0.019 & 0.002 & 10.698
64_2x2^2  &  0.075 & 0.074 & 0.007 & 10.640
256_2x2^2  &  0.297 & 0.297 & 0.028 & 10.540
2_2x2^3  &  0.005 & 0.005 & 0.001 & 8.762
4_2x2^3  &  0.009 & 0.010 & 0.001 & 8.870
16_2x2^3  &  0.038 & 0.038 & 0.004 & 8.623
64_2x2^3  &  0.151 & 0.152 & 0.018 & 8.611
256_2x2^3  &  0.606 & 0.609 & 0.070 & 8.707
2_2x2^4  &  0.010 & 0.010 & 0.001 & 7.772
4_2x2^4  &  0.019 & 0.019 & 0.002 & 7.650
16_2x2^4  &  0.076 & 0.077 & 0.010 & 7.611
64_2x2^4  &  0.299 & 0.305 & 0.040 & 7.565
256_2x2^4  &  1.218 & 1.214 & 0.161 & 7.532
2_2x2^5  &  0.019 & 0.019 & 0.003 & 7.163
4_2x2^5  &  0.039 & 0.039 & 0.005 & 7.028
16_2x2^5  &  0.154 & 0.537 & 0.022 & 24.479
64_2x2^5  &  0.619 & 2.146 & 0.087 & 24.687
256_2x2^5  &  2.468 & 8.585 & 0.346 & 24.804
2_2x2^6  &  0.039 & 0.154 & 0.006 & 26.591
4_2x2^6  &  0.078 & 0.308 & 0.012 & 26.443
16_2x2^6  &  0.310 & 1.221 & 0.046 & 26.270
64_2x2^6  &  1.241 & 4.837 & 0.187 & 25.934
256_2x2^6  &  4.941 & 19.531 & 0.747 & 26.147
2_2x2^7  &  0.077 & 0.225 & 0.012 & 18.400
4_2x2^7  &  0.155 & 0.452 & 0.025 & 18.415
16_2x2^7  &  0.620 & 1.791 & 0.097 & 18.377
64_2x2^7  &  2.474 & 7.186 & 0.394 & 18.218
256_2x2^7  &  9.938 & 28.743 & 1.573 & 18.270
2_2x2^8  &  0.156 & 0.501 & 0.025 & 19.669
4_2x2^8  &  0.311 & 1.006 & 0.050 & 19.952
16_2x2^8  &  1.239 & 4.000 & 0.204 & 19.615
64_2x2^8  &  5.000 & 16.095 & 0.814 & 19.772
256_2x2^8  &  19.568 & 64.000 & 3.278 & 19.526
2_2x2^9  &  0.314 & 1.121 & 0.053 & 21.194
4_2x2^9  &  0.623 & 2.242 & 0.105 & 21.292
16_2x2^9  &  2.496 & 8.761 & 0.424 & 20.680
64_2x2^9  &  10.218 & 35.660 & 1.679 & 21.244
256_2x2^9  &  39.902 & 142.222 & 6.712 & 21.190
2_2x2^10  &  0.625 & 2.530 & 0.108 & 23.341
4_2x2^10  &  1.247 & 5.045 & 0.217 & 23.284
16_2x2^10  &  4.952 & 20.180 & 0.863 & 23.387
64_2x2^10  &  19.896 & 81.208 & 3.482 & 23.320
256_2x2^10  &  79.585 & 321.916 & 13.757 & 23.401
2_2x2^11  &  1.249 & 5.460 & 0.221 & 24.723
4_2x2^11  &  2.509 & 10.855 & 0.442 & 24.564
16_2x2^11  &  10.000 & 43.294 & 1.761 & 24.581
64_2x2^11  &  39.946 & 173.176 & 7.048 & 24.572
256_2x2^11  &  159.891 & 684.651 & 28.028 & 24.428
2_2x2^12  &  2.503 & 11.594 & 0.451 & 25.731
4_2x2^12  &  4.994 & 23.392 & 0.898 & 26.036
16_2x2^12  &  20.075 & 93.023 & 3.551 & 26.196
64_2x2^12  &  79.950 & 367.816 & 14.346 & 25.639
256_2x2^12  &  319.800 & 1467.049 & 54.716 & 26.812
2_2x2^13  &  4.994 & 18.661 & 0.910 & 20.508
4_2x2^13  &  10.012 & 37.322 & 1.831 & 20.383
16_2x2^13  &  40.000 & 147.692 & 7.294 & 20.248
64_2x2^13  &  159.907 & 584.524 & 28.798 & 20.298
256_2x2^13  &  638.891 & 2181.302 & 70.306 & 31.026
2_2x2^14  &  10.092 & 39.489 & 1.859 & 21.245
4_2x2^14  &  20.011 & 79.657 & 3.711 & 21.465
16_2x2^14  &  80.564 & 312.589 & 14.892 & 20.990
64_2x2^14  &  318.798 & 1247.731 & 56.218 & 22.195
256_2x2^14  &  777.891 & 2317.737 & 72.112 & 32.141
2_2x2^15  &  20.112 & 86.827 & 3.753 & 23.133
4_2x2^15  &  40.305 & 173.275 & 7.403 & 23.407
16_2x2^15  &  160.811 & 664.100 & 29.911 & 22.203
64_2x2^15  &  637.750 & 2329.835 & 70.598 & 33.001
256_2x2^15  &  731.429 & 2772.402 & 73.518 & 37.710
2_2x2^16  &  40.190 & 182.069 & 7.631 & 23.860
4_2x2^16  &  80.611 & 359.489 & 15.115 & 23.784
16_2x2^16  &  320.912 & 1431.864 & 57.795 & 24.775
64_2x2^16  &  799.811 & 2279.393 & 72.290 & 31.531
256_2x2^16  &  762.154 & 2592.530 & 73.343 & 35.348
2_2x2^17  &  80.612 & 378.858 & 15.199 & 24.927
4_2x2^17  &  160.790 & 745.114 & 30.491 & 24.437
16_2x2^17  &  642.582 & 2381.395 & 70.926 & 33.576
64_2x2^17  &  753.634 & 2716.438 & 73.724 & 36.846
256_2x2^17  &  779.634 & 2958.164 & 73.397 & 40.304
2_2x2^18  &  161.500 & 627.285 & 30.694 & 20.437
4_2x2^18  &  319.730 & 1050.985 & 58.911 & 17.840
16_2x2^18  &  882.142 & 2854.086 & 72.359 & 39.444
64_2x2^18  &  790.259 & 3176.358 & 75.112 & 42.288
256_2x2^18  &  787.948 & 3349.215 & 73.804 & 45.380
2_2x2^19  &  320.385 & 1073.548 & 59.181 & 18.140
4_2x2^19  &  557.376 & 1199.279 & 71.179 & 16.849
16_2x2^19  &  785.658 & 2727.170 & 74.306 & 36.702
64_2x2^19  &  809.932 & 2874.709 & 75.795 & 37.927
256_2x2^19  &  790.690 & 2899.330 & 73.978 & 39.192
2_2x4^1  &  0.002 & 0.002 & 0.000 & 14.648
4_2x4^1  &  0.005 & 0.005 & 0.000 & 14.523
16_2x4^1  &  0.018 & 0.018 & 0.001 & 14.419
64_2x4^1  &  0.072 & 0.072 & 0.005 & 14.379
256_2x4^1  &  0.290 & 0.290 & 0.020 & 14.746
2_2x4^2  &  0.007 & 0.007 & 0.001 & 11.358
4_2x4^2  &  0.015 & 0.015 & 0.001 & 11.335
16_2x4^2  &  0.059 & 0.059 & 0.005 & 11.194
64_2x4^2  &  0.237 & 0.237 & 0.021 & 11.154
256_2x4^2  &  0.952 & 0.952 & 0.086 & 11.069
2_2x4^3  &  0.024 & 0.024 & 0.002 & 9.852
4_2x4^3  &  0.049 & 0.049 & 0.005 & 9.787
16_2x4^3  &  0.194 & 0.194 & 0.020 & 9.486
64_2x4^3  &  0.781 & 0.781 & 0.082 & 9.544
256_2x4^3  &  3.117 & 3.117 & 0.327 & 9.526
2_2x4^4  &  0.081 & 0.081 & 0.009 & 8.708
4_2x4^4  &  0.162 & 0.162 & 0.019 & 8.695
16_2x4^4  &  0.645 & 0.645 & 0.074 & 8.744
64_2x4^4  &  2.585 & 2.585 & 0.302 & 8.548
256_2x4^4  &  10.270 & 10.270 & 1.201 & 8.554
2_2x4^5  &  0.273 & 0.273 & 0.034 & 8.053
4_2x4^5  &  0.545 & 0.545 & 0.067 & 8.148
16_2x4^5  &  2.185 & 2.185 & 0.272 & 8.033
64_2x4^5  &  8.703 & 8.703 & 1.080 & 8.057
256_2x4^5  &  34.958 & 34.958 & 4.303 & 8.125
2_2x4^6  &  0.942 & 0.942 & 0.123 & 7.681
4_2x4^6  &  1.881 & 1.881 & 0.244 & 7.701
16_2x4^6  &  7.488 & 7.488 & 0.973 & 7.692
64_2x4^6  &  30.059 & 30.059 & 3.892 & 7.724
256_2x4^6  &  118.965 & 118.965 & 15.466 & 7.692
2_2x4^7  &  3.292 & 3.292 & 0.441 & 7.473
4_2x4^7  &  6.557 & 6.557 & 0.885 & 7.408
16_2x4^7  &  26.335 & 26.335 & 3.528 & 7.465
64_2x4^7  &  101.456 & 101.456 & 14.008 & 7.243
256_2x4^7  &  411.152 & 411.152 & 54.119 & 7.597
2_2x4^8  &  11.696 & 11.696 & 1.622 & 7.212
4_2x4^8  &  23.179 & 23.179 & 3.191 & 7.264
16_2x4^8  &  92.716 & 92.716 & 12.674 & 7.315
64_2x4^8  &  366.864 & 366.864 & 48.758 & 7.524
256_2x4^8  &  863.712 & 863.712 & 122.435 & 7.054
2_2x4^9  &  41.765 & 41.765 & 5.866 & 7.120
4_2x4^9  &  82.853 & 82.853 & 11.702 & 7.080
16_2x4^9  &  328.746 & 328.746 & 45.006 & 7.305
64_2x4^9  &  850.671 & 850.671 & 119.971 & 7.091
256_2x4^9  &  978.081 & 978.081 & 135.695 & 7.208
2_2x4^10  &  149.372 & 149.372 & 21.537 & 6.936
4_2x4^10  &  296.150 & 296.150 & 42.265 & 7.007
16_2x4^10  &  847.371 & 847.371 & 117.255 & 7.227
64_2x4^10  &  994.303 & 994.303 & 134.202 & 7.409
256_2x4^10  &  1014.521 & 1014.521 & 139.796 & 7.257
2_2x4^11  &  513.726 & 513.726 & 73.799 & 6.961
4_2x4^11  &  663.867 & 663.867 & 115.184 & 5.764
16_2x4^11  &  998.786 & 998.786 & 132.822 & 7.520
64_2x4^11  &  1042.620 & 1042.620 & 138.516 & 7.527
256_2x4^11  &  1019.449 & 1019.449 & 140.621 & 7.250
2_2x4^12  &  762.607 & 762.607 & 125.056 & 6.098
4_2x4^12  &  781.806 & 781.806 & 132.161 & 5.916
16_2x4^12  &  1052.624 & 1052.624 & 137.497 & 7.656
64_2x4^12  &  1052.751 & 1052.751 & 139.240 & 7.561
2_2x4^13  &  835.410 & 835.410 & 135.408 & 6.170
4_2x4^13  &  822.978 & 822.978 & 137.366 & 5.991
16_2x4^13  &  1067.366 & 1067.366 & 138.582 & 7.702
2_2x4^14  &  856.526 & 856.526 & 138.147 & 6.200
4_2x4^14  &  842.568 & 842.568 & 138.435 & 6.086
2_2x8^1  &  0.005 & 0.005 & 0.000 & 14.348
4_2x8^1  &  0.009 & 0.009 & 0.001 & 14.230
16_2x8^1  &  0.036 & 0.036 & 0.003 & 14.397
64_2x8^1  &  0.144 & 0.144 & 0.010 & 13.997
256_2x8^1  &  0.577 & 0.577 & 0.041 & 14.191
2_2x8^2  &  0.026 & 0.026 & 0.002 & 11.860
4_2x8^2  &  0.052 & 0.052 & 0.004 & 11.919
16_2x8^2  &  0.207 & 0.207 & 0.017 & 11.902
64_2x8^2  &  0.833 & 0.833 & 0.071 & 11.816
256_2x8^2  &  3.323 & 3.323 & 0.282 & 11.769
2_2x8^3  &  0.157 & 0.157 & 0.015 & 10.381
4_2x8^3  &  0.314 & 0.314 & 0.030 & 10.365
16_2x8^3  &  1.258 & 1.258 & 0.122 & 10.292
64_2x8^3  &  5.022 & 5.022 & 0.490 & 10.258
256_2x8^3  &  20.043 & 20.043 & 1.947 & 10.296
2_2x8^4  &  0.990 & 0.990 & 0.105 & 9.403
4_2x8^4  &  1.976 & 1.976 & 0.211 & 9.386
16_2x8^4  &  7.932 & 7.932 & 0.841 & 9.429
64_2x8^4  &  31.675 & 31.675 & 3.347 & 9.463
256_2x8^4  &  126.273 & 126.273 & 13.319 & 9.481
2_2x8^5  &  6.578 & 6.578 & 0.739 & 8.906
4_2x8^5  &  13.028 & 13.028 & 1.467 & 8.882
16_2x8^5  &  52.329 & 52.329 & 5.923 & 8.835
64_2x8^5  &  207.580 & 207.580 & 23.396 & 8.872
256_2x8^5  &  798.298 & 798.298 & 89.304 & 8.939
2_2x8^6  &  44.374 & 44.374 & 5.268 & 8.423
4_2x8^6  &  88.538 & 88.538 & 10.499 & 8.433
16_2x8^6  &  350.023 & 350.023 & 41.395 & 8.456
64_2x8^6  &  943.661 & 943.661 & 148.751 & 6.344
256_2x8^6  &  1093.564 & 1093.564 & 217.455 & 5.029
2_2x8^7  &  302.782 & 302.782 & 37.239 & 8.131
4_2x8^7  &  587.789 & 587.789 & 72.014 & 8.162
16_2x8^7  &  1038.859 & 1038.859 & 193.233 & 5.376
64_2x8^7  &  1137.054 & 1137.054 & 221.461 & 5.134
256_2x8^7  &  1162.180 & 1162.180 & 235.308 & 4.939
2_2x8^8  &  835.812 & 835.812 & 188.837 & 4.426
4_2x8^8  &  866.869 & 866.869 & 204.788 & 4.233
16_2x8^8  &  1166.839 & 1166.839 & 224.759 & 5.192
64_2x8^8  &  1174.395 & 1174.395 & 232.190 & 5.058
2_2x8^9  &  933.241 & 933.241 & 223.120 & 4.183
4_2x8^9  &  924.334 & 924.334 & 225.499 & 4.099
2_2x16^1  &  0.009 & 0.009 & 0.001 & 14.377
4_2x16^1  &  0.018 & 0.018 & 0.001 & 14.463
16_2x16^1  &  0.072 & 0.072 & 0.005 & 14.390
64_2x16^1  &  0.288 & 0.288 & 0.020 & 14.232
256_2x16^1  &  1.148 & 1.148 & 0.081 & 14.170
2_2x16^2  &  0.097 & 0.097 & 0.008 & 12.271
4_2x16^2  &  0.194 & 0.194 & 0.016 & 12.332
16_2x16^2  &  0.776 & 0.776 & 0.063 & 12.318
64_2x16^2  &  3.104 & 3.104 & 0.254 & 12.234
256_2x16^2  &  12.418 & 12.418 & 1.017 & 12.212
2_2x16^3  &  1.139 & 1.139 & 0.105 & 10.830
4_2x16^3  &  2.263 & 2.263 & 0.206 & 10.969
16_2x16^3  &  9.071 & 9.071 & 0.840 & 10.805
64_2x16^3  &  36.285 & 36.285 & 3.359 & 10.803
256_2x16^3  &  144.206 & 144.206 & 13.442 & 10.728
2_2x16^4  &  14.206 & 14.206 & 1.441 & 9.862
4_2x16^4  &  28.654 & 28.654 & 2.865 & 10.001
16_2x16^4  &  113.457 & 113.457 & 11.540 & 9.832
64_2x16^4  &  443.361 & 443.361 & 46.118 & 9.614
256_2x16^4  &  1006.056 & 1006.056 & 169.947 & 5.920
2_2x16^5  &  184.609 & 184.609 & 20.067 & 9.200
4_2x16^5  &  357.450 & 357.450 & 40.069 & 8.921
16_2x16^5  &  988.650 & 988.650 & 149.686 & 6.605
64_2x16^5  &  1163.306 & 1163.306 & 314.305 & 3.701
256_2x16^5  &  1209.198 & 1209.198 & 350.133 & 3.454
2_2x16^6  &  883.595 & 883.595 & 249.813 & 3.537
4_2x16^6  &  921.009 & 921.009 & 294.866 & 3.123
16_2x16^6  &  1228.100 & 1228.100 & 327.652 & 3.748
64_2x16^6  &  1231.832 & 1231.832 & 347.436 & 3.545
2_2x16^7  &  985.306 & 985.306 & 320.629 & 3.073
4_2x16^7  &  969.721 & 969.721 & 335.606 & 2.889
2_2x32^1  &  0.018 & 0.018 & 0.001 & 14.699
4_2x32^1  &  0.036 & 0.036 & 0.002 & 14.638
16_2x32^1  &  0.144 & 0.144 & 0.010 & 14.168
64_2x32^1  &  0.574 & 0.574 & 0.041 & 14.110
256_2x32^1  &  2.319 & 2.319 & 0.162 & 14.314
2_2x32^2  &  0.375 & 0.375 & 0.030 & 12.542
4_2x32^2  &  0.744 & 0.744 & 0.060 & 12.322
16_2x32^2  &  2.985 & 2.985 & 0.240 & 12.433
64_2x32^2  &  11.905 & 11.905 & 0.961 & 12.390
256_2x32^2  &  47.478 & 47.478 & 3.790 & 12.527
2_2x32^3  &  8.661 & 8.661 & 0.788 & 10.985
4_2x32^3  &  17.322 & 17.322 & 1.577 & 10.984
16_2x32^3  &  68.989 & 68.989 & 6.341 & 10.879
64_2x32^3  &  272.442 & 272.442 & 25.260 & 10.786
256_2x32^3  &  910.071 & 910.071 & 99.816 & 9.117
2_2x32^4  &  212.132 & 212.132 & 21.524 & 9.856
4_2x32^4  &  417.366 & 417.366 & 43.227 & 9.655
16_2x32^4  &  1015.549 & 1015.549 & 163.902 & 6.196
64_2x32^4  &  1204.364 & 1204.364 & 408.623 & 2.947
256_2x32^4  &  1246.587 & 1246.587 & 461.377 & 2.702
2_2x32^5  &  963.387 & 963.387 & 371.010 & 2.597
4_2x32^5  &  977.140 & 977.140 & 407.962 & 2.395
16_2x32^5  &  1269.331 & 1269.331 & 433.434 & 2.929
2_2x64^1  &  0.036 & 0.036 & 0.003 & 14.294
4_2x64^1  &  0.071 & 0.071 & 0.005 & 14.080
16_2x64^1  &  0.288 & 0.288 & 0.020 & 14.141
64_2x64^1  &  1.148 & 1.148 & 0.080 & 14.291
256_2x64^1  &  4.615 & 4.615 & 0.323 & 14.306
2_2x64^2  &  1.454 & 1.454 & 0.116 & 12.587
4_2x64^2  &  2.917 & 2.917 & 0.232 & 12.565
16_2x64^2  &  11.737 & 11.737 & 0.928 & 12.649
64_2x64^2  &  46.667 & 46.667 & 3.655 & 12.769
256_2x64^2  &  184.471 & 184.471 & 14.880 & 12.397
2_2x64^3  &  67.484 & 67.484 & 6.107 & 11.051
4_2x64^3  &  133.532 & 133.532 & 12.258 & 10.893
16_2x64^3  &  519.752 & 519.752 & 48.789 & 10.653
64_2x64^3  &  1063.729 & 1063.729 & 186.224 & 5.712
256_2x64^3  &  1232.098 & 1232.098 & 456.941 & 2.696
2_2x64^4  &  935.426 & 935.426 & 203.384 & 4.599
4_2x64^4  &  962.780 & 962.780 & 270.686 & 3.557
16_2x64^4  &  1278.498 & 1278.498 & 444.741 & 2.875
64_2x64^4  &  1279.057 & 1279.057 & 477.608 & 2.678
2_2x128^1  &  0.072 & 0.072 & 0.005 & 14.470
4_2x128^1  &  0.145 & 0.145 & 0.010 & 14.392
16_2x128^1  &  0.583 & 0.583 & 0.040 & 14.536
64_2x128^1  &  2.319 & 2.319 & 0.162 & 14.344
256_2x128^1  &  9.187 & 9.187 & 0.647 & 14.204
2_2x128^2  &  5.774 & 5.774 & 0.458 & 12.614
4_2x128^2  &  11.513 & 11.513 & 0.913 & 12.611
16_2x128^2  &  46.190 & 46.190 & 3.652 & 12.649
64_2x128^2  &  183.127 & 183.127 & 14.481 & 12.646
256_2x128^2  &  713.563 & 713.563 & 58.399 & 12.219
2_2x128^3  &  507.894 & 507.894 & 48.353 & 10.504
4_2x128^3  &  748.072 & 748.072 & 93.080 & 8.037
16_2x128^3  &  1181.963 & 1181.963 & 338.113 & 3.496
64_2x128^3  &  1273.437 & 1273.437 & 475.440 & 2.678
256_2x128^3  &  1304.209 & 1304.209 & 508.584 & 2.564
2_2x128^4  &  1024.861 & 1024.861 & 150.339 & 6.817
4_2x128^4  &  1024.234 & 1024.234 & 287.921 & 3.557
2_4x2^1  &  0.002 & 0.002 & 0.000 & 12.327
4_4x2^1  &  0.004 & 0.004 & 0.000 & 12.550
16_4x2^1  &  0.015 & 0.015 & 0.001 & 11.983
64_4x2^1  &  0.060 & 0.060 & 0.005 & 11.970
256_4x2^1  &  0.238 & 0.238 & 0.020 & 11.808
2_4x2^2  &  0.006 & 0.006 & 0.001 & 9.093
4_4x2^2  &  0.012 & 0.012 & 0.001 & 9.138
16_4x2^2  &  0.049 & 0.049 & 0.005 & 9.083
64_4x2^2  &  0.193 & 0.193 & 0.021 & 9.127
256_4x2^2  &  0.769 & 0.769 & 0.086 & 8.916
2_4x2^3  &  0.019 & 0.019 & 0.003 & 7.646
4_4x2^3  &  0.039 & 0.039 & 0.005 & 7.790
16_4x2^3  &  0.157 & 0.157 & 0.021 & 7.632
64_4x2^3  &  0.625 & 0.625 & 0.081 & 7.718
256_4x2^3  &  2.522 & 2.522 & 0.329 & 7.671
2_4x2^4  &  0.065 & 0.065 & 0.009 & 6.875
4_4x2^4  &  0.129 & 0.129 & 0.018 & 6.971
16_4x2^4  &  0.517 & 0.517 & 0.075 & 6.877
64_4x2^4  &  2.061 & 2.061 & 0.299 & 6.901
256_4x2^4  &  8.093 & 8.093 & 1.199 & 6.750
2_4x2^5  &  0.219 & 0.219 & 0.034 & 6.453
4_4x2^5  &  0.439 & 0.439 & 0.068 & 6.423
16_4x2^5  &  1.746 & 1.746 & 0.268 & 6.519
64_4x2^5  &  7.032 & 7.032 & 1.071 & 6.564
256_4x2^5  &  27.816 & 27.816 & 4.273 & 6.510
2_4x2^6  &  0.748 & 0.748 & 0.122 & 6.105
4_4x2^6  &  1.511 & 1.511 & 0.244 & 6.204
16_4x2^6  &  5.995 & 5.995 & 0.978 & 6.130
64_4x2^6  &  23.981 & 23.981 & 3.923 & 6.113
256_4x2^6  &  96.152 & 96.152 & 15.289 & 6.289
2_4x2^7  &  2.632 & 2.632 & 0.440 & 5.980
4_4x2^7  &  5.258 & 5.258 & 0.878 & 5.989
16_4x2^7  &  21.055 & 21.055 & 3.488 & 6.037
64_4x2^7  &  84.045 & 84.045 & 13.996 & 6.005
256_4x2^7  &  334.113 & 334.113 & 54.812 & 6.096
2_4x2^8  &  9.358 & 9.358 & 1.607 & 5.822
4_4x2^8  &  18.597 & 18.597 & 3.201 & 5.810
16_4x2^8  &  74.730 & 74.730 & 12.616 & 5.923
64_4x2^8  &  297.018 & 297.018 & 49.712 & 5.975
256_4x2^8  &  783.032 & 783.032 & 85.634 & 9.144
2_4x2^9  &  33.525 & 33.525 & 5.884 & 5.698
4_4x2^9  &  66.667 & 66.667 & 11.644 & 5.725
16_4x2^9  &  266.233 & 266.233 & 46.370 & 5.742
64_4x2^9  &  777.659 & 777.659 & 110.284 & 7.051
256_4x2^9  &  886.571 & 886.571 & 80.143 & 11.062
2_4x2^10  &  121.005 & 121.005 & 21.468 & 5.636
4_4x2^10  &  241.297 & 241.297 & 42.411 & 5.690
16_4x2^10  &  803.041 & 803.041 & 120.816 & 6.647
64_4x2^10  &  911.613 & 911.613 & 118.030 & 7.724
256_4x2^10  &  918.083 & 918.083 & 79.356 & 11.569
2_4x2^11  &  422.931 & 422.931 & 78.063 & 5.418
4_4x2^11  &  645.121 & 645.121 & 120.995 & 5.332
16_4x2^11  &  975.970 & 975.970 & 132.975 & 7.340
64_4x2^11  &  950.655 & 950.655 & 120.315 & 7.901
256_4x2^11  &  926.343 & 926.343 & 89.171 & 10.388
2_4x2^12  &  911.321 & 911.321 & 129.367 & 7.044
4_4x2^12  &  802.499 & 802.499 & 134.283 & 5.976
16_4x2^12  &  1028.130 & 1028.130 & 136.337 & 7.541
64_4x2^12  &  960.355 & 960.355 & 134.604 & 7.135
2_4x2^13  &  1024.907 & 1024.907 & 137.134 & 7.474
4_4x2^13  &  871.156 & 871.156 & 138.005 & 6.312
16_4x2^13  &  1043.238 & 1043.238 & 137.771 & 7.572
2_4x2^14  &  1062.958 & 1062.958 & 138.741 & 7.661
4_4x2^14  &  890.035 & 890.035 & 125.529 & 7.090
2_4x4^1  &  0.004 & 0.004 & 0.000 & 12.080
4_4x4^1  &  0.008 & 0.007 & 0.001 & 12.093
16_4x4^1  &  0.030 & 0.030 & 0.003 & 11.903
64_4x4^1  &  0.121 & 0.118 & 0.010 & 11.771
256_4x4^1  &  0.481 & 0.481 & 0.040 & 12.031
2_4x4^2  &  0.017 & 0.017 & 0.002 & 9.554
4_4x4^2  &  0.033 & 0.033 & 0.003 & 9.568
16_4x4^2  &  0.134 & 0.134 & 0.014 & 9.534
64_4x4^2  &  0.536 & 0.536 & 0.057 & 9.453
256_4x4^2  &  2.149 & 2.156 & 0.225 & 9.586
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 3 -p 4 -q 4 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 64] with F_0 [4, 4] x F_1 [4, 4] x F_2 [4, 4] x to produce Y[2, 64]
Matmul: 2 x 64 x 64, Num KP Factors: 3
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 512 tempSize 512
520 sizeX 512
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_4x4^3  &  1.000 & 1.000 & 0.009 & 115.484
4_4x4^3  &  0.142 & 0.141 & 0.017 & 8.111
16_4x4^3  &  0.563 & 1.221 & 0.070 & 17.429
64_4x4^3  &  2.256 & 4.860 & 0.280 & 17.355
256_4x4^3  &  9.024 & 19.531 & 1.117 & 17.491
2_4x4^4  &  0.291 & 0.798 & 0.040 & 20.107
4_4x4^4  &  0.575 & 1.604 & 0.079 & 20.220
16_4x4^4  &  2.317 & 6.385 & 0.316 & 20.227
64_4x4^4  &  9.267 & 25.421 & 1.271 & 20.003
256_4x4^4  &  36.944 & 101.682 & 5.067 & 20.068
2_4x4^5  &  1.172 & 4.058 & 0.174 & 23.349
4_4x4^5  &  2.346 & 8.116 & 0.346 & 23.432
16_4x4^5  &  9.412 & 32.308 & 1.387 & 23.291
64_4x4^5  &  37.647 & 128.612 & 5.560 & 23.130
256_4x4^5  &  150.168 & 504.789 & 22.010 & 22.934
2_4x4^6  &  4.762 & 12.012 & 0.740 & 16.229
4_4x4^6  &  9.512 & 23.121 & 1.480 & 15.624
16_4x4^6  &  38.005 & 94.118 & 5.889 & 15.983
64_4x4^6  &  152.381 & 365.714 & 23.456 & 15.591
256_4x4^6  &  606.635 & 1454.546 & 92.534 & 15.719
2_4x4^7  &  19.174 & 53.333 & 3.103 & 17.189
4_4x4^7  &  38.387 & 106.361 & 6.244 & 17.034
16_4x4^7  &  153.706 & 425.444 & 24.940 & 17.058
64_4x4^7  &  613.554 & 1682.493 & 97.796 & 17.204
256_4x4^7  &  1609.539 & 3782.930 & 236.511 & 15.995
2_4x4^8  &  77.151 & 242.063 & 12.920 & 18.735
4_4x4^8  &  154.020 & 482.743 & 25.272 & 19.102
16_4x4^8  &  614.959 & 1903.775 & 100.183 & 19.003
64_4x4^8  &  1636.416 & 4059.099 & 239.686 & 16.935
256_4x4^8  &  1613.946 & 4926.396 & 235.954 & 20.879
2_4x4^9  &  308.534 & 1082.514 & 51.366 & 21.075
4_4x4^9  &  611.097 & 1575.385 & 103.578 & 15.210
16_4x4^9  &  1892.035 & 4068.510 & 239.721 & 16.972
64_4x4^9  &  1635.968 & 4249.618 & 256.969 & 16.537
256_4x4^9  &  1694.620 & 4578.178 & 236.059 & 19.394
2_4x4^10  &  947.186 & 1980.377 & 204.715 & 9.674
4_4x4^10  &  908.745 & 1913.801 & 241.419 & 7.927
16_4x4^10  &  1681.041 & 4808.475 & 262.577 & 18.313
64_4x4^10  &  1728.126 & 5056.886 & 263.577 & 19.186
256_4x4^10  &  1714.671 & 4951.810 & 239.571 & 20.670
2_4x4^11  &  993.237 & 1859.470 & 255.574 & 7.276
4_4x4^11  &  969.149 & 1902.167 & 263.879 & 7.208
16_4x4^11  &  1768.111 & 5535.135 & 269.448 & 20.543
64_4x4^11  &  1750.726 & 5491.971 & 265.215 & 20.708
256_4x4^11  &  1709.102 & 5214.519 & 249.687 & 20.884
2_4x4^12  &  1034.423 & 1748.578 & 267.766 & 6.530
4_4x4^12  &  990.687 & 1847.784 & 270.446 & 6.832
16_4x4^12  &  1799.721 & 5953.262 & 271.183 & 21.953
64_4x4^12  &  1745.670 & 5808.267 & 271.444 & 21.398
2_4x4^13  &  1042.776 & 1751.394 & 272.270 & 6.433
4_4x4^13  &  992.629 & 1735.240 & 272.241 & 6.374
16_4x4^13  &  1788.742 & 5237.963 & 271.700 & 19.278
2_4x4^14  &  1046.609 & 1757.116 & 272.092 & 6.458
4_4x4^14  &  993.955 & 1752.981 & 267.988 & 6.541
2_4x8^1  &  0.008 & 0.008 & 0.001 & 12.454
4_4x8^1  &  0.015 & 0.015 & 0.001 & 12.271
16_4x8^1  &  0.060 & 0.060 & 0.005 & 12.120
64_4x8^1  &  0.239 & 0.239 & 0.020 & 11.823
256_4x8^1  &  0.966 & 0.966 & 0.081 & 11.909
2_4x8^2  &  0.052 & 0.052 & 0.005 & 9.914
4_4x8^2  &  0.104 & 0.104 & 0.010 & 9.939
16_4x8^2  &  0.418 & 0.418 & 0.042 & 9.888
64_4x8^2  &  1.667 & 1.667 & 0.168 & 9.913
256_4x8^2  &  6.647 & 6.647 & 0.674 & 9.855
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 3 -p 4 -q 8 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 64] with F_0 [4, 8] x F_1 [4, 8] x F_2 [4, 8] x to produce Y[2, 512]
Matmul: 2 x 512 x 64, Num KP Factors: 3
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 4096 tempSize 4096
520 sizeX 512
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_4x8^3  &  1.000 & 1.000 & 0.040 & 24.820
4_4x8^3  &  0.690 & 0.690 & 0.081 & 8.553
16_4x8^3  &  2.771 & 2.771 & 0.324 & 8.538
64_4x8^3  &  11.106 & 11.106 & 1.302 & 8.529
256_4x8^3  &  44.522 & 44.522 & 5.201 & 8.560
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 4 -p 4 -q 8 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 256] with F_0 [4, 8] x F_1 [4, 8] x F_2 [4, 8] x F_3 [4, 8] x to produce Y[2, 4096]
Matmul: 2 x 4096 x 256, Num KP Factors: 4
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 32768 tempSize 32768
520 sizeX 2048
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_4x8^4  &  1.000 & 1.000 & 0.296 & 3.383
4_4x8^4  &  4.618 & 4.618 & 0.583 & 7.922
16_4x8^4  &  17.380 & 17.380 & 2.377 & 7.313
64_4x8^4  &  73.638 & 73.638 & 9.357 & 7.870
256_4x8^4  &  293.064 & 293.064 & 37.267 & 7.864
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 5 -p 4 -q 8 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 1024] with F_0 [4, 8] x F_1 [4, 8] x F_2 [4, 8] x F_3 [4, 8] x F_4 [4, 8] x to produce Y[2, 32768]
Matmul: 2 x 32768 x 1024, Num KP Factors: 5
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 262144 tempSize 262144
520 sizeX 8192
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_4x8^5  &  1.000 & 1.000 & 2.128 & 0.470
4_4x8^5  &  31.241 & 31.241 & 4.257 & 7.338
16_4x8^5  &  125.140 & 125.140 & 16.921 & 7.396
64_4x8^5  &  496.399 & 496.399 & 67.096 & 7.398
256_4x8^5  &  1835.595 & 1835.595 & 253.254 & 7.248
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 6 -p 4 -q 8 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 4096] with F_0 [4, 8] x F_1 [4, 8] x F_2 [4, 8] x F_3 [4, 8] x F_4 [4, 8] x F_5 [4, 8] x to produce Y[2, 262144]
Matmul: 2 x 262144 x 4096, Num KP Factors: 6
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 2097152 tempSize 2097152
520 sizeX 32768
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_4x8^6  &  1.000 & 1.000 & 15.329 & 0.065
4_4x8^6  &  213.584 & 213.584 & 30.502 & 7.002
16_4x8^6  &  844.413 & 844.413 & 120.668 & 6.998
64_4x8^6  &  2028.006 & 2028.006 & 384.589 & 5.273
256_4x8^6  &  2089.571 & 2089.571 & 449.363 & 4.650
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 7 -p 4 -q 8 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 16384] with F_0 [4, 8] x F_1 [4, 8] x F_2 [4, 8] x F_3 [4, 8] x F_4 [4, 8] x F_5 [4, 8] x F_6 [4, 8] x to produce Y[2, 2097152]
Matmul: 2 x 2097152 x 16384, Num KP Factors: 7
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 16777216 tempSize 16777216
520 sizeX 131072
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_4x8^7  &  1.000 & 1.000 & 111.568 & 0.009
4_4x8^7  &  935.668 & 935.668 & 212.393 & 4.405
16_4x8^7  &  2166.955 & 2166.955 & 410.972 & 5.273
64_4x8^7  &  2193.327 & 2193.327 & 453.485 & 4.837
256_4x8^7  &  2153.956 & 2153.956 & 469.644 & 4.586
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 8 -p 4 -q 8 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 65536] with F_0 [4, 8] x F_1 [4, 8] x F_2 [4, 8] x F_3 [4, 8] x F_4 [4, 8] x F_5 [4, 8] x F_6 [4, 8] x F_7 [4, 8] x to produce Y[2, 16777216]
Matmul: 2 x 16777216 x 65536, Num KP Factors: 8
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 134217728 tempSize 134217728
520 sizeX 524288
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_4x8^8  &  1.000 & 1.000 & 404.538 & 0.002
4_4x8^8  &  1134.703 & 1134.703 & 429.579 & 2.641
16_4x8^8  &  2283.845 & 2283.845 & 449.214 & 5.084
64_4x8^8  &  2216.454 & 2216.454 & 462.283 & 4.795
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 9 -p 4 -q 8 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 262144] with F_0 [4, 8] x F_1 [4, 8] x F_2 [4, 8] x F_3 [4, 8] x F_4 [4, 8] x F_5 [4, 8] x F_6 [4, 8] x F_7 [4, 8] x F_8 [4, 8] x to produce Y[2, 134217728]
Matmul: 2 x 134217728 x 262144, Num KP Factors: 9
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 1073741824 tempSize 1073741824
520 sizeX 2097152
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_4x8^9  &  1.000 & 1.000 & 448.438 & 0.002
4_4x8^9  &  1158.927 & 1158.927 & 451.635 & 2.566
2_4x16^1  &  0.015 & 0.015 & 0.001 & 12.008
4_4x16^1  &  0.030 & 0.030 & 0.002 & 12.019
16_4x16^1  &  0.120 & 0.120 & 0.010 & 12.040
64_4x16^1  &  0.483 & 0.483 & 0.040 & 11.956
256_4x16^1  &  1.923 & 1.923 & 0.161 & 11.935
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 2 -p 4 -q 16 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 16] with F_0 [4, 16] x F_1 [4, 16] x to produce Y[2, 256]
Matmul: 2 x 256 x 16, Num KP Factors: 2
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 2048 tempSize 2048
520 sizeX 128
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_4x16^2  &  1.000 & 1.000 & 0.017 & 57.556
4_4x16^2  &  0.358 & 0.358 & 0.035 & 10.260
16_4x16^2  &  1.429 & 1.429 & 0.140 & 10.176
64_4x16^2  &  5.731 & 5.731 & 0.560 & 10.227
256_4x16^2  &  22.925 & 22.925 & 2.234 & 10.263
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 3 -p 4 -q 16 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 64] with F_0 [4, 16] x F_1 [4, 16] x F_2 [4, 16] x to produce Y[2, 4096]
Matmul: 2 x 4096 x 64, Num KP Factors: 3
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 32768 tempSize 32768
520 sizeX 512
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_4x16^3  &  1.000 & 1.000 & 0.242 & 4.133
4_4x16^3  &  4.329 & 4.329 & 0.482 & 8.990
16_4x16^3  &  17.167 & 17.167 & 1.946 & 8.822
64_4x16^3  &  69.114 & 69.114 & 7.811 & 8.848
256_4x16^3  &  275.269 & 275.269 & 30.860 & 8.920
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 4 -p 4 -q 16 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 256] with F_0 [4, 16] x F_1 [4, 16] x F_2 [4, 16] x F_3 [4, 16] x to produce Y[2, 65536]
Matmul: 2 x 65536 x 256, Num KP Factors: 4
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 524288 tempSize 524288
520 sizeX 2048
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_4x16^4  &  1.000 & 1.000 & 3.362 & 0.297
4_4x16^4  &  54.780 & 54.780 & 6.713 & 8.160
16_4x16^4  &  218.378 & 218.378 & 26.657 & 8.192
64_4x16^4  &  860.433 & 860.433 & 106.724 & 8.062
256_4x16^4  &  2200.511 & 2200.511 & 393.427 & 5.593
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 5 -p 4 -q 16 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 1024] with F_0 [4, 16] x F_1 [4, 16] x F_2 [4, 16] x F_3 [4, 16] x F_4 [4, 16] x to produce Y[2, 1048576]
Matmul: 2 x 1048576 x 1024, Num KP Factors: 5
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 8388608 tempSize 8388608
520 sizeX 8192
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_4x16^5  &  1.000 & 1.000 & 46.509 & 0.022
4_4x16^5  &  691.200 & 691.200 & 93.082 & 7.426
16_4x16^5  &  2291.271 & 2291.271 & 347.354 & 6.596
64_4x16^5  &  2486.331 & 2486.331 & 638.429 & 3.894
256_4x16^5  &  2461.246 & 2461.246 & 701.728 & 3.507
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 6 -p 4 -q 16 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 4096] with F_0 [4, 16] x F_1 [4, 16] x F_2 [4, 16] x F_3 [4, 16] x F_4 [4, 16] x F_5 [4, 16] x to produce Y[2, 16777216]
Matmul: 2 x 16777216 x 4096, Num KP Factors: 6
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 134217728 tempSize 134217728
520 sizeX 32768
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_4x16^6  &  1.000 & 1.000 & 527.200 & 0.002
4_4x16^6  &  1276.456 & 1276.456 & 600.453 & 2.126
16_4x16^6  &  2747.731 & 2747.731 & 656.066 & 4.188
64_4x16^6  &  2536.867 & 2536.867 & 692.308 & 3.664
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 7 -p 4 -q 16 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 16384] with F_0 [4, 16] x F_1 [4, 16] x F_2 [4, 16] x F_3 [4, 16] x F_4 [4, 16] x F_5 [4, 16] x F_6 [4, 16] x to produce Y[2, 268435456]
Matmul: 2 x 268435456 x 16384, Num KP Factors: 7
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 2147483648 tempSize 2147483648
520 sizeX 131072
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_4x16^7  &  1.000 & 1.000 & 643.514 & 0.002
4_4x16^7  &  1309.752 & 1309.752 & 667.721 & 1.962
2_4x32^1  &  0.030 & 0.030 & 0.003 & 11.832
4_4x32^1  &  0.060 & 0.060 & 0.005 & 11.919
16_4x32^1  &  0.242 & 0.242 & 0.021 & 11.779
64_4x32^1  &  0.966 & 0.966 & 0.083 & 11.678
256_4x32^1  &  3.846 & 3.846 & 0.317 & 12.123
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 2 -p 4 -q 32 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 16] with F_0 [4, 32] x F_1 [4, 32] x to produce Y[2, 1024]
Matmul: 2 x 1024 x 16, Num KP Factors: 2
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 8192 tempSize 8192
520 sizeX 128
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_4x32^2  &  1.000 & 1.000 & 0.064 & 15.525
4_4x32^2  &  1.317 & 1.317 & 0.127 & 10.398
16_4x32^2  &  5.254 & 5.254 & 0.502 & 10.455
64_4x32^2  &  20.952 & 20.952 & 2.029 & 10.324
256_4x32^2  &  84.060 & 84.060 & 8.015 & 10.487
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 3 -p 4 -q 32 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 64] with F_0 [4, 32] x F_1 [4, 32] x F_2 [4, 32] x to produce Y[2, 32768]
Matmul: 2 x 32768 x 64, Num KP Factors: 3
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 262144 tempSize 262144
520 sizeX 512
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_4x32^3  &  1.000 & 1.000 & 1.681 & 0.595
4_4x32^3  &  30.690 & 30.690 & 3.338 & 9.194
16_4x32^3  &  122.759 & 122.759 & 13.437 & 9.136
64_4x32^3  &  486.838 & 486.838 & 53.205 & 9.150
256_4x32^3  &  1859.918 & 1859.918 & 212.959 & 8.734
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 4 -p 4 -q 32 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 256] with F_0 [4, 32] x F_1 [4, 32] x F_2 [4, 32] x F_3 [4, 32] x to produce Y[2, 1048576]
Matmul: 2 x 1048576 x 256, Num KP Factors: 4
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 8388608 tempSize 8388608
520 sizeX 2048
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_4x32^4  &  1.000 & 1.000 & 46.567 & 0.021
4_4x32^4  &  737.189 & 737.189 & 91.741 & 8.036
16_4x32^4  &  2424.011 & 2424.011 & 347.796 & 6.970
64_4x32^4  &  2636.735 & 2636.735 & 786.085 & 3.354
256_4x32^4  &  2690.913 & 2690.913 & 907.357 & 2.966
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 5 -p 4 -q 32 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 1024] with F_0 [4, 32] x F_1 [4, 32] x F_2 [4, 32] x F_3 [4, 32] x F_4 [4, 32] x to produce Y[2, 33554432]
Matmul: 2 x 33554432 x 1024, Num KP Factors: 5
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 268435456 tempSize 268435456
520 sizeX 8192
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_4x32^5  &  1.000 & 1.000 & 745.094 & 0.001
4_4x32^5  &  1378.722 & 1378.722 & 809.680 & 1.703
16_4x32^5  &  3101.630 & 3101.630 & 846.209 & 3.665
2_4x64^1  &  0.060 & 0.060 & 0.005 & 12.003
4_4x64^1  &  0.121 & 0.121 & 0.010 & 12.061
16_4x64^1  &  0.481 & 0.481 & 0.040 & 11.952
64_4x64^1  &  1.914 & 1.914 & 0.133 & 14.418
256_4x64^1  &  7.692 & 7.692 & 0.641 & 11.994
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 2 -p 4 -q 64 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 16] with F_0 [4, 64] x F_1 [4, 64] x to produce Y[2, 4096]
Matmul: 2 x 4096 x 16, Num KP Factors: 2
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 32768 tempSize 32768
520 sizeX 128
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_4x64^2  &  1.000 & 1.000 & 0.239 & 4.190
4_4x64^2  &  5.000 & 5.000 & 0.479 & 10.441
16_4x64^2  &  20.060 & 20.060 & 1.903 & 10.541
64_4x64^2  &  80.000 & 80.000 & 7.539 & 10.611
256_4x64^2  &  318.106 & 318.106 & 30.280 & 10.506
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 3 -p 4 -q 64 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 64] with F_0 [4, 64] x F_1 [4, 64] x F_2 [4, 64] x to produce Y[2, 262144]
Matmul: 2 x 262144 x 64, Num KP Factors: 3
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 2097152 tempSize 2097152
520 sizeX 512
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_4x64^3  &  1.000 & 1.000 & 12.625 & 0.079
4_4x64^3  &  226.555 & 226.555 & 25.222 & 8.982
16_4x64^3  &  906.219 & 906.219 & 100.363 & 9.029
64_4x64^3  &  2322.261 & 2322.261 & 389.574 & 5.961
256_4x64^3  &  2704.451 & 2704.451 & 876.719 & 3.085
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 4 -p 4 -q 64 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 256] with F_0 [4, 64] x F_1 [4, 64] x F_2 [4, 64] x F_3 [4, 64] x to produce Y[2, 16777216]
Matmul: 2 x 16777216 x 256, Num KP Factors: 4
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 134217728 tempSize 134217728
520 sizeX 2048
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_4x64^4  &  1.000 & 1.000 & 410.382 & 0.002
4_4x64^4  &  1354.866 & 1354.866 & 534.441 & 2.535
16_4x64^4  &  3176.733 & 3176.733 & 868.219 & 3.659
64_4x64^4  &  2713.126 & 2713.126 & 926.152 & 2.929
2_4x128^1  &  0.121 & 0.121 & 0.010 & 11.982
4_4x128^1  &  0.242 & 0.242 & 0.020 & 12.072
16_4x128^1  &  0.935 & 0.935 & 0.080 & 11.642
64_4x128^1  &  3.810 & 3.810 & 0.316 & 12.066
256_4x128^1  &  15.094 & 15.094 & 1.269 & 11.894
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 2 -p 4 -q 128 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 16] with F_0 [4, 128] x F_1 [4, 128] x to produce Y[2, 16384]
Matmul: 2 x 16384 x 16, Num KP Factors: 2
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 131072 tempSize 131072
520 sizeX 128
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_4x128^2  &  1.000 & 1.000 & 0.907 & 1.102
4_4x128^2  &  19.294 & 19.294 & 1.826 & 10.569
16_4x128^2  &  77.176 & 77.176 & 7.236 & 10.666
64_4x128^2  &  305.116 & 305.116 & 29.158 & 10.464
256_4x128^2  &  1185.989 & 1185.989 & 117.101 & 10.128
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 3 -p 4 -q 128 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 64] with F_0 [4, 128] x F_1 [4, 128] x F_2 [4, 128] x to produce Y[2, 2097152]
Matmul: 2 x 2097152 x 64, Num KP Factors: 3
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 16777216 tempSize 16777216
520 sizeX 512
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_4x128^3  &  1.000 & 1.000 & 96.823 & 0.010
4_4x128^3  &  1102.782 & 1102.782 & 188.666 & 5.845
16_4x128^3  &  2803.403 & 2803.403 & 675.688 & 4.149
64_4x128^3  &  2663.455 & 2663.455 & 925.416 & 2.878
256_4x128^3  &  2961.480 & 2961.480 & 994.690 & 2.977
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 4 -p 4 -q 128 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 256] with F_0 [4, 128] x F_1 [4, 128] x F_2 [4, 128] x F_3 [4, 128] x to produce Y[2, 268435456]
Matmul: 2 x 268435456 x 256, Num KP Factors: 4
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 2147483648 tempSize 2147483648
520 sizeX 2048
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_4x128^4  &  1.000 & 1.000 & 298.072 & 0.003
4_4x128^4  &  1415.142 & 1415.142 & 568.223 & 2.490
2_8x2^1  &  0.003 & 0.003 & 0.000 & 10.652
4_8x2^1  &  0.007 & 0.007 & 0.001 & 10.644
16_8x2^1  &  0.027 & 0.027 & 0.003 & 10.680
64_8x2^1  &  0.108 & 0.108 & 0.010 & 10.717
256_8x2^1  &  0.433 & 0.433 & 0.041 & 10.608
2_8x2^2  &  0.019 & 0.019 & 0.002 & 8.763
4_8x2^2  &  0.038 & 0.038 & 0.004 & 8.794
16_8x2^2  &  0.153 & 0.153 & 0.017 & 8.776
64_8x2^2  &  0.614 & 0.614 & 0.070 & 8.733
256_8x2^2  &  2.433 & 2.433 & 0.282 & 8.635
2_8x2^3  &  0.114 & 0.114 & 0.015 & 7.641
4_8x2^3  &  0.230 & 0.230 & 0.030 & 7.611
16_8x2^3  &  0.913 & 0.913 & 0.123 & 7.410
64_8x2^3  &  3.634 & 3.634 & 0.485 & 7.488
256_8x2^3  &  14.538 & 14.538 & 1.969 & 7.384
2_8x2^4  &  0.724 & 0.724 & 0.105 & 6.887
4_8x2^4  &  1.443 & 1.443 & 0.209 & 6.915
16_8x2^4  &  5.761 & 5.761 & 0.841 & 6.849
64_8x2^4  &  22.968 & 22.968 & 3.351 & 6.854
256_8x2^4  &  92.183 & 92.183 & 13.366 & 6.897
2_8x2^5  &  4.751 & 4.751 & 0.731 & 6.500
4_8x2^5  &  9.515 & 9.515 & 1.448 & 6.570
16_8x2^5  &  38.061 & 38.061 & 5.779 & 6.586
64_8x2^5  &  151.401 & 151.401 & 23.639 & 6.405
256_8x2^5  &  598.137 & 598.137 & 92.659 & 6.455
2_8x2^6  &  32.464 & 32.464 & 5.279 & 6.149
4_8x2^6  &  65.083 & 65.083 & 10.542 & 6.173
16_8x2^6  &  258.180 & 258.180 & 41.130 & 6.277
64_8x2^6  &  787.809 & 787.809 & 148.586 & 5.302
256_8x2^6  &  981.387 & 981.387 & 82.759 & 11.858
2_8x2^7  &  224.738 & 224.738 & 37.519 & 5.990
4_8x2^7  &  449.938 & 449.938 & 73.728 & 6.103
16_8x2^7  &  966.571 & 966.571 & 203.105 & 4.759
64_8x2^7  &  1028.128 & 1028.128 & 167.351 & 6.144
256_8x2^7  &  1059.488 & 1059.488 & 81.313 & 13.030
2_8x2^8  &  904.560 & 904.560 & 208.508 & 4.338
4_8x2^8  &  926.868 & 926.868 & 222.304 & 4.169
16_8x2^8  &  1160.432 & 1160.432 & 226.439 & 5.125
64_8x2^8  &  1079.042 & 1079.042 & 218.896 & 4.929
2_8x2^9  &  1160.729 & 1160.729 & 234.617 & 4.947
4_8x2^9  &  1048.167 & 1048.167 & 235.446 & 4.452
2_8x4^1  &  0.007 & 0.007 & 0.001 & 10.898
4_8x4^1  &  0.014 & 0.014 & 0.001 & 10.971
16_8x4^1  &  0.054 & 0.054 & 0.005 & 10.756
64_8x4^1  &  0.214 & 0.214 & 0.020 & 10.625
256_8x4^1  &  0.865 & 0.865 & 0.080 & 10.822
2_8x4^2  &  0.047 & 0.047 & 0.005 & 8.940
4_8x4^2  &  0.093 & 0.093 & 0.010 & 8.993
16_8x4^2  &  0.369 & 0.369 & 0.042 & 8.794
64_8x4^2  &  1.484 & 1.484 & 0.168 & 8.841
256_8x4^2  &  5.952 & 5.952 & 0.653 & 9.111
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 3 -p 8 -q 4 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 512] with F_0 [8, 4] x F_1 [8, 4] x F_2 [8, 4] x to produce Y[2, 64]
Matmul: 2 x 64 x 512, Num KP Factors: 3
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 512 tempSize 4096
520 sizeX 4096
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_8x4^3  &  1.000 & 1.000 & 0.040 & 24.910
4_8x4^3  &  0.616 & 0.616 & 0.081 & 7.624
16_8x4^3  &  2.468 & 2.468 & 0.323 & 7.647
64_8x4^3  &  9.870 & 9.870 & 1.293 & 7.633
256_8x4^3  &  39.395 & 39.395 & 5.175 & 7.613
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 4 -p 8 -q 4 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 4096] with F_0 [8, 4] x F_1 [8, 4] x F_2 [8, 4] x F_3 [8, 4] x to produce Y[2, 256]
Matmul: 2 x 256 x 4096, Num KP Factors: 4
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 2048 tempSize 32768
520 sizeX 32768
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_8x4^4  &  1.000 & 1.000 & 0.296 & 3.384
4_8x4^4  &  4.109 & 4.109 & 0.593 & 6.926
16_8x4^4  &  16.379 & 16.379 & 2.357 & 6.948
64_8x4^4  &  65.739 & 65.739 & 9.526 & 6.901
256_8x4^4  &  262.954 & 262.954 & 36.650 & 7.175
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 5 -p 8 -q 4 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 32768] with F_0 [8, 4] x F_1 [8, 4] x F_2 [8, 4] x F_3 [8, 4] x F_4 [8, 4] x to produce Y[2, 1024]
Matmul: 2 x 1024 x 32768, Num KP Factors: 5
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 8192 tempSize 262144
520 sizeX 262144
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_8x4^5  &  1.000 & 1.000 & 2.088 & 0.479
4_8x4^5  &  27.782 & 27.782 & 4.267 & 6.511
16_8x4^5  &  110.975 & 110.975 & 16.827 & 6.595
64_8x4^5  &  445.140 & 445.140 & 67.515 & 6.593
256_8x4^5  &  1626.122 & 1626.122 & 256.784 & 6.333
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 6 -p 8 -q 4 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 262144] with F_0 [8, 4] x F_1 [8, 4] x F_2 [8, 4] x F_3 [8, 4] x F_4 [8, 4] x F_5 [8, 4] x to produce Y[2, 4096]
Matmul: 2 x 4096 x 262144, Num KP Factors: 6
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 32768 tempSize 2097152
520 sizeX 2097152
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_8x4^6  &  1.000 & 1.000 & 15.305 & 0.065
4_8x4^6  &  191.017 & 191.017 & 30.642 & 6.234
16_8x4^6  &  764.970 & 764.970 & 120.563 & 6.345
64_8x4^6  &  1813.184 & 1813.184 & 339.888 & 5.335
256_8x4^6  &  1923.094 & 1923.094 & 209.788 & 9.167
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 7 -p 8 -q 4 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 2097152] with F_0 [8, 4] x F_1 [8, 4] x F_2 [8, 4] x F_3 [8, 4] x F_4 [8, 4] x F_5 [8, 4] x F_6 [8, 4] x to produce Y[2, 16384]
Matmul: 2 x 16384 x 2097152, Num KP Factors: 7
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 131072 tempSize 16777216
520 sizeX 16777216
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_8x4^7  &  1.000 & 1.000 & 109.383 & 0.009
4_8x4^7  &  830.734 & 830.734 & 216.527 & 3.837
16_8x4^7  &  1970.125 & 1970.125 & 426.327 & 4.621
64_8x4^7  &  2034.994 & 2034.994 & 370.540 & 5.492
256_8x4^7  &  2004.442 & 2004.442 & 207.651 & 9.653
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 8 -p 8 -q 4 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 16777216] with F_0 [8, 4] x F_1 [8, 4] x F_2 [8, 4] x F_3 [8, 4] x F_4 [8, 4] x F_5 [8, 4] x F_6 [8, 4] x F_7 [8, 4] x to produce Y[2, 65536]
Matmul: 2 x 65536 x 16777216, Num KP Factors: 8
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 524288 tempSize 134217728
520 sizeX 134217728
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_8x4^8  &  1.000 & 1.000 & 434.421 & 0.002
4_8x4^8  &  1050.138 & 1050.138 & 452.629 & 2.320
16_8x4^8  &  2124.399 & 2124.399 & 457.532 & 4.643
64_8x4^8  &  2087.740 & 2087.740 & 448.178 & 4.658
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 9 -p 8 -q 4 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 134217728] with F_0 [8, 4] x F_1 [8, 4] x F_2 [8, 4] x F_3 [8, 4] x F_4 [8, 4] x F_5 [8, 4] x F_6 [8, 4] x F_7 [8, 4] x F_8 [8, 4] x to produce Y[2, 262144]
Matmul: 2 x 262144 x 134217728, Num KP Factors: 9
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 2097152 tempSize 1073741824
520 sizeX 1073741824
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_8x4^9  &  1.000 & 1.000 & 468.932 & 0.002
4_8x4^9  &  1106.990 & 1106.990 & 469.949 & 2.356
2_8x8^1  &  0.014 & 0.014 & 0.001 & 10.823
4_8x8^1  &  0.027 & 0.027 & 0.003 & 10.805
16_8x8^1  &  0.108 & 0.108 & 0.010 & 10.827
64_8x8^1  &  0.429 & 0.437 & 0.040 & 10.874
256_8x8^1  &  1.748 & 1.731 & 0.161 & 10.747
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 2 -p 8 -q 8 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 64] with F_0 [8, 8] x F_1 [8, 8] x to produce Y[2, 64]
Matmul: 2 x 64 x 64, Num KP Factors: 2
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 512 tempSize 512
520 sizeX 512
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_8x8^2  &  1.000 & 1.000 & 0.014 & 72.294
4_8x8^2  &  0.254 & 0.254 & 0.028 & 9.118
16_8x8^2  &  1.018 & 1.018 & 0.112 & 9.128
64_8x8^2  &  4.072 & 4.060 & 0.448 & 9.061
256_8x8^2  &  16.287 & 16.287 & 1.797 & 9.061
2_8x8^3  &  1.087 & 1.087 & 0.139 & 7.834
4_8x8^3  &  2.165 & 2.169 & 0.278 & 7.794
16_8x8^3  &  8.639 & 18.349 & 1.114 & 16.470
64_8x8^3  &  34.557 & 73.394 & 4.473 & 16.410
256_8x8^3  &  138.528 & 293.578 & 17.813 & 16.481
2_8x8^4  &  9.010 & 15.761 & 1.272 & 12.392
4_8x8^4  &  17.959 & 31.335 & 2.559 & 12.246
16_8x8^4  &  71.593 & 126.090 & 10.260 & 12.289
64_8x8^4  &  286.859 & 501.365 & 40.225 & 12.464
256_8x8^4  &  1145.491 & 1976.140 & 159.729 & 12.372
2_8x8^5  &  73.501 & 153.003 & 11.112 & 13.769
4_8x8^5  &  146.592 & 306.006 & 22.262 & 13.746
16_8x8^5  &  589.663 & 1209.914 & 87.541 & 13.821
64_8x8^5  &  2368.632 & 4431.029 & 345.555 & 12.823
256_8x8^5  &  2968.378 & 5497.087 & 721.583 & 7.618
2_8x8^6  &  595.914 & 1088.417 & 93.179 & 11.681
4_8x8^6  &  1186.194 & 2135.149 & 187.201 & 11.406
16_8x8^6  &  3689.412 & 5439.133 & 701.758 & 7.751
64_8x8^6  &  3155.723 & 6607.539 & 784.854 & 8.419
256_8x8^6  &  3276.800 & 6724.456 & 648.663 & 10.367
2_8x8^7  &  3662.306 & 5148.225 & 722.048 & 7.130
4_8x8^7  &  2501.039 & 4357.853 & 794.134 & 5.488
16_8x8^7  &  3356.593 & 6549.004 & 857.922 & 7.634
64_8x8^7  &  3400.052 & 6623.025 & 838.744 & 7.896
256_8x8^7  &  3380.150 & 6399.987 & 677.108 & 9.452
2_8x8^8  &  3318.666 & 6193.428 & 867.152 & 7.142
4_8x8^8  &  2713.187 & 5469.748 & 873.900 & 6.259
16_8x8^8  &  3490.707 & 7142.589 & 886.855 & 8.054
64_8x8^8  &  3415.643 & 6814.756 & 892.426 & 7.636
2_8x8^9  &  3471.948 & 6508.907 & 892.176 & 7.296
4_8x8^9  &  2956.884 & 5474.535 & 889.234 & 6.156
2_8x16^1  &  0.027 & 0.027 & 0.002 & 11.060
4_8x16^1  &  0.055 & 0.055 & 0.005 & 10.879
16_8x16^1  &  0.216 & 0.216 & 0.020 & 10.820
64_8x16^1  &  0.865 & 0.865 & 0.080 & 10.759
256_8x16^1  &  3.462 & 3.462 & 0.323 & 10.714
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 2 -p 8 -q 16 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 64] with F_0 [8, 16] x F_1 [8, 16] x to produce Y[2, 256]
Matmul: 2 x 256 x 64, Num KP Factors: 2
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 2048 tempSize 2048
520 sizeX 512
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_8x16^2  &  1.000 & 1.000 & 0.042 & 23.939
4_8x16^2  &  0.774 & 0.774 & 0.083 & 9.325
16_8x16^2  &  3.114 & 3.114 & 0.338 & 9.213
64_8x16^2  &  12.093 & 12.093 & 1.351 & 8.948
256_8x16^2  &  49.377 & 49.377 & 5.417 & 9.115
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 3 -p 8 -q 16 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 512] with F_0 [8, 16] x F_1 [8, 16] x F_2 [8, 16] x to produce Y[2, 4096]
Matmul: 2 x 4096 x 512, Num KP Factors: 3
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 32768 tempSize 32768
520 sizeX 4096
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_8x16^3  &  1.000 & 1.000 & 0.649 & 1.540
4_8x16^3  &  10.412 & 10.412 & 1.304 & 7.987
16_8x16^3  &  41.469 & 41.469 & 5.191 & 7.988
64_8x16^3  &  165.875 & 165.875 & 20.532 & 8.079
256_8x16^3  &  662.069 & 662.069 & 81.813 & 8.092
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 4 -p 8 -q 16 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 4096] with F_0 [8, 16] x F_1 [8, 16] x F_2 [8, 16] x F_3 [8, 16] x to produce Y[2, 65536]
Matmul: 2 x 65536 x 4096, Num KP Factors: 4
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 524288 tempSize 524288
520 sizeX 32768
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_8x16^4  &  1.000 & 1.000 & 9.401 & 0.106
4_8x16^4  &  138.847 & 138.847 & 18.808 & 7.382
16_8x16^4  &  553.513 & 553.513 & 74.822 & 7.398
64_8x16^4  &  2162.904 & 2162.904 & 298.274 & 7.251
256_8x16^4  &  3258.471 & 3258.471 & 1079.717 & 3.018
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 5 -p 8 -q 16 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 32768] with F_0 [8, 16] x F_1 [8, 16] x F_2 [8, 16] x F_3 [8, 16] x F_4 [8, 16] x to produce Y[2, 1048576]
Matmul: 2 x 1048576 x 32768, Num KP Factors: 5
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 8388608 tempSize 8388608
520 sizeX 262144
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_8x16^5  &  1.000 & 1.000 & 133.797 & 0.007
4_8x16^5  &  1603.416 & 1603.416 & 274.022 & 5.851
16_8x16^5  &  3848.199 & 3848.199 & 993.818 & 3.872
64_8x16^5  &  3482.590 & 3482.590 & 1316.931 & 2.644
256_8x16^5  &  3457.258 & 3457.258 & 1389.745 & 2.488
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 6 -p 8 -q 16 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 262144] with F_0 [8, 16] x F_1 [8, 16] x F_2 [8, 16] x F_3 [8, 16] x F_4 [8, 16] x F_5 [8, 16] x to produce Y[2, 16777216]
Matmul: 2 x 16777216 x 262144, Num KP Factors: 6
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 134217728 tempSize 134217728
520 sizeX 2097152
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_8x16^6  &  1.000 & 1.000 & 1145.656 & 0.001
4_8x16^6  &  2532.537 & 2532.537 & 1264.903 & 2.002
16_8x16^6  &  4326.021 & 4326.021 & 1325.915 & 3.263
64_8x16^6  &  3590.353 & 3590.353 & 1394.523 & 2.575
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 7 -p 8 -q 16 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 2097152] with F_0 [8, 16] x F_1 [8, 16] x F_2 [8, 16] x F_3 [8, 16] x F_4 [8, 16] x F_5 [8, 16] x F_6 [8, 16] x to produce Y[2, 268435456]
Matmul: 2 x 268435456 x 2097152, Num KP Factors: 7
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 2147483648 tempSize 2147483648
520 sizeX 16777216
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_8x16^7  &  1.000 & 1.000 & 1302.997 & 0.001
4_8x16^7  &  2932.235 & 2932.235 & 1347.732 & 2.176
2_8x32^1  &  0.054 & 0.054 & 0.005 & 10.770
4_8x32^1  &  0.108 & 0.108 & 0.010 & 10.953
16_8x32^1  &  0.433 & 0.433 & 0.040 & 10.759
64_8x32^1  &  1.731 & 1.731 & 0.161 & 10.775
256_8x32^1  &  6.890 & 6.890 & 0.646 & 10.660
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 2 -p 8 -q 32 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 64] with F_0 [8, 32] x F_1 [8, 32] x to produce Y[2, 1024]
Matmul: 2 x 1024 x 64, Num KP Factors: 2
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 8192 tempSize 8192
520 sizeX 512
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_8x32^2  &  1.000 & 1.000 & 0.141 & 7.096
4_8x32^2  &  2.651 & 2.651 & 0.284 & 9.347
16_8x32^2  &  10.507 & 10.507 & 1.123 & 9.355
64_8x32^2  &  40.576 & 40.576 & 4.525 & 8.968
256_8x32^2  &  166.627 & 166.627 & 17.835 & 9.343
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 3 -p 8 -q 32 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 512] with F_0 [8, 32] x F_1 [8, 32] x F_2 [8, 32] x to produce Y[2, 32768]
Matmul: 2 x 32768 x 512, Num KP Factors: 3
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 262144 tempSize 262144
520 sizeX 4096
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_8x32^3  &  1.000 & 1.000 & 3.818 & 0.262
4_8x32^3  &  62.241 & 62.241 & 7.574 & 8.217
16_8x32^3  &  249.492 & 249.492 & 30.341 & 8.223
64_8x32^3  &  985.439 & 985.439 & 121.765 & 8.093
256_8x32^3  &  3166.656 & 3166.656 & 483.872 & 6.544
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 4 -p 8 -q 32 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 4096] with F_0 [8, 32] x F_1 [8, 32] x F_2 [8, 32] x F_3 [8, 32] x to produce Y[2, 1048576]
Matmul: 2 x 1048576 x 4096, Num KP Factors: 4
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 8388608 tempSize 8388608
520 sizeX 32768
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_8x32^4  &  1.000 & 1.000 & 105.639 & 0.009
4_8x32^4  &  1538.481 & 1538.481 & 212.357 & 7.245
16_8x32^4  &  3984.602 & 3984.602 & 823.514 & 4.839
64_8x32^4  &  3813.093 & 3813.093 & 1565.633 & 2.435
256_8x32^4  &  3715.238 & 3715.238 & 1756.223 & 2.115
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 5 -p 8 -q 32 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 32768] with F_0 [8, 32] x F_1 [8, 32] x F_2 [8, 32] x F_3 [8, 32] x F_4 [8, 32] x to produce Y[2, 33554432]
Matmul: 2 x 33554432 x 32768, Num KP Factors: 5
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 268435456 tempSize 268435456
520 sizeX 262144
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_8x32^5  &  1.000 & 1.000 & 1478.226 & 0.001
4_8x32^5  &  2880.754 & 2880.754 & 1577.505 & 1.826
16_8x32^5  &  4803.861 & 4803.861 & 1634.855 & 2.938
2_8x64^1  &  0.107 & 0.107 & 0.010 & 10.724
4_8x64^1  &  0.213 & 0.213 & 0.020 & 10.701
16_8x64^1  &  0.849 & 0.849 & 0.080 & 10.653
64_8x64^1  &  3.412 & 3.412 & 0.317 & 10.770
256_8x64^1  &  13.649 & 13.649 & 1.273 & 10.721
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 2 -p 8 -q 64 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 64] with F_0 [8, 64] x F_1 [8, 64] x to produce Y[2, 4096]
Matmul: 2 x 4096 x 64, Num KP Factors: 2
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 32768 tempSize 32768
520 sizeX 512
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_8x64^2  &  1.000 & 1.000 & 0.497 & 2.010
4_8x64^2  &  9.384 & 9.384 & 0.991 & 9.465
16_8x64^2  &  37.427 & 37.427 & 3.997 & 9.365
64_8x64^2  &  150.147 & 150.147 & 15.645 & 9.597
256_8x64^2  &  598.830 & 598.830 & 63.637 & 9.410
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 3 -p 8 -q 64 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 512] with F_0 [8, 64] x F_1 [8, 64] x F_2 [8, 64] x to produce Y[2, 262144]
Matmul: 2 x 262144 x 512, Num KP Factors: 3
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 2097152 tempSize 2097152
520 sizeX 4096
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_8x64^3  &  1.000 & 1.000 & 26.486 & 0.038
4_8x64^3  &  432.902 & 432.902 & 52.938 & 8.178
16_8x64^3  &  1717.267 & 1717.267 & 213.157 & 8.056
64_8x64^3  &  3649.901 & 3649.901 & 806.778 & 4.524
256_8x64^3  &  3895.227 & 3895.227 & 1730.418 & 2.251
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 4 -p 8 -q 64 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 4096] with F_0 [8, 64] x F_1 [8, 64] x F_2 [8, 64] x F_3 [8, 64] x to produce Y[2, 16777216]
Matmul: 2 x 16777216 x 4096, Num KP Factors: 4
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 134217728 tempSize 134217728
520 sizeX 32768
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_8x64^4  &  1.000 & 1.000 & 832.586 & 0.001
4_8x64^4  &  2815.404 & 2815.404 & 1058.789 & 2.659
16_8x64^4  &  4791.895 & 4791.895 & 1693.449 & 2.830
64_8x64^4  &  3976.967 & 3976.967 & 1797.339 & 2.213
2_8x128^1  &  0.214 & 0.214 & 0.020 & 10.669
4_8x128^1  &  0.429 & 0.429 & 0.040 & 10.754
16_8x128^1  &  1.706 & 1.706 & 0.159 & 10.706
64_8x128^1  &  6.792 & 6.792 & 0.635 & 10.700
256_8x128^1  &  27.299 & 27.299 & 2.560 & 10.664
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 2 -p 8 -q 128 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 64] with F_0 [8, 128] x F_1 [8, 128] x to produce Y[2, 16384]
Matmul: 2 x 16384 x 64, Num KP Factors: 2
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 131072 tempSize 131072
520 sizeX 512
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_8x128^2  &  1.000 & 1.000 & 1.917 & 0.522
4_8x128^2  &  35.556 & 35.556 & 3.773 & 9.423
16_8x128^2  &  142.639 & 142.639 & 14.932 & 9.553
64_8x128^2  &  567.230 & 567.230 & 61.274 & 9.257
256_8x128^2  &  2186.067 & 2186.067 & 242.081 & 9.030
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 3 -p 8 -q 128 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 512] with F_0 [8, 128] x F_1 [8, 128] x F_2 [8, 128] x to produce Y[2, 2097152]
Matmul: 2 x 2097152 x 512, Num KP Factors: 3
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 16777216 tempSize 16777216
520 sizeX 4096
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_8x128^3  &  1.000 & 1.000 & 198.733 & 0.005
4_8x128^3  &  2060.158 & 2060.158 & 385.818 & 5.340
16_8x128^3  &  4334.767 & 4334.767 & 1389.821 & 3.119
64_8x128^3  &  4176.797 & 4176.797 & 1815.273 & 2.301
256_8x128^3  &  4097.847 & 4097.847 & 1946.961 & 2.105
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 4 -p 8 -q 128 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 4096] with F_0 [8, 128] x F_1 [8, 128] x F_2 [8, 128] x F_3 [8, 128] x to produce Y[2, 268435456]
Matmul: 2 x 268435456 x 4096, Num KP Factors: 4
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 2147483648 tempSize 2147483648
520 sizeX 32768
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_8x128^4  &  1.000 & 1.000 & 593.428 & 0.002
4_8x128^4  &  3142.845 & 3142.845 & 1115.906 & 2.816
2_16x2^1  &  0.006 & 0.006 & 0.001 & 10.275
4_16x2^1  &  0.013 & 0.013 & 0.001 & 10.264
16_16x2^1  &  0.050 & 0.050 & 0.005 & 10.188
64_16x2^1  &  0.203 & 0.203 & 0.020 & 10.319
256_16x2^1  &  0.802 & 0.802 & 0.079 & 10.136
2_16x2^2  &  0.066 & 0.066 & 0.008 & 8.503
4_16x2^2  &  0.132 & 0.132 & 0.015 & 8.584
16_16x2^2  &  0.533 & 0.533 & 0.062 & 8.643
64_16x2^2  &  2.126 & 2.126 & 0.249 & 8.532
256_16x2^2  &  8.455 & 8.455 & 1.004 & 8.420
2_16x2^3  &  0.774 & 0.774 & 0.105 & 7.389
4_16x2^3  &  1.541 & 1.541 & 0.208 & 7.393
16_16x2^3  &  6.218 & 6.218 & 0.828 & 7.506
64_16x2^3  &  24.820 & 24.820 & 3.345 & 7.419
256_16x2^3  &  98.650 & 98.650 & 13.136 & 7.510
2_16x2^4  &  9.767 & 9.767 & 1.433 & 6.817
4_16x2^4  &  19.341 & 19.341 & 2.847 & 6.793
16_16x2^4  &  77.749 & 77.749 & 11.466 & 6.781
64_16x2^4  &  310.481 & 310.481 & 45.333 & 6.849
256_16x2^4  &  807.853 & 807.853 & 95.506 & 8.459
2_16x2^5  &  128.248 & 128.248 & 19.747 & 6.494
4_16x2^5  &  255.447 & 255.447 & 39.518 & 6.464
16_16x2^5  &  790.053 & 790.053 & 154.399 & 5.117
64_16x2^5  &  990.701 & 990.701 & 193.141 & 5.129
256_16x2^5  &  1095.786 & 1095.786 & 79.748 & 13.741
2_16x2^6  &  860.898 & 860.898 & 262.750 & 3.276
4_16x2^6  &  985.826 & 985.826 & 301.062 & 3.274
16_16x2^6  &  1165.616 & 1165.616 & 304.856 & 3.823
64_16x2^6  &  1121.229 & 1121.229 & 288.865 & 3.882
2_16x2^7  &  1162.227 & 1162.227 & 326.615 & 3.558
4_16x2^7  &  1152.780 & 1152.780 & 227.845 & 5.059
2_16x4^1  &  0.013 & 0.013 & 0.001 & 10.495
4_16x4^1  &  0.026 & 0.026 & 0.002 & 10.361
16_16x4^1  &  0.103 & 0.103 & 0.010 & 10.299
64_16x4^1  &  0.409 & 0.409 & 0.040 & 10.176
256_16x4^1  &  1.635 & 1.635 & 0.161 & 10.178
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 2 -p 16 -q 4 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 256] with F_0 [16, 4] x F_1 [16, 4] x to produce Y[2, 16]
Matmul: 2 x 16 x 256, Num KP Factors: 2
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 128 tempSize 2048
520 sizeX 2048
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_16x4^2  &  1.000 & 1.000 & 0.018 & 56.969
4_16x4^2  &  0.302 & 0.302 & 0.035 & 8.682
16_16x4^2  &  1.202 & 1.202 & 0.140 & 8.611
64_16x4^2  &  4.821 & 4.821 & 0.563 & 8.571
256_16x4^2  &  19.115 & 19.115 & 2.250 & 8.495
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 3 -p 16 -q 4 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 4096] with F_0 [16, 4] x F_1 [16, 4] x F_2 [16, 4] x to produce Y[2, 64]
Matmul: 2 x 64 x 4096, Num KP Factors: 3
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 512 tempSize 32768
520 sizeX 32768
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_16x4^3  &  1.000 & 1.000 & 0.240 & 4.164
4_16x4^3  &  3.631 & 3.631 & 0.490 & 7.417
16_16x4^3  &  14.495 & 14.495 & 1.951 & 7.431
64_16x4^3  &  57.607 & 57.607 & 7.718 & 7.464
256_16x4^3  &  232.414 & 232.414 & 30.611 & 7.593
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 4 -p 16 -q 4 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 65536] with F_0 [16, 4] x F_1 [16, 4] x F_2 [16, 4] x F_3 [16, 4] x to produce Y[2, 256]
Matmul: 2 x 256 x 65536, Num KP Factors: 4
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 2048 tempSize 524288
520 sizeX 524288
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_16x4^4  &  1.000 & 1.000 & 3.331 & 0.300
4_16x4^4  &  46.058 & 46.058 & 6.653 & 6.923
16_16x4^4  &  183.609 & 183.609 & 26.461 & 6.939
64_16x4^4  &  735.676 & 735.676 & 105.543 & 6.970
256_16x4^4  &  1845.424 & 1845.424 & 212.345 & 8.691
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 5 -p 16 -q 4 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 1048576] with F_0 [16, 4] x F_1 [16, 4] x F_2 [16, 4] x F_3 [16, 4] x F_4 [16, 4] x to produce Y[2, 1024]
Matmul: 2 x 1024 x 1048576, Num KP Factors: 5
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 8192 tempSize 8388608
520 sizeX 8388608
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_16x4^5  &  1.000 & 1.000 & 46.703 & 0.021
4_16x4^5  &  599.670 & 599.670 & 91.877 & 6.527
16_16x4^5  &  1851.792 & 1851.792 & 366.540 & 5.052
64_16x4^5  &  2263.435 & 2263.435 & 410.301 & 5.517
256_16x4^5  &  2352.829 & 2352.829 & 178.684 & 13.168
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 6 -p 16 -q 4 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 16777216] with F_0 [16, 4] x F_1 [16, 4] x F_2 [16, 4] x F_3 [16, 4] x F_4 [16, 4] x F_5 [16, 4] x to produce Y[2, 4096]
Matmul: 2 x 4096 x 16777216, Num KP Factors: 6
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 32768 tempSize 134217728
520 sizeX 134217728
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_16x4^6  &  1.000 & 1.000 & 565.243 & 0.002
4_16x4^6  &  1108.504 & 1108.504 & 604.638 & 1.833
16_16x4^6  &  2479.070 & 2479.070 & 611.817 & 4.052
64_16x4^6  &  2479.675 & 2479.675 & 586.034 & 4.231
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 7 -p 16 -q 4 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 268435456] with F_0 [16, 4] x F_1 [16, 4] x F_2 [16, 4] x F_3 [16, 4] x F_4 [16, 4] x F_5 [16, 4] x F_6 [16, 4] x to produce Y[2, 16384]
Matmul: 2 x 16384 x 268435456, Num KP Factors: 7
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 131072 tempSize 2147483648
520 sizeX 2147483648
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_16x4^7  &  1.000 & 1.000 & 650.460 & 0.002
4_16x4^7  &  1175.706 & 1175.706 & 474.297 & 2.479
2_16x8^1  &  0.026 & 0.026 & 0.002 & 10.299
4_16x8^1  &  0.051 & 0.051 & 0.005 & 10.167
16_16x8^1  &  0.205 & 0.205 & 0.020 & 10.316
64_16x8^1  &  0.817 & 0.817 & 0.081 & 10.105
256_16x8^1  &  3.285 & 3.285 & 0.320 & 10.266
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 2 -p 16 -q 8 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 256] with F_0 [16, 8] x F_1 [16, 8] x to produce Y[2, 64]
Matmul: 2 x 64 x 256, Num KP Factors: 2
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 512 tempSize 2048
520 sizeX 2048
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_16x8^2  &  1.000 & 1.000 & 0.042 & 24.048
4_16x8^2  &  0.731 & 0.731 & 0.084 & 8.735
16_16x8^2  &  2.925 & 2.925 & 0.335 & 8.731
64_16x8^2  &  11.701 & 11.701 & 1.351 & 8.663
256_16x8^2  &  46.806 & 46.806 & 5.407 & 8.656
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 3 -p 16 -q 8 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 4096] with F_0 [16, 8] x F_1 [16, 8] x F_2 [16, 8] x to produce Y[2, 512]
Matmul: 2 x 512 x 4096, Num KP Factors: 3
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 4096 tempSize 32768
520 sizeX 32768
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_16x8^3  &  1.000 & 1.000 & 0.646 & 1.547
4_16x8^3  &  9.762 & 9.762 & 1.297 & 7.524
16_16x8^3  &  39.134 & 39.134 & 5.168 & 7.573
64_16x8^3  &  156.199 & 156.199 & 20.604 & 7.581
256_16x8^3  &  623.448 & 623.448 & 81.716 & 7.629
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 4 -p 16 -q 8 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 65536] with F_0 [16, 8] x F_1 [16, 8] x F_2 [16, 8] x F_3 [16, 8] x to produce Y[2, 4096]
Matmul: 2 x 4096 x 65536, Num KP Factors: 4
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 32768 tempSize 524288
520 sizeX 524288
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_16x8^4  &  1.000 & 1.000 & 9.186 & 0.109
4_16x8^4  &  130.270 & 130.270 & 18.415 & 7.074
16_16x8^4  &  522.847 & 522.847 & 74.754 & 6.994
64_16x8^4  &  2087.851 & 2087.851 & 295.833 & 7.058
256_16x8^4  &  3211.243 & 3211.243 & 528.479 & 6.076
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 5 -p 16 -q 8 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 1048576] with F_0 [16, 8] x F_1 [16, 8] x F_2 [16, 8] x F_3 [16, 8] x F_4 [16, 8] x to produce Y[2, 32768]
Matmul: 2 x 32768 x 1048576, Num KP Factors: 5
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 262144 tempSize 8388608
520 sizeX 8388608
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_16x8^5  &  1.000 & 1.000 & 131.869 & 0.008
4_16x8^5  &  1687.427 & 1687.427 & 264.608 & 6.377
16_16x8^5  &  3755.926 & 3755.926 & 987.788 & 3.802
64_16x8^5  &  3939.071 & 3939.071 & 919.465 & 4.284
256_16x8^5  &  3682.880 & 3682.880 & 461.239 & 7.985
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 6 -p 16 -q 8 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 16777216] with F_0 [16, 8] x F_1 [16, 8] x F_2 [16, 8] x F_3 [16, 8] x F_4 [16, 8] x F_5 [16, 8] x to produce Y[2, 262144]
Matmul: 2 x 262144 x 16777216, Num KP Factors: 6
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 2097152 tempSize 134217728
520 sizeX 134217728
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_16x8^6  &  1.000 & 1.000 & 1162.418 & 0.001
4_16x8^6  &  3116.320 & 3116.320 & 1216.183 & 2.562
16_16x8^6  &  4338.509 & 4338.509 & 1224.041 & 3.544
64_16x8^6  &  4147.224 & 4147.224 & 1202.483 & 3.449
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 7 -p 16 -q 8 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 268435456] with F_0 [16, 8] x F_1 [16, 8] x F_2 [16, 8] x F_3 [16, 8] x F_4 [16, 8] x F_5 [16, 8] x F_6 [16, 8] x to produce Y[2, 2097152]
Matmul: 2 x 2097152 x 268435456, Num KP Factors: 7
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 16777216 tempSize 2147483648
520 sizeX 2147483648
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_16x8^7  &  1.000 & 1.000 & 1275.192 & 0.001
4_16x8^7  &  3616.655 & 3616.655 & 1024.841 & 3.529
2_16x16^1  &  0.051 & 0.051 & 0.005 & 10.272
4_16x16^1  &  0.103 & 0.102 & 0.010 & 10.255
16_16x16^1  &  0.407 & 0.405 & 0.040 & 10.180
64_16x16^1  &  1.635 & 1.627 & 0.162 & 10.033
256_16x16^1  &  6.507 & 6.538 & 0.648 & 10.093
2_16x16^2  &  0.988 & 0.988 & 0.112 & 8.845
4_16x16^2  &  1.976 & 1.982 & 0.224 & 8.851
16_16x16^2  &  7.881 & 12.512 & 0.905 & 13.828
64_16x16^2  &  31.243 & 50.286 & 3.632 & 13.844
256_16x16^2  &  124.970 & 200.190 & 14.045 & 14.254
2_16x16^3  &  17.043 & 23.403 & 2.174 & 10.764
4_16x16^3  &  33.939 & 33.793 & 4.465 & 7.569
16_16x16^3  &  134.882 & 185.562 & 17.739 & 10.461
64_16x16^3  &  531.525 & 729.302 & 71.080 & 10.260
256_16x16^3  &  2139.701 & 2942.874 & 285.858 & 10.295
2_16x16^4  &  282.993 & 485.131 & 40.737 & 11.909
4_16x16^4  &  560.269 & 559.328 & 81.606 & 6.854
16_16x16^4  &  2241.078 & 3881.050 & 319.858 & 12.134
64_16x16^4  &  5670.713 & 7639.598 & 1257.006 & 6.078
256_16x16^4  &  5527.952 & 9067.348 & 1446.475 & 6.269
2_16x16^5  &  1631.953 & 3889.520 & 687.665 & 5.656
4_16x16^5  &  1676.483 & 2757.905 & 1360.966 & 2.026
16_16x16^5  &  6159.684 & 8826.764 & 2109.849 & 4.184
64_16x16^5  &  6274.723 & 9330.198 & 2075.621 & 4.495
256_16x16^5  &  5746.827 & 8846.991 & 1451.622 & 6.095
2_16x16^6  &  1774.407 & 9161.251 & 2166.963 & 4.228
4_16x16^6  &  1765.684 & 5295.508 & 2264.652 & 2.338
16_16x16^6  &  6714.630 & 11235.653 & 2266.090 & 4.958
64_16x16^6  &  6404.586 & 10978.016 & 2321.026 & 4.730
2_16x16^7  &  1784.493 & 6006.991 & 2260.229 & 2.658
4_16x16^7  &  1769.146 & 4331.834 & 2191.234 & 1.977
2_16x32^1  &  0.101 & 0.101 & 0.010 & 10.494
4_16x32^1  &  0.201 & 0.201 & 0.020 & 10.048
16_16x32^1  &  0.806 & 0.806 & 0.080 & 10.111
64_16x32^1  &  3.192 & 3.192 & 0.321 & 9.951
256_16x32^1  &  12.891 & 12.891 & 1.284 & 10.038
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 2 -p 16 -q 32 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 256] with F_0 [16, 32] x F_1 [16, 32] x to produce Y[2, 1024]
Matmul: 2 x 1024 x 256, Num KP Factors: 2
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 8192 tempSize 8192
520 sizeX 2048
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_16x32^2  &  1.000 & 1.000 & 0.333 & 3.001
4_16x32^2  &  5.865 & 5.865 & 0.681 & 8.607
16_16x32^2  &  23.324 & 23.324 & 2.677 & 8.711
64_16x32^2  &  93.567 & 93.567 & 10.628 & 8.803
256_16x32^2  &  375.367 & 375.367 & 41.813 & 8.977
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 3 -p 16 -q 32 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 4096] with F_0 [16, 32] x F_1 [16, 32] x F_2 [16, 32] x to produce Y[2, 32768]
Matmul: 2 x 32768 x 4096, Num KP Factors: 3
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 262144 tempSize 262144
520 sizeX 32768
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_16x32^3  &  1.000 & 1.000 & 10.179 & 0.098
4_16x32^3  &  157.288 & 157.288 & 20.305 & 7.746
16_16x32^3  &  629.153 & 629.153 & 80.635 & 7.803
64_16x32^3  &  2490.231 & 2490.231 & 323.811 & 7.690
256_16x32^3  &  6617.493 & 6617.493 & 1212.358 & 5.458
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 4 -p 16 -q 32 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 65536] with F_0 [16, 32] x F_1 [16, 32] x F_2 [16, 32] x F_3 [16, 32] x to produce Y[2, 1048576]
Matmul: 2 x 1048576 x 65536, Num KP Factors: 4
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 8388608 tempSize 8388608
520 sizeX 524288
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_16x32^4  &  1.000 & 1.000 & 289.917 & 0.003
4_16x32^4  &  2704.494 & 2704.494 & 600.006 & 4.507
16_16x32^4  &  7541.262 & 7541.262 & 2183.782 & 3.453
64_16x32^4  &  7976.505 & 7976.505 & 3050.007 & 2.615
256_16x32^4  &  7778.009 & 7778.009 & 2984.941 & 2.606
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 5 -p 16 -q 32 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 1048576] with F_0 [16, 32] x F_1 [16, 32] x F_2 [16, 32] x F_3 [16, 32] x F_4 [16, 32] x to produce Y[2, 33554432]
Matmul: 2 x 33554432 x 1048576, Num KP Factors: 5
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 268435456 tempSize 268435456
520 sizeX 8388608
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_16x32^5  &  1.000 & 1.000 & 2898.430 & 0.000
4_16x32^5  &  3813.350 & 3813.350 & 3003.020 & 1.270
16_16x32^5  &  8570.737 & 8570.737 & 3037.346 & 2.822
2_16x64^1  &  0.200 & 0.200 & 0.020 & 10.054
4_16x64^1  &  0.401 & 0.401 & 0.040 & 10.035
16_16x64^1  &  1.604 & 1.604 & 0.161 & 9.979
64_16x64^1  &  6.507 & 6.507 & 0.639 & 10.179
256_16x64^1  &  25.782 & 25.782 & 2.540 & 10.149
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 2 -p 16 -q 64 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 256] with F_0 [16, 64] x F_1 [16, 64] x to produce Y[2, 4096]
Matmul: 2 x 4096 x 256, Num KP Factors: 2
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 32768 tempSize 32768
520 sizeX 2048
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_16x64^2  &  1.000 & 1.000 & 1.106 & 0.904
4_16x64^2  &  19.765 & 19.765 & 2.225 & 8.883
16_16x64^2  &  78.367 & 78.367 & 8.866 & 8.839
64_16x64^2  &  315.308 & 315.308 & 35.577 & 8.863
256_16x64^2  &  1250.233 & 1250.233 & 139.954 & 8.933
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 3 -p 16 -q 64 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 4096] with F_0 [16, 64] x F_1 [16, 64] x F_2 [16, 64] x to produce Y[2, 262144]
Matmul: 2 x 262144 x 4096, Num KP Factors: 3
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 2097152 tempSize 2097152
520 sizeX 32768
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_16x64^3  &  1.000 & 1.000 & 61.474 & 0.016
4_16x64^3  &  932.836 & 932.836 & 121.302 & 7.690
16_16x64^3  &  3731.346 & 3731.346 & 482.292 & 7.737
64_16x64^3  &  7835.826 & 7835.826 & 1833.884 & 4.273
256_16x64^3  &  8597.448 & 8597.448 & 3362.138 & 2.557
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 4 -p 16 -q 64 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 65536] with F_0 [16, 64] x F_1 [16, 64] x F_2 [16, 64] x F_3 [16, 64] x to produce Y[2, 16777216]
Matmul: 2 x 16777216 x 65536, Num KP Factors: 4
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 134217728 tempSize 134217728
520 sizeX 524288
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_16x64^4  &  1.000 & 1.000 & 1660.101 & 0.001
4_16x64^4  &  3850.478 & 3850.478 & 2117.814 & 1.818
16_16x64^4  &  9754.502 & 9754.502 & 3263.723 & 2.989
64_16x64^4  &  9183.914 & 9183.914 & 3427.630 & 2.679
2_16x128^1  &  0.405 & 0.405 & 0.040 & 10.121
4_16x128^1  &  0.806 & 0.806 & 0.080 & 10.102
16_16x128^1  &  3.238 & 3.238 & 0.319 & 10.162
64_16x128^1  &  12.952 & 12.952 & 1.274 & 10.164
256_16x128^1  &  51.321 & 51.321 & 5.088 & 10.087
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 2 -p 16 -q 128 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 256] with F_0 [16, 128] x F_1 [16, 128] x to produce Y[2, 16384]
Matmul: 2 x 16384 x 256, Num KP Factors: 2
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 131072 tempSize 131072
520 sizeX 2048
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_16x128^2  &  1.000 & 1.000 & 3.975 & 0.252
4_16x128^2  &  71.111 & 71.111 & 7.966 & 8.927
16_16x128^2  &  282.791 & 282.791 & 31.646 & 8.936
64_16x128^2  &  1131.163 & 1131.163 & 126.826 & 8.919
256_16x128^2  &  4372.135 & 4372.135 & 508.200 & 8.603
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 3 -p 16 -q 128 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 4096] with F_0 [16, 128] x F_1 [16, 128] x F_2 [16, 128] x to produce Y[2, 2097152]
Matmul: 2 x 2097152 x 4096, Num KP Factors: 3
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 16777216 tempSize 16777216
520 sizeX 32768
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_16x128^3  &  1.000 & 1.000 & 420.507 & 0.002
4_16x128^3  &  3355.234 & 3355.234 & 833.699 & 4.025
16_16x128^3  &  9485.474 & 9485.474 & 2878.470 & 3.295
64_16x128^3  &  9564.579 & 9564.579 & 3545.637 & 2.698
256_16x128^3  &  9674.137 & 9674.137 & 3747.763 & 2.581
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 4 -p 16 -q 128 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 65536] with F_0 [16, 128] x F_1 [16, 128] x F_2 [16, 128] x F_3 [16, 128] x to produce Y[2, 268435456]
Matmul: 2 x 268435456 x 65536, Num KP Factors: 4
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 2147483648 tempSize 2147483648
520 sizeX 524288
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_16x128^4  &  1.000 & 1.000 & 1174.271 & 0.001
4_16x128^4  &  4180.137 & 4180.137 & 2182.457 & 1.915
2_32x2^1  &  0.012 & 0.012 & 0.001 & 9.875
4_32x2^1  &  0.024 & 0.024 & 0.002 & 9.840
16_32x2^1  &  0.097 & 0.097 & 0.010 & 9.824
64_32x2^1  &  0.391 & 0.391 & 0.040 & 9.864
256_32x2^1  &  1.564 & 1.564 & 0.159 & 9.809
2_32x2^2  &  0.248 & 0.248 & 0.029 & 8.441
4_32x2^2  &  0.502 & 0.502 & 0.058 & 8.644
16_32x2^2  &  1.992 & 1.992 & 0.236 & 8.440
64_32x2^2  &  7.945 & 7.945 & 0.871 & 9.122
256_32x2^2  &  31.871 & 31.871 & 3.599 & 8.856
2_32x2^3  &  5.785 & 5.785 & 0.773 & 7.487
4_32x2^3  &  11.569 & 11.569 & 1.552 & 7.453
16_32x2^3  &  46.179 & 46.179 & 6.219 & 7.425
64_32x2^3  &  184.715 & 184.715 & 24.724 & 7.471
256_32x2^3  &  564.588 & 564.588 & 97.318 & 5.801
2_32x2^4  &  145.392 & 145.392 & 21.093 & 6.893
4_32x2^4  &  290.784 & 290.784 & 42.130 & 6.902
16_32x2^4  &  752.470 & 752.470 & 167.898 & 4.482
64_32x2^4  &  1026.121 & 1026.121 & 208.157 & 4.930
256_32x2^4  &  1121.050 & 1121.050 & 78.622 & 14.259
2_32x2^5  &  963.875 & 963.875 & 359.224 & 2.683
4_32x2^5  &  1053.778 & 1053.778 & 374.621 & 2.813
16_32x2^5  &  1228.829 & 1228.829 & 363.162 & 3.384
2_32x4^1  &  0.024 & 0.024 & 0.002 & 9.877
4_32x4^1  &  0.049 & 0.049 & 0.005 & 9.811
16_32x4^1  &  0.195 & 0.195 & 0.020 & 9.910
64_32x4^1  &  0.782 & 0.782 & 0.080 & 9.827
256_32x4^1  &  3.128 & 3.128 & 0.316 & 9.893
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 2 -p 32 -q 4 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 1024] with F_0 [32, 4] x F_1 [32, 4] x to produce Y[2, 16]
Matmul: 2 x 16 x 1024, Num KP Factors: 2
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 128 tempSize 8192
520 sizeX 8192
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_32x4^2  &  1.000 & 1.000 & 0.062 & 16.233
4_32x4^2  &  1.059 & 1.059 & 0.123 & 8.619
16_32x4^2  &  4.225 & 4.225 & 0.496 & 8.511
64_32x4^2  &  16.950 & 16.950 & 1.992 & 8.511
256_32x4^2  &  67.209 & 67.209 & 8.077 & 8.321
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 3 -p 32 -q 4 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 32768] with F_0 [32, 4] x F_1 [32, 4] x F_2 [32, 4] x to produce Y[2, 64]
Matmul: 2 x 64 x 32768, Num KP Factors: 3
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 512 tempSize 262144
520 sizeX 262144
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_32x4^3  &  1.000 & 1.000 & 1.684 & 0.594
4_32x4^3  &  24.497 & 24.497 & 3.388 & 7.231
16_32x4^3  &  98.608 & 98.608 & 13.406 & 7.355
64_32x4^3  &  391.950 & 391.950 & 53.624 & 7.309
256_32x4^3  &  1244.326 & 1244.326 & 212.115 & 5.866
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 4 -p 32 -q 4 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 1048576] with F_0 [32, 4] x F_1 [32, 4] x F_2 [32, 4] x F_3 [32, 4] x to produce Y[2, 256]
Matmul: 2 x 256 x 1048576, Num KP Factors: 4
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 2048 tempSize 8388608
520 sizeX 8388608
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_32x4^4  &  1.000 & 1.000 & 45.939 & 0.022
4_32x4^4  &  588.711 & 588.711 & 89.985 & 6.542
16_32x4^4  &  1701.909 & 1701.909 & 340.866 & 4.993
64_32x4^4  &  2305.897 & 2305.897 & 429.167 & 5.373
256_32x4^4  &  2429.327 & 2429.327 & 166.006 & 14.634
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 5 -p 32 -q 4 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 33554432] with F_0 [32, 4] x F_1 [32, 4] x F_2 [32, 4] x F_3 [32, 4] x F_4 [32, 4] x to produce Y[2, 1024]
Matmul: 2 x 1024 x 33554432, Num KP Factors: 5
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 8192 tempSize 268435456
520 sizeX 268435456
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_32x4^5  &  1.000 & 1.000 & 720.076 & 0.001
4_32x4^5  &  1141.497 & 1141.497 & 748.627 & 1.525
16_32x4^5  &  2684.462 & 2684.462 & 726.566 & 3.695
2_32x8^1  &  0.049 & 0.049 & 0.005 & 9.835
4_32x8^1  &  0.098 & 0.098 & 0.010 & 9.907
16_32x8^1  &  0.393 & 0.393 & 0.040 & 9.931
64_32x8^1  &  1.564 & 1.564 & 0.160 & 9.770
256_32x8^1  &  6.256 & 6.256 & 0.639 & 9.784
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 2 -p 32 -q 8 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 1024] with F_0 [32, 8] x F_1 [32, 8] x to produce Y[2, 64]
Matmul: 2 x 64 x 1024, Num KP Factors: 2
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 512 tempSize 8192
520 sizeX 8192
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_32x8^2  &  1.000 & 1.000 & 0.138 & 7.257
4_32x8^2  &  2.347 & 2.347 & 0.274 & 8.565
16_32x8^2  &  9.443 & 9.443 & 1.108 & 8.525
64_32x8^2  &  37.551 & 37.551 & 4.462 & 8.415
256_32x8^2  &  150.643 & 150.643 & 17.567 & 8.575
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 3 -p 32 -q 8 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 32768] with F_0 [32, 8] x F_1 [32, 8] x F_2 [32, 8] x to produce Y[2, 512]
Matmul: 2 x 512 x 32768, Num KP Factors: 3
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 4096 tempSize 262144
520 sizeX 262144
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_32x8^3  &  1.000 & 1.000 & 3.834 & 0.261
4_32x8^3  &  57.155 & 57.155 & 7.688 & 7.434
16_32x8^3  &  227.653 & 227.653 & 30.595 & 7.441
64_32x8^3  &  908.692 & 908.692 & 122.297 & 7.430
256_32x8^3  &  2910.270 & 2910.270 & 476.077 & 6.113
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 4 -p 32 -q 8 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 1048576] with F_0 [32, 8] x F_1 [32, 8] x F_2 [32, 8] x F_3 [32, 8] x to produce Y[2, 4096]
Matmul: 2 x 4096 x 1048576, Num KP Factors: 4
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 32768 tempSize 8388608
520 sizeX 8388608
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_32x8^4  &  1.000 & 1.000 & 103.820 & 0.010
4_32x8^4  &  1429.754 & 1429.754 & 211.110 & 6.773
16_32x8^4  &  3650.818 & 3650.818 & 829.544 & 4.401
64_32x8^4  &  4353.600 & 4353.600 & 914.215 & 4.762
256_32x8^4  &  4345.791 & 4345.791 & 372.543 & 11.665
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 5 -p 32 -q 8 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 33554432] with F_0 [32, 8] x F_1 [32, 8] x F_2 [32, 8] x F_3 [32, 8] x F_4 [32, 8] x to produce Y[2, 32768]
Matmul: 2 x 32768 x 33554432, Num KP Factors: 5
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 262144 tempSize 268435456
520 sizeX 268435456
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_32x8^5  &  1.000 & 1.000 & 1440.528 & 0.001
4_32x8^5  &  3656.233 & 3656.233 & 1486.836 & 2.459
16_32x8^5  &  5133.642 & 5133.642 & 1451.016 & 3.538
2_32x16^1  &  0.098 & 0.098 & 0.010 & 9.877
4_32x16^1  &  0.195 & 0.195 & 0.020 & 9.828
16_32x16^1  &  0.786 & 0.786 & 0.079 & 9.895
64_32x16^1  &  3.128 & 3.128 & 0.320 & 9.784
256_32x16^1  &  12.512 & 12.512 & 1.282 & 9.757
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 2 -p 32 -q 16 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 1024] with F_0 [32, 16] x F_1 [32, 16] x to produce Y[2, 256]
Matmul: 2 x 256 x 1024, Num KP Factors: 2
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 2048 tempSize 8192
520 sizeX 8192
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_32x16^2  &  1.000 & 1.000 & 0.328 & 3.045
4_32x16^2  &  5.640 & 5.640 & 0.663 & 8.505
16_32x16^2  &  22.824 & 22.824 & 2.644 & 8.631
64_32x16^2  &  91.026 & 91.026 & 10.545 & 8.632
256_32x16^2  &  361.983 & 361.983 & 41.846 & 8.650
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 3 -p 32 -q 16 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 32768] with F_0 [32, 16] x F_1 [32, 16] x F_2 [32, 16] x to produce Y[2, 4096]
Matmul: 2 x 4096 x 32768, Num KP Factors: 3
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 32768 tempSize 262144
520 sizeX 262144
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_32x16^3  &  1.000 & 1.000 & 10.177 & 0.098
4_32x16^3  &  151.899 & 151.899 & 20.127 & 7.547
16_32x16^3  &  606.316 & 606.316 & 79.933 & 7.585
64_32x16^3  &  2430.380 & 2430.380 & 321.277 & 7.565
256_32x16^3  &  6210.243 & 6210.243 & 1256.585 & 4.942
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 4 -p 32 -q 16 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 1048576] with F_0 [32, 16] x F_1 [32, 16] x F_2 [32, 16] x F_3 [32, 16] x to produce Y[2, 65536]
Matmul: 2 x 65536 x 1048576, Num KP Factors: 4
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 524288 tempSize 8388608
520 sizeX 8388608
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_32x16^4  &  1.000 & 1.000 & 290.332 & 0.003
4_32x16^4  &  2485.086 & 2485.086 & 587.843 & 4.227
16_32x16^4  &  7227.351 & 7227.351 & 2222.405 & 3.252
64_32x16^4  &  7887.014 & 7887.014 & 2032.848 & 3.880
256_32x16^4  &  7666.428 & 7666.428 & 951.269 & 8.059
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 5 -p 32 -q 16 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 33554432] with F_0 [32, 16] x F_1 [32, 16] x F_2 [32, 16] x F_3 [32, 16] x F_4 [32, 16] x to produce Y[2, 1048576]
Matmul: 2 x 1048576 x 33554432, Num KP Factors: 5
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 8388608 tempSize 268435456
520 sizeX 268435456
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_32x16^5  &  1.000 & 1.000 & 2804.076 & 0.000
4_32x16^5  &  4330.400 & 4330.400 & 2895.545 & 1.496
16_32x16^5  &  8722.556 & 8722.556 & 2883.274 & 3.025
2_32x32^1  &  0.195 & 0.195 & 0.020 & 9.841
4_32x32^1  &  0.389 & 0.391 & 0.040 & 9.861
16_32x32^1  &  1.564 & 1.564 & 0.159 & 9.864
64_32x32^1  &  6.197 & 6.286 & 0.637 & 9.874
256_32x32^1  &  24.789 & 25.024 & 2.531 & 9.886
2_32x32^2  &  7.670 & 7.670 & 0.877 & 8.742
4_32x32^2  &  15.249 & 15.339 & 1.749 & 8.770
16_32x32^2  &  60.997 & 60.819 & 6.989 & 8.702
64_32x32^2  &  246.154 & 244.706 & 28.356 & 8.630
256_32x32^2  &  973.099 & 967.442 & 113.461 & 8.527
2_32x32^3  &  263.051 & 263.609 & 34.776 & 7.580
4_32x32^3  &  528.340 & 528.340 & 70.238 & 7.522
16_32x32^3  &  2108.875 & 2099.958 & 277.406 & 7.570
64_32x32^3  &  8399.831 & 8382.110 & 1111.232 & 7.543
256_32x32^3  &  10738.163 & 10709.219 & 3400.483 & 3.149
2_32x32^4  &  7909.940 & 7909.940 & 1251.000 & 6.323
4_32x32^4  &  6956.998 & 7003.101 & 2555.959 & 2.740
16_32x32^4  &  11735.347 & 11741.866 & 4506.980 & 2.605
64_32x32^4  &  12909.061 & 12902.165 & 4292.260 & 3.006
256_32x32^4  &  12568.414 & 12558.845 & 2750.059 & 4.567
2_32x32^5  &  11989.428 & 11985.342 & 4851.501 & 2.470
4_32x32^5  &  10092.105 & 10070.193 & 4957.318 & 2.031
16_32x32^5  &  12781.896 & 12805.554 & 4954.809 & 2.584
2_32x64^1  &  0.397 & 0.397 & 0.040 & 9.941
4_32x64^1  &  0.789 & 0.789 & 0.079 & 9.956
16_32x64^1  &  3.173 & 3.173 & 0.319 & 9.955
64_32x64^1  &  12.754 & 12.754 & 1.278 & 9.982
256_32x64^1  &  50.526 & 50.526 & 5.097 & 9.912
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 2 -p 32 -q 64 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 1024] with F_0 [32, 64] x F_1 [32, 64] x to produce Y[2, 4096]
Matmul: 2 x 4096 x 1024, Num KP Factors: 2
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 32768 tempSize 32768
520 sizeX 8192
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_32x64^2  &  1.000 & 1.000 & 2.636 & 0.379
4_32x64^2  &  46.667 & 46.667 & 5.291 & 8.820
16_32x64^2  &  187.224 & 187.224 & 21.346 & 8.771
64_32x64^2  &  742.248 & 742.248 & 84.700 & 8.763
256_32x64^2  &  2934.269 & 2934.269 & 341.983 & 8.580
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 3 -p 32 -q 64 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 32768] with F_0 [32, 64] x F_1 [32, 64] x F_2 [32, 64] x to produce Y[2, 262144]
Matmul: 2 x 262144 x 32768, Num KP Factors: 3
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 2097152 tempSize 2097152
520 sizeX 262144
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_32x64^3  &  1.000 & 1.000 & 161.650 & 0.006
4_32x64^3  &  2452.437 & 2452.437 & 326.126 & 7.520
16_32x64^3  &  9395.251 & 9395.251 & 1317.414 & 7.132
64_32x64^3  &  13006.796 & 13006.796 & 4797.480 & 2.711
256_32x64^3  &  14506.997 & 14506.997 & 5863.190 & 2.474
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 4 -p 32 -q 64 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 1048576] with F_0 [32, 64] x F_1 [32, 64] x F_2 [32, 64] x F_3 [32, 64] x to produce Y[2, 16777216]
Matmul: 2 x 16777216 x 1048576, Num KP Factors: 4
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 134217728 tempSize 134217728
520 sizeX 8388608
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_32x64^4  &  1.000 & 1.000 & 3324.115 & 0.000
4_32x64^4  &  8864.071 & 8864.071 & 4061.493 & 2.182
16_32x64^4  &  14468.023 & 14468.023 & 6127.847 & 2.361
64_32x64^4  &  15442.386 & 15442.386 & 6299.328 & 2.451
2_32x128^1  &  0.782 & 0.782 & 0.080 & 9.795
4_32x128^1  &  1.571 & 1.571 & 0.160 & 9.851
16_32x128^1  &  6.286 & 6.286 & 0.638 & 9.856
64_32x128^1  &  25.143 & 25.143 & 2.543 & 9.886
256_32x128^1  &  99.623 & 99.623 & 10.155 & 9.810
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 2 -p 32 -q 128 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 1024] with F_0 [32, 128] x F_1 [32, 128] x to produce Y[2, 16384]
Matmul: 2 x 16384 x 1024, Num KP Factors: 2
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 131072 tempSize 131072
520 sizeX 8192
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_32x128^2  &  1.000 & 1.000 & 8.933 & 0.112
4_32x128^2  &  153.003 & 153.003 & 17.723 & 8.633
16_32x128^2  &  612.012 & 612.012 & 69.611 & 8.792
64_32x128^2  &  2433.855 & 2433.855 & 278.578 & 8.737
256_32x128^2  &  9381.900 & 9381.900 & 1124.101 & 8.346
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 3 -p 32 -q 128 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 32768] with F_0 [32, 128] x F_1 [32, 128] x F_2 [32, 128] x to produce Y[2, 2097152]
Matmul: 2 x 2097152 x 32768, Num KP Factors: 3
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 16777216 tempSize 16777216
520 sizeX 262144
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_32x128^3  &  1.000 & 1.000 & 944.366 & 0.001
4_32x128^3  &  6996.147 & 6996.147 & 1784.499 & 3.921
16_32x128^3  &  13381.044 & 13381.044 & 5456.956 & 2.452
64_32x128^3  &  15462.540 & 15462.540 & 6564.103 & 2.356
256_32x128^3  &  15806.755 & 15806.755 & 6917.112 & 2.285
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 4 -p 32 -q 128 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 1048576] with F_0 [32, 128] x F_1 [32, 128] x F_2 [32, 128] x F_3 [32, 128] x to produce Y[2, 268435456]
Matmul: 2 x 268435456 x 1048576, Num KP Factors: 4
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 2147483648 tempSize 2147483648
520 sizeX 8388608
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_32x128^4  &  1.000 & 1.000 & 2297.904 & 0.000
4_32x128^4  &  9470.658 & 9470.658 & 4158.078 & 2.278
2_64x2^1  &  0.024 & 0.024 & 0.002 & 9.841
4_64x2^1  &  0.048 & 0.048 & 0.005 & 9.691
16_64x2^1  &  0.194 & 0.194 & 0.020 & 9.744
64_64x2^1  &  0.774 & 0.774 & 0.080 & 9.713
256_64x2^1  &  3.081 & 3.081 & 0.318 & 9.690
2_64x2^2  &  0.977 & 0.977 & 0.114 & 8.564
4_64x2^2  &  1.954 & 1.954 & 0.229 & 8.528
16_64x2^2  &  7.723 & 7.723 & 0.906 & 8.526
64_64x2^2  &  30.982 & 30.982 & 3.695 & 8.385
256_64x2^2  &  123.207 & 123.207 & 14.577 & 8.452
2_64x2^3  &  45.268 & 45.268 & 6.064 & 7.465
4_64x2^3  &  90.151 & 90.151 & 11.994 & 7.516
16_64x2^3  &  324.611 & 324.611 & 48.308 & 6.720
64_64x2^3  &  449.197 & 449.197 & 181.818 & 2.471
256_64x2^3  &  629.439 & 629.439 & 80.039 & 7.864
2_64x2^4  &  728.987 & 728.987 & 314.521 & 2.318
4_64x2^4  &  852.284 & 852.284 & 378.894 & 2.249
16_64x2^4  &  1041.471 & 1041.471 & 382.718 & 2.721
64_64x2^4  &  680.498 & 680.498 & 353.614 & 1.924
2_64x4^1  &  0.049 & 0.049 & 0.005 & 9.832
4_64x4^1  &  0.097 & 0.097 & 0.010 & 9.776
16_64x4^1  &  0.389 & 0.389 & 0.040 & 9.803
64_64x4^1  &  1.548 & 1.548 & 0.160 & 9.700
256_64x4^1  &  6.190 & 6.190 & 0.634 & 9.767
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 2 -p 64 -q 4 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 4096] with F_0 [64, 4] x F_1 [64, 4] x to produce Y[2, 16]
Matmul: 2 x 16 x 4096, Num KP Factors: 2
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 128 tempSize 32768
520 sizeX 32768
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_64x4^2  &  1.000 & 1.000 & 0.234 & 4.270
4_64x4^2  &  4.004 & 4.004 & 0.470 & 8.525
16_64x4^2  &  16.015 & 16.015 & 1.886 & 8.490
64_64x4^2  &  63.871 & 63.871 & 7.531 & 8.481
256_64x4^2  &  255.484 & 255.484 & 29.921 & 8.539
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 3 -p 64 -q 4 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 262144] with F_0 [64, 4] x F_1 [64, 4] x F_2 [64, 4] x to produce Y[2, 64]
Matmul: 2 x 64 x 262144, Num KP Factors: 3
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 512 tempSize 2097152
520 sizeX 2097152
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_64x4^3  &  1.000 & 1.000 & 12.246 & 0.082
4_64x4^3  &  181.255 & 181.255 & 24.941 & 7.267
16_64x4^3  &  694.752 & 694.752 & 98.377 & 7.062
64_64x4^3  &  1370.431 & 1370.431 & 370.622 & 3.698
256_64x4^3  &  2226.746 & 2226.746 & 164.434 & 13.542
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 4 -p 64 -q 4 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 16777216] with F_0 [64, 4] x F_1 [64, 4] x F_2 [64, 4] x F_3 [64, 4] x to produce Y[2, 256]
Matmul: 2 x 256 x 16777216, Num KP Factors: 4
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 2048 tempSize 134217728
520 sizeX 134217728
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_64x4^4  &  1.000 & 1.000 & 638.391 & 0.002
4_64x4^4  &  1073.592 & 1073.592 & 759.801 & 1.413
16_64x4^4  &  2697.378 & 2697.378 & 765.858 & 3.522
64_64x4^4  &  2719.431 & 2719.431 & 710.235 & 3.829
2_64x8^1  &  0.096 & 0.096 & 0.010 & 9.759
4_64x8^1  &  0.192 & 0.192 & 0.020 & 9.760
16_64x8^1  &  0.767 & 0.767 & 0.078 & 9.782
64_64x8^1  &  3.066 & 3.066 & 0.317 & 9.684
256_64x8^1  &  12.264 & 12.264 & 1.267 & 9.682
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 2 -p 64 -q 8 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 4096] with F_0 [64, 8] x F_1 [64, 8] x to produce Y[2, 64]
Matmul: 2 x 64 x 4096, Num KP Factors: 2
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 512 tempSize 32768
520 sizeX 32768
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_64x8^2  &  1.000 & 1.000 & 0.492 & 2.032
4_64x8^2  &  8.243 & 8.243 & 0.984 & 8.374
16_64x8^2  &  33.353 & 33.353 & 3.994 & 8.351
64_64x8^2  &  132.644 & 132.644 & 15.603 & 8.501
256_64x8^2  &  527.543 & 527.543 & 63.211 & 8.346
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 3 -p 64 -q 8 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 262144] with F_0 [64, 8] x F_1 [64, 8] x F_2 [64, 8] x to produce Y[2, 512]
Matmul: 2 x 512 x 262144, Num KP Factors: 3
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 4096 tempSize 2097152
520 sizeX 2097152
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_64x8^3  &  1.000 & 1.000 & 26.216 & 0.038
4_64x8^3  &  389.417 & 389.417 & 52.792 & 7.376
16_64x8^3  &  1554.428 & 1554.428 & 209.704 & 7.412
64_64x8^3  &  3171.495 & 3171.495 & 772.237 & 4.107
256_64x8^3  &  4216.736 & 4216.736 & 346.883 & 12.156
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 4 -p 64 -q 8 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 16777216] with F_0 [64, 8] x F_1 [64, 8] x F_2 [64, 8] x F_3 [64, 8] x to produce Y[2, 4096]
Matmul: 2 x 4096 x 16777216, Num KP Factors: 4
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 32768 tempSize 134217728
520 sizeX 134217728
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_64x8^4  &  1.000 & 1.000 & 1340.309 & 0.001
4_64x8^4  &  3251.322 & 3251.322 & 1521.590 & 2.137
16_64x8^4  &  5279.189 & 5279.189 & 1535.163 & 3.439
64_64x8^4  &  5002.947 & 5002.947 & 1433.501 & 3.490
2_64x16^1  &  0.193 & 0.193 & 0.020 & 9.775
4_64x16^1  &  0.383 & 0.383 & 0.039 & 9.747
16_64x16^1  &  1.526 & 1.526 & 0.157 & 9.716
64_64x16^1  &  6.132 & 6.132 & 0.638 & 9.615
256_64x16^1  &  24.413 & 24.413 & 2.539 & 9.614
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 2 -p 64 -q 16 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 4096] with F_0 [64, 16] x F_1 [64, 16] x to produce Y[2, 256]
Matmul: 2 x 256 x 4096, Num KP Factors: 2
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 2048 tempSize 32768
520 sizeX 32768
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_64x16^2  &  1.000 & 1.000 & 1.096 & 0.913
4_64x16^2  &  18.717 & 18.717 & 2.209 & 8.472
16_64x16^2  &  74.869 & 74.869 & 8.867 & 8.444
64_64x16^2  &  297.739 & 297.739 & 34.723 & 8.575
256_64x16^2  &  1177.307 & 1177.307 & 138.674 & 8.490
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 3 -p 64 -q 16 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 262144] with F_0 [64, 16] x F_1 [64, 16] x F_2 [64, 16] x to produce Y[2, 4096]
Matmul: 2 x 4096 x 262144, Num KP Factors: 3
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 32768 tempSize 2097152
520 sizeX 2097152
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_64x16^3  &  1.000 & 1.000 & 60.271 & 0.017
4_64x16^3  &  906.105 & 906.105 & 120.636 & 7.511
16_64x16^3  &  3579.210 & 3579.210 & 478.482 & 7.480
64_64x16^3  &  7026.938 & 7026.938 & 1711.937 & 4.105
256_64x16^3  &  8382.715 & 8382.715 & 774.022 & 10.830
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 4 -p 64 -q 16 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 16777216] with F_0 [64, 16] x F_1 [64, 16] x F_2 [64, 16] x F_3 [64, 16] x to produce Y[2, 65536]
Matmul: 2 x 65536 x 16777216, Num KP Factors: 4
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 524288 tempSize 134217728
520 sizeX 134217728
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_64x16^4  &  1.000 & 1.000 & 2833.149 & 0.000
4_64x16^4  &  4196.102 & 4196.102 & 3052.952 & 1.374
16_64x16^4  &  10018.132 & 10018.132 & 3074.213 & 3.259
64_64x16^4  &  10033.015 & 10033.015 & 2915.107 & 3.442
2_64x32^1  &  0.383 & 0.383 & 0.040 & 9.693
4_64x32^1  &  0.770 & 0.770 & 0.079 & 9.777
16_64x32^1  &  3.066 & 3.066 & 0.316 & 9.700
64_64x32^1  &  12.264 & 12.264 & 1.259 & 9.742
256_64x32^1  &  48.826 & 48.826 & 5.041 & 9.685
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 2 -p 64 -q 32 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 4096] with F_0 [64, 32] x F_1 [64, 32] x to produce Y[2, 1024]
Matmul: 2 x 1024 x 4096, Num KP Factors: 2
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 8192 tempSize 32768
520 sizeX 32768
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_64x32^2  &  1.000 & 1.000 & 2.615 & 0.382
4_64x32^2  &  45.015 & 45.015 & 5.251 & 8.573
16_64x32^2  &  180.058 & 180.058 & 21.357 & 8.431
64_64x32^2  &  722.339 & 722.339 & 84.673 & 8.531
256_64x32^2  &  2864.232 & 2864.232 & 326.537 & 8.772
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 3 -p 64 -q 32 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 262144] with F_0 [64, 32] x F_1 [64, 32] x F_2 [64, 32] x to produce Y[2, 32768]
Matmul: 2 x 32768 x 262144, Num KP Factors: 3
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 262144 tempSize 2097152
520 sizeX 2097152
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_64x32^3  &  1.000 & 1.000 & 159.020 & 0.006
4_64x32^3  &  2379.793 & 2379.793 & 321.025 & 7.413
16_64x32^3  &  8858.883 & 8858.883 & 1278.270 & 6.930
64_64x32^3  &  11625.182 & 11625.182 & 3791.273 & 3.066
256_64x32^3  &  13108.369 & 13108.369 & 1897.211 & 6.909
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 4 -p 64 -q 32 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 16777216] with F_0 [64, 32] x F_1 [64, 32] x F_2 [64, 32] x F_3 [64, 32] x to produce Y[2, 1048576]
Matmul: 2 x 1048576 x 16777216, Num KP Factors: 4
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 8388608 tempSize 134217728
520 sizeX 134217728
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_64x32^4  &  1.000 & 1.000 & 5715.615 & 0.000
4_64x32^4  &  6684.650 & 6684.650 & 5988.405 & 1.116
16_64x32^4  &  14510.206 & 14510.206 & 5987.078 & 2.424
64_64x32^4  &  14540.524 & 14540.524 & 5865.488 & 2.479
2_64x64^1  &  0.770 & 0.770 & 0.078 & 9.824
4_64x64^1  &  1.540 & 1.540 & 0.158 & 9.768
16_64x64^1  &  6.132 & 6.132 & 0.631 & 9.715
64_64x64^1  &  24.528 & 24.528 & 2.523 & 9.722
256_64x64^1  &  97.653 & 97.653 & 10.002 & 9.763
2_64x64^2  &  60.706 & 60.706 & 6.992 & 8.682
4_64x64^2  &  121.056 & 121.056 & 14.002 & 8.646
16_64x64^2  &  481.399 & 481.399 & 56.658 & 8.497
64_64x64^2  &  1920.000 & 1920.000 & 225.758 & 8.505
256_64x64^2  &  7526.838 & 7526.838 & 891.873 & 8.439
2_64x64^3  &  4125.929 & 4125.929 & 554.157 & 7.445
4_64x64^3  &  6710.764 & 6710.764 & 1097.654 & 6.114
16_64x64^3  &  12468.895 & 12468.895 & 4366.774 & 2.855
64_64x64^3  &  15654.020 & 15654.020 & 6865.592 & 2.280
256_64x64^3  &  16745.149 & 16745.149 & 4557.415 & 3.674
2_64x64^4  &  11581.346 & 11581.346 & 5378.155 & 2.153
4_64x64^4  &  10465.237 & 10465.237 & 6414.870 & 1.631
16_64x64^4  &  15872.918 & 15872.918 & 8738.464 & 1.816
64_64x64^4  &  17287.194 & 17287.194 & 8793.269 & 1.966
2_64x128^1  &  1.533 & 1.533 & 0.159 & 9.668
4_64x128^1  &  3.066 & 3.066 & 0.321 & 9.552
16_64x128^1  &  12.207 & 12.207 & 1.268 & 9.623
64_64x128^1  &  48.826 & 48.826 & 5.055 & 9.659
256_64x128^1  &  194.393 & 194.393 & 20.310 & 9.571
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 2 -p 64 -q 128 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 4096] with F_0 [64, 128] x F_1 [64, 128] x to produce Y[2, 16384]
Matmul: 2 x 16384 x 4096, Num KP Factors: 2
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 131072 tempSize 131072
520 sizeX 32768
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_64x128^2  &  1.000 & 1.000 & 21.070 & 0.047
4_64x128^2  &  359.884 & 359.884 & 42.398 & 8.488
16_64x128^2  &  1447.930 & 1447.930 & 166.095 & 8.718
64_64x128^2  &  5659.715 & 5659.715 & 669.753 & 8.450
256_64x128^2  &  12187.484 & 12187.484 & 2678.588 & 4.550
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 3 -p 64 -q 128 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 262144] with F_0 [64, 128] x F_1 [64, 128] x F_2 [64, 128] x to produce Y[2, 2097152]
Matmul: 2 x 2097152 x 262144, Num KP Factors: 3
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 16777216 tempSize 16777216
520 sizeX 2097152
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_64x128^3  &  1.000 & 1.000 & 2576.262 & 0.000
4_64x128^3  &  8888.104 & 8888.104 & 4861.998 & 1.828
16_64x128^3  &  15206.506 & 15206.506 & 8529.083 & 1.783
64_64x128^3  &  16641.726 & 16641.726 & 9316.232 & 1.786
256_64x128^3  &  16853.819 & 16853.819 & 8199.491 & 2.055
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 4 -p 64 -q 128 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 16777216] with F_0 [64, 128] x F_1 [64, 128] x F_2 [64, 128] x F_3 [64, 128] x to produce Y[2, 268435456]
Matmul: 2 x 268435456 x 16777216, Num KP Factors: 4
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 2147483648 tempSize 2147483648
520 sizeX 134217728
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_64x128^4  &  1.000 & 1.000 & 4076.775 & 0.000
4_64x128^4  &  10635.715 & 10635.715 & 6727.841 & 1.581
2_128x2^1  &  0.047 & 0.047 & 0.005 & 9.495
4_128x2^1  &  0.093 & 0.093 & 0.010 & 9.386
16_128x2^1  &  0.373 & 0.373 & 0.039 & 9.466
64_128x2^1  &  1.493 & 1.493 & 0.160 & 9.319
256_128x2^1  &  5.945 & 5.945 & 0.637 & 9.338
2_128x2^2  &  3.662 & 3.662 & 0.444 & 8.245
4_128x2^2  &  7.304 & 7.304 & 0.890 & 8.206
16_128x2^2  &  27.737 & 27.737 & 3.547 & 7.819
64_128x2^2  &  105.596 & 105.596 & 14.317 & 7.376
256_128x2^2  &  335.524 & 335.524 & 55.652 & 6.029
2_128x2^3  &  258.047 & 258.047 & 45.948 & 5.616
4_128x2^3  &  354.505 & 354.505 & 90.626 & 3.912
16_128x2^3  &  593.899 & 593.899 & 333.149 & 1.783
64_128x2^3  &  573.006 & 573.006 & 222.622 & 2.574
256_128x2^3  &  608.331 & 608.331 & 77.807 & 7.818
2_128x2^4  &  906.069 & 906.069 & 446.956 & 2.027
4_128x2^4  &  909.861 & 909.861 & 268.360 & 3.390
2_128x4^1  &  0.095 & 0.095 & 0.010 & 9.625
4_128x4^1  &  0.189 & 0.189 & 0.020 & 9.589
16_128x4^1  &  0.754 & 0.754 & 0.078 & 9.634
64_128x4^1  &  3.028 & 3.028 & 0.317 & 9.553
256_128x4^1  &  12.056 & 12.056 & 1.277 & 9.441
2_128x4^2  &  7.523 & 7.523 & 0.906 & 8.302
4_128x4^2  &  14.877 & 14.877 & 1.783 & 8.343
16_128x4^2  &  55.301 & 55.301 & 7.197 & 7.684
64_128x4^2  &  202.153 & 202.153 & 29.542 & 6.843
256_128x4^2  &  437.824 & 437.824 & 112.074 & 3.907
2_128x4^3  &  427.614 & 427.614 & 93.004 & 4.598
4_128x4^3  &  499.989 & 499.989 & 185.274 & 2.699
16_128x4^3  &  706.143 & 706.143 & 676.475 & 1.044
64_128x4^3  &  601.621 & 601.621 & 444.991 & 1.352
256_128x4^3  &  613.244 & 613.244 & 157.135 & 3.903
2_128x4^4  &  978.551 & 978.551 & 871.873 & 1.122
4_128x4^4  &  983.665 & 983.665 & 531.880 & 1.849
2_128x8^1  &  0.190 & 0.190 & 0.020 & 9.623
4_128x8^1  &  0.379 & 0.379 & 0.039 & 9.644
16_128x8^1  &  1.521 & 1.521 & 0.159 & 9.556
64_128x8^1  &  6.028 & 6.028 & 0.637 & 9.469
256_128x8^1  &  24.112 & 24.112 & 2.538 & 9.502
2_128x8^2  &  15.684 & 15.684 & 1.877 & 8.358
4_128x8^2  &  31.551 & 31.551 & 3.761 & 8.390
16_128x8^2  &  125.476 & 125.476 & 14.814 & 8.470
64_128x8^2  &  392.252 & 392.252 & 58.476 & 6.708
256_128x8^2  &  971.604 & 971.604 & 231.907 & 4.190
2_128x8^3  &  854.401 & 854.401 & 193.033 & 4.426
4_128x8^3  &  1081.052 & 1081.052 & 386.663 & 2.796
16_128x8^3  &  1998.285 & 1998.285 & 1321.883 & 1.512
64_128x8^3  &  1974.991 & 1974.991 & 891.512 & 2.215
256_128x8^3  &  2112.278 & 2112.278 & 320.966 & 6.581
2_128x8^4  &  3555.483 & 3555.483 & 1683.553 & 2.112
4_128x8^4  &  4318.714 & 4318.714 & 1055.063 & 4.093
2_128x16^1  &  0.379 & 0.379 & 0.038 & 9.937
4_128x16^1  &  0.754 & 0.754 & 0.079 & 9.564
16_128x16^1  &  3.014 & 3.014 & 0.315 & 9.583
64_128x16^1  &  12.113 & 12.113 & 1.274 & 9.507
256_128x16^1  &  48.000 & 48.000 & 5.122 & 9.371
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 2 -p 128 -q 16 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 16384] with F_0 [128, 16] x F_1 [128, 16] x to produce Y[2, 256]
Matmul: 2 x 256 x 16384, Num KP Factors: 2
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 2048 tempSize 131072
520 sizeX 131072
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_128x16^2  &  1.000 & 1.000 & 3.987 & 0.251
4_128x16^2  &  67.230 & 67.230 & 7.984 & 8.420
16_128x16^2  &  268.921 & 268.921 & 32.056 & 8.389
64_128x16^2  &  1060.230 & 1060.230 & 125.182 & 8.470
256_128x16^2  &  3400.553 & 3400.553 & 497.267 & 6.838
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 3 -p 128 -q 16 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 2097152] with F_0 [128, 16] x F_1 [128, 16] x F_2 [128, 16] x to produce Y[2, 4096]
Matmul: 2 x 4096 x 2097152, Num KP Factors: 3
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 32768 tempSize 16777216
520 sizeX 16777216
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_128x16^3  &  1.000 & 1.000 & 410.717 & 0.002
4_128x16^3  &  2425.304 & 2425.304 & 841.015 & 2.884
16_128x16^3  &  7926.839 & 7926.839 & 2720.249 & 2.914
64_128x16^3  &  10160.629 & 10160.629 & 1846.783 & 5.502
256_128x16^3  &  9310.450 & 9310.450 & 680.373 & 13.684
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 4 -p 128 -q 16 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 268435456] with F_0 [128, 16] x F_1 [128, 16] x F_2 [128, 16] x F_3 [128, 16] x to produce Y[2, 65536]
Matmul: 2 x 65536 x 268435456, Num KP Factors: 4
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 524288 tempSize 2147483648
520 sizeX 2147483648
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_128x16^4  &  1.000 & 1.000 & 3438.126 & 0.000
4_128x16^4  &  5161.148 & 5161.148 & 2190.202 & 2.356
2_128x32^1  &  0.747 & 0.747 & 0.078 & 9.575
4_128x32^1  &  1.486 & 1.486 & 0.155 & 9.615
16_128x32^1  &  5.972 & 5.972 & 0.626 & 9.534
64_128x32^1  &  23.889 & 23.889 & 2.462 & 9.703
256_128x32^1  &  94.679 & 94.679 & 9.894 & 9.569
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 2 -p 128 -q 32 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 16384] with F_0 [128, 32] x F_1 [128, 32] x to produce Y[2, 1024]
Matmul: 2 x 1024 x 16384, Num KP Factors: 2
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 8192 tempSize 131072
520 sizeX 131072
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_128x32^2  &  1.000 & 1.000 & 8.593 & 0.116
4_128x32^2  &  149.504 & 149.504 & 17.312 & 8.636
16_128x32^2  &  592.832 & 592.832 & 70.055 & 8.462
64_128x32^2  &  2357.701 & 2357.701 & 276.520 & 8.526
256_128x32^2  &  8266.801 & 8266.801 & 1113.606 & 7.423
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 3 -p 128 -q 32 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 2097152] with F_0 [128, 32] x F_1 [128, 32] x F_2 [128, 32] x to produce Y[2, 32768]
Matmul: 2 x 32768 x 2097152, Num KP Factors: 3
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 262144 tempSize 16777216
520 sizeX 16777216
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_128x32^3  &  1.000 & 1.000 & 957.708 & 0.001
4_128x32^3  &  4963.115 & 4963.115 & 1959.093 & 2.533
16_128x32^3  &  12976.135 & 12976.135 & 5426.895 & 2.391
64_128x32^3  &  14267.026 & 14267.026 & 3911.509 & 3.647
256_128x32^3  &  14760.805 & 14760.805 & 1518.423 & 9.721
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 4 -p 128 -q 32 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 268435456] with F_0 [128, 32] x F_1 [128, 32] x F_2 [128, 32] x F_3 [128, 32] x to produce Y[2, 1048576]
Matmul: 2 x 1048576 x 268435456, Num KP Factors: 4
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 8388608 tempSize 2147483648
520 sizeX 2147483648
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_128x32^4  &  1.000 & 1.000 & 6757.673 & 0.000
4_128x32^4  &  7568.942 & 7568.942 & 4579.008 & 1.653
2_128x64^1  &  1.500 & 1.500 & 0.155 & 9.689
4_128x64^1  &  3.000 & 3.000 & 0.311 & 9.661
16_128x64^1  &  12.000 & 12.000 & 1.240 & 9.674
64_128x64^1  &  48.000 & 48.000 & 4.988 & 9.624
256_128x64^1  &  191.111 & 191.111 & 20.423 & 9.358
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 2 -p 128 -q 64 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 16384] with F_0 [128, 64] x F_1 [128, 64] x to produce Y[2, 4096]
Matmul: 2 x 4096 x 16384, Num KP Factors: 2
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 32768 tempSize 131072
520 sizeX 131072
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_128x64^2  &  1.000 & 1.000 & 20.976 & 0.048
4_128x64^2  &  359.184 & 359.184 & 42.838 & 8.385
16_128x64^2  &  1420.173 & 1420.173 & 170.577 & 8.326
64_128x64^2  &  5568.362 & 5568.362 & 669.753 & 8.314
256_128x64^2  &  11427.246 & 11427.246 & 2668.431 & 4.282
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 3 -p 128 -q 64 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 2097152] with F_0 [128, 64] x F_1 [128, 64] x F_2 [128, 64] x to produce Y[2, 262144]
Matmul: 2 x 262144 x 2097152, Num KP Factors: 3
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 2097152 tempSize 16777216
520 sizeX 16777216
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_128x64^3  &  1.000 & 1.000 & 2554.882 & 0.000
4_128x64^3  &  8592.404 & 8592.404 & 5093.911 & 1.687
16_128x64^3  &  15372.853 & 15372.853 & 8610.619 & 1.785
64_128x64^3  &  17007.809 & 17007.809 & 7115.815 & 2.390
256_128x64^3  &  17309.794 & 17309.794 & 3430.698 & 5.046
Running cd build && ./tests/benchmarks/benchmark_cuda -m 2 -n 4 -p 128 -q 64 -r 10 -w 20 -t float --tune --opx N --opf N -a 1 -b 0 --gemmtype kmm --backend cuda --fuse
 Doing KronMatmul of X[2, 268435456] with F_0 [128, 64] x F_1 [128, 64] x F_2 [128, 64] x F_3 [128, 64] x to produce Y[2, 16777216]
Matmul: 2 x 16777216 x 268435456, Num KP Factors: 4
setting values on host
values set
Supported backends 8
FastKron 1.0+CUDA12.2
allocating
allocated
memcpy
resultSize 134217728 tempSize 2147483648
520 sizeX 2147483648
checkResults 0
529
warmup
Failed: Cuda error /home/ajangda/KroneckerGPU/src/kernel_db/cuda_kernel_db.cu:404 'misaligned address'
2_128x64^4  &  1.000 & 1.000 & 7384.524 & 0.000
4_128x64^4  &  11157.312 & 11157.312 & 6844.948 & 1.630
2_128x128^1  &  3.000 & 3.000 & 0.310 & 9.670
4_128x128^1  &  6.028 & 6.028 & 0.623 & 9.680
16_128x128^1  &  24.000 & 24.000 & 2.494 & 9.624
64_128x128^1  &  96.000 & 96.000 & 9.914 & 9.683
256_128x128^1  &  376.986 & 376.986 & 41.190 & 9.152
2_128x128^2  &  478.140 & 478.140 & 57.053 & 8.381
4_128x128^2  &  953.507 & 953.507 & 113.006 & 8.438
16_128x128^2  &  3748.832 & 3748.832 & 453.042 & 8.275
64_128x128^2  &  9233.965 & 9233.965 & 1789.984 & 5.159
256_128x128^2  &  13697.750 & 13697.750 & 6823.636 & 2.007
2_128x128^3  &  12079.356 & 12079.356 & 8223.249 & 1.469
4_128x128^3  &  12466.087 & 12466.087 & 9321.650 & 1.337
16_128x128^3  &  17080.531 & 17080.531 & 11353.135 & 1.504
64_128x128^3  &  17652.948 & 17652.948 & 10652.684 & 1.657
256_128x128^3  &  17751.843 & 17751.843 & 7284.407 & 2.437
2_128x128^4  &  15917.178 & 15917.178 & 6530.409 & 2.437
4_128x128^4  &  14871.012 & 14871.012 & 9148.363 & 1.626

nohup: ignoring input
------- Single CUDA KMM DOUBLE FastTune NN -------
2_2x2^1  &  0.001 & 0.001 & 0.000 & 13.295
4_2x2^1  &  0.002 & 0.002 & 0.000 & 13.357
16_2x2^1  &  0.008 & 0.008 & 0.001 & 13.281
64_2x2^1  &  0.033 & 0.033 & 0.002 & 13.241
256_2x2^1  &  0.130 & 0.131 & 0.010 & 13.177
2_2x2^2  &  0.002 & 0.002 & 0.000 & 9.519
4_2x2^2  &  0.004 & 0.004 & 0.000 & 9.341
16_2x2^2  &  0.017 & 0.016 & 0.002 & 9.368
64_2x2^2  &  0.066 & 0.066 & 0.007 & 9.347
256_2x2^2  &  0.264 & 0.262 & 0.028 & 9.222
2_2x2^3  &  0.004 & 0.004 & 0.001 & 7.619
4_2x2^3  &  0.008 & 0.008 & 0.001 & 7.456
16_2x2^3  &  0.033 & 0.033 & 0.004 & 7.540
64_2x2^3  &  0.132 & 0.133 & 0.017 & 7.607
256_2x2^3  &  0.532 & 0.530 & 0.070 & 7.554
2_2x2^4  &  0.008 & 0.008 & 0.001 & 6.714
4_2x2^4  &  0.017 & 0.017 & 0.003 & 6.679
16_2x2^4  &  0.067 & 0.066 & 0.010 & 6.581
64_2x2^4  &  0.269 & 0.269 & 0.040 & 6.684
256_2x2^4  &  1.071 & 1.070 & 0.160 & 6.683
2_2x2^5  &  0.017 & 0.017 & 0.003 & 6.068
4_2x2^5  &  0.033 & 0.034 & 0.005 & 6.135
16_2x2^5  &  0.134 & 0.134 & 0.022 & 6.129
64_2x2^5  &  0.535 & 0.537 & 0.088 & 6.132
256_2x2^5  &  2.146 & 2.149 & 0.349 & 6.149
2_2x2^6  &  0.034 & 0.087 & 0.006 & 14.863
4_2x2^6  &  0.068 & 0.173 & 0.012 & 14.831
16_2x2^6  &  0.270 & 1.150 & 0.047 & 24.710
64_2x2^6  &  1.078 & 4.561 & 0.187 & 24.438
256_2x2^6  &  4.298 & 18.246 & 0.748 & 24.405
2_2x2^7  &  0.067 & 0.202 & 0.012 & 16.367
4_2x2^7  &  0.135 & 0.401 & 0.025 & 16.264
16_2x2^7  &  0.535 & 1.613 & 0.098 & 16.506
64_2x2^7  &  2.149 & 6.434 & 0.388 & 16.565
256_2x2^7  &  8.610 & 25.600 & 1.565 & 16.354
2_2x2^8  &  0.135 & 0.456 & 0.025 & 17.890
4_2x2^8  &  0.270 & 0.912 & 0.051 & 17.843
16_2x2^8  &  1.077 & 3.627 & 0.204 & 17.784
64_2x2^8  &  4.307 & 14.545 & 0.818 & 17.784
256_2x2^8  &  17.174 & 58.338 & 3.235 & 18.036
2_2x2^9  &  0.271 & 1.024 & 0.052 & 19.510
4_2x2^9  &  0.540 & 2.038 & 0.104 & 19.512
16_2x2^9  &  2.155 & 8.128 & 0.425 & 19.122
64_2x2^9  &  8.643 & 32.340 & 1.672 & 19.337
256_2x2^9  &  34.521 & 129.362 & 6.709 & 19.281
2_2x2^10  &  0.539 & 2.258 & 0.109 & 20.732
4_2x2^10  &  1.079 & 4.516 & 0.218 & 20.675
16_2x2^10  &  4.310 & 17.968 & 0.869 & 20.665
64_2x2^10  &  17.275 & 72.258 & 3.451 & 20.939
256_2x2^10  &  69.368 & 285.957 & 13.628 & 20.983
2_2x2^11  &  1.080 & 3.545 & 0.222 & 15.964
4_2x2^11  &  2.166 & 7.091 & 0.438 & 16.207
16_2x2^11  &  8.628 & 39.464 & 1.758 & 22.452
64_2x2^11  &  34.635 & 157.855 & 7.084 & 22.283
256_2x2^11  &  138.623 & 626.383 & 27.530 & 22.753
2_2x2^12  &  2.165 & 7.722 & 0.449 & 17.214
4_2x2^12  &  4.334 & 15.385 & 0.896 & 17.161
16_2x2^12  &  17.344 & 86.253 & 3.592 & 24.013
64_2x2^12  &  69.377 & 341.333 & 14.132 & 24.154
256_2x2^12  &  276.906 & 1347.368 & 41.212 & 32.693
2_2x2^13  &  4.314 & 16.744 & 0.911 & 18.381
4_2x2^13  &  8.727 & 33.424 & 1.816 & 18.409
16_2x2^13  &  34.716 & 133.694 & 7.279 & 18.366
64_2x2^13  &  137.895 & 531.692 & 28.373 & 18.739
256_2x2^13  &  475.665 & 1512.887 & 41.529 & 36.430
2_2x2^14  &  8.738 & 36.179 & 1.841 & 19.649
4_2x2^14  &  17.338 & 71.660 & 3.661 & 19.576
16_2x2^14  &  68.677 & 284.444 & 14.649 & 19.417
64_2x2^14  &  275.985 & 1131.276 & 41.511 & 27.253
256_2x2^14  &  401.976 & 1593.347 & 40.870 & 38.986
2_2x2^15  &  17.343 & 76.750 & 3.755 & 20.438
4_2x2^15  &  34.625 & 153.205 & 7.495 & 20.441
16_2x2^15  &  137.838 & 611.638 & 29.201 & 20.946
64_2x2^15  &  491.774 & 1704.376 & 41.684 & 40.888
256_2x2^15  &  396.955 & 1801.078 & 41.140 & 43.779
2_2x2^16  &  34.694 & 127.613 & 7.581 & 16.834
4_2x2^16  &  69.445 & 254.458 & 14.995 & 16.969
16_2x2^16  &  277.781 & 1277.580 & 41.709 & 30.631
64_2x2^16  &  408.486 & 1793.869 & 41.127 & 43.618
256_2x2^16  &  412.333 & 2015.553 & 40.952 & 49.217
2_2x2^17  &  69.646 & 270.695 & 15.182 & 17.830
4_2x2^17  &  139.076 & 531.751 & 29.880 & 17.796
16_2x2^17  &  495.712 & 1847.423 & 41.760 & 44.239
64_2x2^17  &  406.551 & 2050.197 & 41.747 & 49.110
256_2x2^17  &  421.213 & 2202.573 & 41.155 & 53.519
2_2x2^18  &  138.937 & 564.650 & 30.121 & 18.746
4_2x2^18  &  277.975 & 1030.966 & 41.818 & 24.654
16_2x2^18  &  412.555 & 1983.665 & 41.268 & 48.068
64_2x2^18  &  423.241 & 2288.009 & 41.868 & 54.648
256_2x2^18  &  424.973 & 2344.985 & 41.239 & 56.864
2_2x2^19  &  277.719 & 1077.895 & 41.930 & 25.707
4_2x2^19  &  375.515 & 1133.740 & 41.854 & 27.088
16_2x2^19  &  408.683 & 1765.615 & 41.905 & 42.134
64_2x2^19  &  431.580 & 1902.705 & 42.056 & 45.242
256_2x2^19  &  426.346 & 1912.780 & 41.318 & 46.294
2_2x4^1  &  0.002 & 0.002 & 0.000 & 13.438
4_2x4^1  &  0.004 & 0.004 & 0.000 & 13.388
16_2x4^1  &  0.016 & 0.016 & 0.001 & 13.207
64_2x4^1  &  0.065 & 0.065 & 0.005 & 13.110
256_2x4^1  &  0.261 & 0.261 & 0.020 & 12.798
2_2x4^2  &  0.007 & 0.007 & 0.001 & 10.148
4_2x4^2  &  0.013 & 0.013 & 0.001 & 10.188
16_2x4^2  &  0.053 & 0.053 & 0.005 & 9.924
64_2x4^2  &  0.211 & 0.211 & 0.021 & 10.036
256_2x4^2  &  0.849 & 0.849 & 0.085 & 9.993
2_2x4^3  &  0.021 & 0.021 & 0.003 & 8.447
4_2x4^3  &  0.043 & 0.043 & 0.005 & 8.438
16_2x4^3  &  0.172 & 0.172 & 0.020 & 8.468
64_2x4^3  &  0.681 & 0.681 & 0.082 & 8.300
256_2x4^3  &  2.717 & 2.717 & 0.324 & 8.373
2_2x4^4  &  0.070 & 0.070 & 0.009 & 7.618
4_2x4^4  &  0.141 & 0.141 & 0.019 & 7.555
16_2x4^4  &  0.569 & 0.569 & 0.075 & 7.605
64_2x4^4  &  2.262 & 2.262 & 0.296 & 7.652
256_2x4^4  &  9.048 & 9.048 & 1.182 & 7.652
2_2x4^5  &  0.238 & 0.238 & 0.034 & 7.063
4_2x4^5  &  0.477 & 0.477 & 0.067 & 7.099
16_2x4^5  &  1.900 & 1.900 & 0.267 & 7.129
64_2x4^5  &  7.638 & 7.638 & 1.067 & 7.158
256_2x4^5  &  30.072 & 30.072 & 4.263 & 7.055
2_2x4^6  &  0.823 & 0.823 & 0.121 & 6.797
4_2x4^6  &  1.629 & 1.629 & 0.242 & 6.721
16_2x4^6  &  6.549 & 6.549 & 0.954 & 6.862
64_2x4^6  &  26.062 & 26.062 & 3.850 & 6.769
256_2x4^6  &  104.033 & 104.033 & 15.441 & 6.737
2_2x4^7  &  2.857 & 2.857 & 0.441 & 6.483
4_2x4^7  &  5.699 & 5.699 & 0.874 & 6.522
16_2x4^7  &  22.775 & 22.775 & 3.465 & 6.573
64_2x4^7  &  90.695 & 90.695 & 13.890 & 6.529
256_2x4^7  &  354.874 & 354.874 & 51.504 & 6.890
2_2x4^8  &  10.095 & 10.095 & 1.601 & 6.306
4_2x4^8  &  20.206 & 20.206 & 3.198 & 6.318
16_2x4^8  &  80.505 & 80.505 & 12.610 & 6.384
64_2x4^8  &  315.549 & 315.549 & 47.103 & 6.699
256_2x4^8  &  563.589 & 563.589 & 72.316 & 7.793
2_2x4^9  &  36.255 & 36.255 & 5.829 & 6.220
4_2x4^9  &  72.203 & 72.203 & 11.645 & 6.201
16_2x4^9  &  283.213 & 283.213 & 43.401 & 6.526
64_2x4^9  &  564.667 & 564.667 & 71.703 & 7.875
256_2x4^9  &  602.686 & 602.686 & 75.386 & 7.995
2_2x4^10  &  130.510 & 130.510 & 21.359 & 6.110
4_2x4^10  &  253.581 & 253.581 & 40.419 & 6.274
16_2x4^10  &  565.499 & 565.499 & 70.840 & 7.983
64_2x4^10  &  608.538 & 608.538 & 75.189 & 8.093
256_2x4^10  &  612.465 & 612.465 & 76.049 & 8.054
2_2x4^11  &  429.633 & 429.633 & 64.312 & 6.680
4_2x4^11  &  428.845 & 428.845 & 70.096 & 6.118
16_2x4^11  &  624.384 & 624.384 & 74.721 & 8.356
64_2x4^11  &  622.678 & 622.678 & 75.801 & 8.215
2_2x4^12  &  518.708 & 518.708 & 72.600 & 7.145
4_2x4^12  &  480.940 & 480.940 & 74.504 & 6.455
16_2x4^12  &  640.532 & 640.532 & 75.373 & 8.498
2_2x4^13  &  551.805 & 551.805 & 74.870 & 7.370
4_2x4^13  &  497.983 & 497.983 & 75.277 & 6.615
2_2x4^14  &  559.727 & 559.727 & 75.167 & 7.446
2_2x8^1  &  0.004 & 0.004 & 0.000 & 13.256
4_2x8^1  &  0.008 & 0.008 & 0.001 & 13.502
16_2x8^1  &  0.032 & 0.032 & 0.002 & 13.036
64_2x8^1  &  0.132 & 0.132 & 0.010 & 12.990
256_2x8^1  &  0.524 & 0.524 & 0.040 & 13.030
2_2x8^2  &  0.023 & 0.023 & 0.002 & 10.832
4_2x8^2  &  0.046 & 0.046 & 0.004 & 10.605
16_2x8^2  &  0.185 & 0.185 & 0.018 & 10.481
64_2x8^2  &  0.737 & 0.737 & 0.070 & 10.469
256_2x8^2  &  2.947 & 2.947 & 0.282 & 10.448
2_2x8^3  &  0.139 & 0.139 & 0.015 & 9.249
4_2x8^3  &  0.277 & 0.277 & 0.030 & 9.234
16_2x8^3  &  1.103 & 1.103 & 0.122 & 9.050
64_2x8^3  &  4.436 & 4.436 & 0.484 & 9.169
256_2x8^3  &  17.676 & 17.676 & 1.933 & 9.146
2_2x8^4  &  0.864 & 0.864 & 0.104 & 8.336
4_2x8^4  &  1.738 & 1.738 & 0.210 & 8.261
16_2x8^4  &  6.954 & 6.954 & 0.842 & 8.254
64_2x8^4  &  27.611 & 27.611 & 3.355 & 8.230
256_2x8^4  &  110.280 & 110.280 & 13.284 & 8.301
2_2x8^5  &  5.733 & 5.733 & 0.736 & 7.790
4_2x8^5  &  11.495 & 11.495 & 1.462 & 7.860
16_2x8^5  &  45.756 & 45.756 & 5.869 & 7.796
64_2x8^5  &  180.819 & 180.819 & 23.433 & 7.716
256_2x8^5  &  607.611 & 607.611 & 84.796 & 7.166
2_2x8^6  &  38.701 & 38.701 & 5.202 & 7.439
4_2x8^6  &  76.690 & 76.690 & 10.384 & 7.386
16_2x8^6  &  303.354 & 303.354 & 40.463 & 7.497
64_2x8^6  &  676.777 & 676.777 & 110.557 & 6.122
256_2x8^6  &  724.754 & 724.754 & 123.434 & 5.872
2_2x8^7  &  263.012 & 263.012 & 36.757 & 7.155
4_2x8^7  &  428.779 & 428.779 & 69.280 & 6.189
16_2x8^7  &  742.546 & 742.546 & 117.786 & 6.304
64_2x8^7  &  746.410 & 746.410 & 124.294 & 6.005
256_2x8^7  &  740.558 & 740.558 & 126.954 & 5.833
2_2x8^8  &  588.384 & 588.384 & 116.039 & 5.071
4_2x8^8  &  537.876 & 537.876 & 120.848 & 4.451
16_2x8^8  &  803.598 & 803.598 & 124.673 & 6.446
2_2x8^9  &  635.877 & 635.877 & 124.246 & 5.118
4_2x8^9  &  557.180 & 557.180 & 125.543 & 4.438
2_2x16^1  &  0.008 & 0.008 & 0.001 & 13.302
4_2x16^1  &  0.016 & 0.016 & 0.001 & 13.280
16_2x16^1  &  0.066 & 0.066 & 0.005 & 13.485
64_2x16^1  &  0.261 & 0.261 & 0.020 & 12.992
256_2x16^1  &  1.034 & 1.034 & 0.080 & 12.889
2_2x16^2  &  0.086 & 0.086 & 0.008 & 11.041
4_2x16^2  &  0.172 & 0.172 & 0.016 & 11.023
16_2x16^2  &  0.682 & 0.682 & 0.063 & 10.767
64_2x16^2  &  2.744 & 2.744 & 0.253 & 10.858
256_2x16^2  &  10.890 & 10.890 & 1.003 & 10.862
2_2x16^3  &  1.000 & 1.000 & 0.104 & 9.655
4_2x16^3  &  2.004 & 2.004 & 0.208 & 9.630
16_2x16^3  &  8.015 & 8.015 & 0.841 & 9.528
64_2x16^3  &  31.698 & 31.698 & 3.351 & 9.459
256_2x16^3  &  127.757 & 127.757 & 13.365 & 9.559
2_2x16^4  &  12.496 & 12.496 & 1.436 & 8.705
4_2x16^4  &  24.993 & 24.993 & 2.888 & 8.654
16_2x16^4  &  99.674 & 99.674 & 11.568 & 8.616
64_2x16^4  &  390.029 & 390.029 & 45.548 & 8.563
256_2x16^4  &  752.257 & 752.257 & 157.790 & 4.767
2_2x16^5  &  162.340 & 162.340 & 20.109 & 8.073
4_2x16^5  &  313.706 & 313.706 & 40.013 & 7.840
16_2x16^5  &  799.881 & 799.881 & 142.284 & 5.622
64_2x16^5  &  838.505 & 838.505 & 177.168 & 4.733
256_2x16^5  &  842.441 & 842.441 & 186.590 & 4.515
2_2x16^6  &  643.743 & 643.743 & 164.259 & 3.919
4_2x16^6  &  578.772 & 578.772 & 171.013 & 3.384
16_2x16^6  &  939.853 & 939.853 & 181.223 & 5.186
2_2x16^7  &  679.296 & 679.296 & 181.777 & 3.737
2_2x32^1  &  0.016 & 0.016 & 0.001 & 13.099
4_2x32^1  &  0.033 & 0.033 & 0.003 & 13.006
16_2x32^1  &  0.130 & 0.130 & 0.010 & 12.987
64_2x32^1  &  0.524 & 0.524 & 0.040 & 13.033
256_2x32^1  &  2.096 & 2.096 & 0.160 & 13.131
2_2x32^2  &  0.332 & 0.332 & 0.030 & 11.161
4_2x32^2  &  0.665 & 0.665 & 0.060 & 11.166
16_2x32^2  &  2.660 & 2.660 & 0.237 & 11.199
64_2x32^2  &  10.582 & 10.582 & 0.947 & 11.176
256_2x32^2  &  42.328 & 42.328 & 3.784 & 11.185
2_2x32^3  &  7.653 & 7.653 & 0.789 & 9.699
4_2x32^3  &  15.161 & 15.161 & 1.568 & 9.668
16_2x32^3  &  60.758 & 60.758 & 6.267 & 9.695
64_2x32^3  &  240.750 & 240.750 & 24.914 & 9.663
256_2x32^3  &  760.415 & 760.415 & 93.405 & 8.141
2_2x32^4  &  186.541 & 186.541 & 21.266 & 8.772
4_2x32^4  &  362.542 & 362.542 & 41.318 & 8.774
16_2x32^4  &  869.365 & 869.365 & 151.009 & 5.757
64_2x32^4  &  942.377 & 942.377 & 242.487 & 3.886
256_2x32^4  &  965.643 & 965.643 & 259.120 & 3.727
2_2x32^5  &  684.487 & 684.487 & 219.610 & 3.117
4_2x32^5  &  612.196 & 612.196 & 234.581 & 2.610
16_2x32^5  &  1024.042 & 1024.042 & 248.365 & 4.123
2_2x64^1  &  0.033 & 0.033 & 0.003 & 12.962
4_2x64^1  &  0.065 & 0.065 & 0.005 & 13.017
16_2x64^1  &  0.261 & 0.261 & 0.020 & 12.913
64_2x64^1  &  1.053 & 1.053 & 0.080 & 13.091
256_2x64^1  &  4.138 & 4.138 & 0.322 & 12.838
2_2x64^2  &  1.303 & 1.303 & 0.116 & 11.240
4_2x64^2  &  2.606 & 2.606 & 0.232 & 11.219
16_2x64^2  &  10.426 & 10.426 & 0.922 & 11.306
64_2x64^2  &  41.155 & 41.155 & 3.671 & 11.210
256_2x64^2  &  164.619 & 164.619 & 14.074 & 11.696
2_2x64^3  &  59.771 & 59.771 & 6.080 & 9.831
4_2x64^3  &  117.090 & 117.090 & 11.728 & 9.984
16_2x64^3  &  458.940 & 458.940 & 46.324 & 9.907
64_2x64^3  &  900.592 & 900.592 & 169.336 & 5.318
256_2x64^3  &  989.077 & 989.077 & 256.259 & 3.860
2_2x64^4  &  685.447 & 685.447 & 161.662 & 4.240
4_2x64^4  &  614.553 & 614.553 & 222.938 & 2.757
16_2x64^4  &  1051.222 & 1051.222 & 254.965 & 4.123
2_2x128^1  &  0.065 & 0.065 & 0.005 & 12.880
4_2x128^1  &  0.131 & 0.131 & 0.010 & 13.094
16_2x128^1  &  0.522 & 0.522 & 0.040 & 12.925
64_2x128^1  &  2.096 & 2.096 & 0.162 & 12.975
256_2x128^1  &  8.312 & 8.312 & 0.648 & 12.824
2_2x128^2  &  5.187 & 5.187 & 0.457 & 11.358
4_2x128^2  &  10.211 & 10.211 & 0.908 & 11.239
16_2x128^2  &  40.628 & 40.628 & 3.641 & 11.159
64_2x128^2  &  162.089 & 162.089 & 14.585 & 11.113
256_2x128^2  &  631.857 & 631.857 & 58.114 & 10.873
2_2x128^3  &  448.303 & 448.303 & 47.067 & 9.525
4_2x128^3  &  509.456 & 509.456 & 91.613 & 5.561
16_2x128^3  &  980.691 & 980.691 & 231.569 & 4.235
64_2x128^3  &  1039.707 & 1039.707 & 266.265 & 3.905
256_2x128^3  &  989.913 & 989.913 & 268.916 & 3.681
2_2x128^4  &  715.189 & 715.189 & 175.210 & 4.082
2_4x2^1  &  0.002 & 0.002 & 0.000 & 11.140
4_4x2^1  &  0.003 & 0.003 & 0.000 & 10.722
16_4x2^1  &  0.014 & 0.014 & 0.001 & 10.746
64_4x2^1  &  0.054 & 0.054 & 0.005 & 10.694
256_4x2^1  &  0.218 & 0.218 & 0.020 & 10.785
2_4x2^2  &  0.005 & 0.005 & 0.001 & 8.031
4_4x2^2  &  0.011 & 0.011 & 0.001 & 8.098
16_4x2^2  &  0.043 & 0.043 & 0.005 & 8.149
64_4x2^2  &  0.173 & 0.173 & 0.021 & 8.191
256_4x2^2  &  0.688 & 0.688 & 0.085 & 8.128
2_4x2^3  &  0.017 & 0.017 & 0.003 & 6.743
4_4x2^3  &  0.034 & 0.034 & 0.005 & 6.754
16_4x2^3  &  0.139 & 0.139 & 0.021 & 6.704
64_4x2^3  &  0.553 & 0.553 & 0.083 & 6.684
256_4x2^3  &  2.201 & 2.201 & 0.325 & 6.768
2_4x2^4  &  0.056 & 0.056 & 0.009 & 6.019
4_4x2^4  &  0.113 & 0.113 & 0.019 & 6.040
16_4x2^4  &  0.456 & 0.456 & 0.075 & 6.084
64_4x2^4  &  1.797 & 1.797 & 0.297 & 6.048
256_4x2^4  &  7.240 & 7.240 & 1.187 & 6.100
2_4x2^5  &  0.190 & 0.190 & 0.034 & 5.648
4_4x2^5  &  0.382 & 0.382 & 0.068 & 5.650
16_4x2^5  &  1.515 & 1.515 & 0.269 & 5.642
64_4x2^5  &  6.083 & 6.083 & 1.073 & 5.668
256_4x2^5  &  24.420 & 24.420 & 4.266 & 5.725
2_4x2^6  &  0.656 & 0.656 & 0.122 & 5.394
4_4x2^6  &  1.310 & 1.310 & 0.241 & 5.425
16_4x2^6  &  5.227 & 5.227 & 0.968 & 5.398
64_4x2^6  &  20.888 & 20.888 & 3.832 & 5.451
256_4x2^6  &  83.207 & 83.207 & 15.306 & 5.436
2_4x2^7  &  2.289 & 2.289 & 0.440 & 5.203
4_4x2^7  &  4.577 & 4.577 & 0.888 & 5.153
16_4x2^7  &  18.309 & 18.309 & 3.514 & 5.211
64_4x2^7  &  73.040 & 73.040 & 13.992 & 5.220
256_4x2^7  &  291.900 & 291.900 & 52.921 & 5.516
2_4x2^8  &  8.097 & 8.097 & 1.594 & 5.079
4_4x2^8  &  16.219 & 16.219 & 3.210 & 5.053
16_4x2^8  &  64.723 & 64.723 & 12.751 & 5.076
64_4x2^8  &  260.127 & 260.127 & 49.054 & 5.303
256_4x2^8  &  453.778 & 453.778 & 54.072 & 8.392
2_4x2^9  &  29.110 & 29.110 & 5.911 & 4.925
4_4x2^9  &  58.055 & 58.055 & 11.650 & 4.983
16_4x2^9  &  230.585 & 230.585 & 46.111 & 5.001
64_4x2^9  &  449.759 & 449.759 & 68.614 & 6.555
256_4x2^9  &  491.061 & 491.061 & 53.633 & 9.156
2_4x2^10  &  105.286 & 105.286 & 21.859 & 4.817
4_4x2^10  &  210.302 & 210.302 & 42.741 & 4.920
16_4x2^10  &  449.472 & 449.472 & 71.436 & 6.292
64_4x2^10  &  495.137 & 495.137 & 70.764 & 6.997
256_4x2^10  &  504.057 & 504.057 & 54.135 & 9.311
2_4x2^11  &  358.577 & 358.577 & 66.766 & 5.371
4_4x2^11  &  386.160 & 386.160 & 71.165 & 5.426
16_4x2^11  &  498.949 & 498.949 & 73.767 & 6.764
64_4x2^11  &  512.739 & 512.739 & 71.718 & 7.149
2_4x2^12  &  456.454 & 456.454 & 73.015 & 6.252
4_4x2^12  &  442.655 & 442.655 & 74.074 & 5.976
16_4x2^12  &  517.478 & 517.478 & 74.807 & 6.918
2_4x2^13  &  498.469 & 498.469 & 74.771 & 6.667
4_4x2^13  &  462.813 & 462.813 & 75.019 & 6.169
2_4x2^14  &  511.390 & 511.390 & 67.022 & 7.630
2_4x4^1  &  0.003 & 0.003 & 0.000 & 11.038
4_4x4^1  &  0.007 & 0.007 & 0.001 & 11.113
16_4x4^1  &  0.027 & 0.027 & 0.002 & 10.967
64_4x4^1  &  0.108 & 0.109 & 0.010 & 10.876
256_4x4^1  &  0.437 & 0.431 & 0.040 & 10.666
2_4x4^2  &  0.015 & 0.015 & 0.002 & 8.640
4_4x4^2  &  0.030 & 0.030 & 0.003 & 8.658
16_4x4^2  &  0.119 & 0.119 & 0.014 & 8.389
64_4x4^2  &  0.470 & 0.476 & 0.057 & 8.412
256_4x4^2  &  1.890 & 1.905 & 0.226 & 8.430
2_4x4^3  &  0.062 & 0.144 & 0.009 & 16.508
4_4x4^3  &  0.124 & 0.288 & 0.017 & 16.529
16_4x4^3  &  0.497 & 1.145 & 0.070 & 16.454
64_4x4^3  &  1.981 & 4.561 & 0.280 & 16.316
256_4x4^3  &  7.909 & 18.326 & 1.107 & 16.558
2_4x4^4  &  0.255 & 0.456 & 0.040 & 11.523
4_4x4^4  &  0.507 & 0.907 & 0.080 & 11.348
16_4x4^4  &  2.042 & 5.913 & 0.318 & 18.571
64_4x4^4  &  8.132 & 23.652 & 1.277 & 18.521
256_4x4^4  &  32.381 & 94.199 & 5.109 & 18.439
2_4x4^5  &  1.022 & 2.246 & 0.174 & 12.941
4_4x4^5  &  2.054 & 4.468 & 0.346 & 12.925
16_4x4^5  &  8.195 & 17.920 & 1.386 & 12.929
64_4x4^5  &  32.741 & 71.680 & 5.420 & 13.226
256_4x4^5  &  130.962 & 283.694 & 21.922 & 12.941
2_4x4^6  &  4.145 & 10.695 & 0.744 & 14.382
4_4x4^6  &  8.273 & 21.333 & 1.479 & 14.425
16_4x4^6  &  33.264 & 84.881 & 5.926 & 14.324
64_4x4^6  &  132.642 & 341.333 & 23.898 & 14.283
256_4x4^6  &  528.380 & 1340.314 & 92.243 & 14.530
2_4x4^7  &  16.721 & 49.626 & 3.115 & 15.931
4_4x4^7  &  33.321 & 98.987 & 6.205 & 15.952
16_4x4^7  &  134.250 & 390.737 & 24.808 & 15.751
64_4x4^7  &  532.186 & 1558.845 & 97.333 & 16.016
256_4x4^7  &  799.354 & 2205.831 & 134.603 & 16.388
2_4x4^8  &  66.625 & 225.882 & 12.912 & 17.494
4_4x4^8  &  134.202 & 448.170 & 25.605 & 17.503
16_4x4^8  &  536.807 & 1750.881 & 101.010 & 17.334
64_4x4^8  &  815.739 & 2328.476 & 136.788 & 17.023
256_4x4^8  &  831.036 & 2792.727 & 131.899 & 21.173
2_4x4^9  &  268.329 & 723.053 & 52.661 & 13.730
4_4x4^9  &  531.761 & 1273.546 & 103.877 & 12.260
16_4x4^9  &  817.433 & 2197.999 & 137.960 & 15.932
64_4x4^9  &  857.316 & 2379.619 & 141.627 & 16.802
256_4x4^9  &  849.581 & 2427.016 & 133.584 & 18.168
2_4x4^10  &  824.024 & 1843.425 & 140.732 & 13.099
4_4x4^10  &  688.686 & 1582.063 & 138.254 & 11.443
16_4x4^10  &  855.725 & 2556.590 & 143.195 & 17.854
64_4x4^10  &  882.393 & 2667.900 & 143.245 & 18.625
256_4x4^10  &  850.942 & 2674.273 & 134.876 & 19.828
2_4x4^11  &  818.018 & 2045.159 & 142.226 & 14.380
4_4x4^11  &  756.961 & 1779.365 & 143.199 & 12.426
16_4x4^11  &  879.153 & 2896.406 & 144.091 & 20.101
64_4x4^11  &  885.249 & 2897.971 & 143.561 & 20.186
2_4x4^12  &  852.631 & 2384.366 & 144.033 & 16.554
4_4x4^12  &  788.379 & 1933.041 & 144.404 & 13.386
16_4x4^12  &  882.321 & 3155.258 & 143.869 & 21.931
2_4x4^13  &  857.801 & 2303.665 & 144.132 & 15.983
4_4x4^13  &  758.699 & 1741.068 & 144.177 & 12.076
2_4x4^14  &  861.789 & 2227.305 & 141.471 & 15.744
2_4x8^1  &  0.007 & 0.007 & 0.001 & 11.289
4_4x8^1  &  0.014 & 0.014 & 0.001 & 10.993
16_4x8^1  &  0.054 & 0.054 & 0.005 & 10.926
64_4x8^1  &  0.218 & 0.218 & 0.020 & 10.793
256_4x8^1  &  0.866 & 0.866 & 0.081 & 10.654
2_4x8^2  &  0.046 & 0.046 & 0.005 & 9.002
4_4x8^2  &  0.092 & 0.092 & 0.010 & 8.856
16_4x8^2  &  0.370 & 0.370 & 0.042 & 8.717
64_4x8^2  &  1.470 & 1.470 & 0.170 & 8.624
256_4x8^2  &  5.879 & 5.879 & 0.674 & 8.717
2_4x8^3  &  0.305 & 0.305 & 0.041 & 7.490
4_4x8^3  &  0.611 & 0.611 & 0.082 & 7.456
16_4x8^3  &  2.438 & 2.438 & 0.328 & 7.427
64_4x8^3  &  9.715 & 9.715 & 1.295 & 7.503
256_4x8^3  &  39.010 & 39.010 & 5.163 & 7.556
2_4x8^4  &  2.033 & 2.033 & 0.302 & 6.730
4_4x8^4  &  4.066 & 4.066 & 0.600 & 6.782
16_4x8^4  &  16.071 & 16.071 & 2.376 & 6.763
64_4x8^4  &  64.570 & 64.570 & 9.510 & 6.789
256_4x8^4  &  257.134 & 257.134 & 36.618 & 7.022
2_4x8^5  &  13.625 & 13.625 & 2.152 & 6.333
4_4x8^5  &  27.350 & 27.350 & 4.315 & 6.338
16_4x8^5  &  109.135 & 109.135 & 16.601 & 6.574
64_4x8^5  &  430.769 & 430.769 & 66.101 & 6.517
256_4x8^5  &  1106.173 & 1106.173 & 214.792 & 5.150
2_4x8^6  &  94.176 & 94.176 & 15.110 & 6.233
4_4x8^6  &  185.849 & 185.849 & 29.979 & 6.199
16_4x8^6  &  732.165 & 732.165 & 115.990 & 6.312
64_4x8^6  &  1125.014 & 1125.014 & 229.198 & 4.908
256_4x8^6  &  1097.419 & 1097.419 & 243.215 & 4.512
2_4x8^7  &  632.263 & 632.263 & 105.546 & 5.990
4_4x8^7  &  693.991 & 693.991 & 195.107 & 3.557
16_4x8^7  &  1163.544 & 1163.544 & 236.850 & 4.913
64_4x8^7  &  1178.349 & 1178.349 & 244.387 & 4.822
256_4x8^7  &  1106.191 & 1106.191 & 246.355 & 4.490
2_4x8^8  &  962.620 & 962.620 & 235.506 & 4.087
4_4x8^8  &  788.220 & 788.220 & 240.748 & 3.274
16_4x8^8  &  1206.901 & 1206.901 & 244.468 & 4.937
2_4x8^9  &  1009.126 & 1009.126 & 244.232 & 4.132
4_4x8^9  &  802.747 & 802.747 & 244.106 & 3.289
2_4x16^1  &  0.014 & 0.014 & 0.001 & 11.039
4_4x16^1  &  0.027 & 0.027 & 0.002 & 11.077
16_4x16^1  &  0.108 & 0.108 & 0.010 & 10.922
64_4x16^1  &  0.433 & 0.433 & 0.040 & 10.737
256_4x16^1  &  1.732 & 1.732 & 0.161 & 10.782
2_4x16^2  &  0.159 & 0.159 & 0.017 & 9.210
4_4x16^2  &  0.319 & 0.319 & 0.035 & 9.199
16_4x16^2  &  1.280 & 1.280 & 0.141 & 9.066
64_4x16^2  &  5.106 & 5.106 & 0.562 & 9.092
256_4x16^2  &  20.317 & 20.317 & 2.233 & 9.099
2_4x16^3  &  1.919 & 1.919 & 0.245 & 7.844
4_4x16^3  &  3.802 & 3.802 & 0.488 & 7.788
16_4x16^3  &  15.355 & 15.355 & 1.928 & 7.964
64_4x16^3  &  60.837 & 60.837 & 7.738 & 7.862
256_4x16^3  &  241.966 & 241.966 & 29.820 & 8.114
2_4x16^4  &  24.012 & 24.012 & 3.406 & 7.051
4_4x16^4  &  47.811 & 47.811 & 6.751 & 7.082
16_4x16^4  &  191.810 & 191.810 & 25.975 & 7.384
64_4x16^4  &  745.130 & 745.130 & 102.051 & 7.302
256_4x16^4  &  1242.330 & 1242.330 & 312.963 & 3.970
2_4x16^5  &  312.289 & 312.289 & 45.626 & 6.845
4_4x16^5  &  601.392 & 601.392 & 89.817 & 6.696
16_4x16^5  &  1306.616 & 1306.616 & 303.787 & 4.301
64_4x16^5  &  1396.129 & 1396.129 & 348.832 & 4.002
256_4x16^5  &  1301.286 & 1301.286 & 362.798 & 3.587
2_4x16^6  &  1050.572 & 1050.572 & 331.120 & 3.173
4_4x16^6  &  843.533 & 843.533 & 339.133 & 2.487
16_4x16^6  &  1479.349 & 1479.349 & 352.248 & 4.200
2_4x16^7  &  1114.108 & 1114.108 & 355.901 & 3.130
2_4x32^1  &  0.027 & 0.027 & 0.003 & 10.776
4_4x32^1  &  0.054 & 0.054 & 0.005 & 10.787
16_4x32^1  &  0.218 & 0.218 & 0.020 & 10.775
64_4x32^1  &  0.877 & 0.877 & 0.081 & 10.863
256_4x32^1  &  3.493 & 3.493 & 0.323 & 10.808
2_4x32^2  &  0.585 & 0.585 & 0.063 & 9.259
4_4x32^2  &  1.167 & 1.167 & 0.127 & 9.221
16_4x32^2  &  4.668 & 4.668 & 0.505 & 9.241
64_4x32^2  &  18.575 & 18.575 & 2.022 & 9.184
256_4x32^2  &  75.093 & 75.093 & 8.043 & 9.337
2_4x32^3  &  13.536 & 13.536 & 1.698 & 7.972
4_4x32^3  &  27.176 & 27.176 & 3.419 & 7.948
16_4x32^3  &  108.289 & 108.289 & 13.750 & 7.876
64_4x32^3  &  427.467 & 427.467 & 51.938 & 8.230
256_4x32^3  &  1332.398 & 1332.398 & 196.341 & 6.786
2_4x32^4  &  333.080 & 333.080 & 45.104 & 7.385
4_4x32^4  &  638.210 & 638.210 & 88.891 & 7.180
16_4x32^4  &  1488.809 & 1488.809 & 319.498 & 4.660
64_4x32^4  &  1617.797 & 1617.797 & 473.108 & 3.420
256_4x32^4  &  1478.858 & 1478.858 & 499.220 & 2.962
2_4x32^5  &  1138.865 & 1138.865 & 428.273 & 2.659
4_4x32^5  &  891.352 & 891.352 & 455.858 & 1.955
16_4x32^5  &  1714.581 & 1714.581 & 480.615 & 3.567
2_4x64^1  &  0.054 & 0.054 & 0.005 & 10.588
4_4x64^1  &  0.108 & 0.108 & 0.010 & 10.702
16_4x64^1  &  0.437 & 0.437 & 0.040 & 10.833
64_4x64^1  &  1.747 & 1.747 & 0.162 & 10.762
256_4x64^1  &  6.926 & 6.926 & 0.643 & 10.777
2_4x64^2  &  2.240 & 2.240 & 0.241 & 9.279
4_4x64^2  &  4.444 & 4.444 & 0.482 & 9.223
16_4x64^2  &  17.825 & 17.825 & 1.913 & 9.317
64_4x64^2  &  71.111 & 71.111 & 7.520 & 9.456
256_4x64^2  &  282.947 & 282.947 & 29.169 & 9.700
2_4x64^3  &  101.928 & 101.928 & 12.182 & 8.367
4_4x64^3  &  202.707 & 202.707 & 24.282 & 8.348
16_4x64^3  &  788.592 & 788.592 & 96.244 & 8.194
64_4x64^3  &  1635.488 & 1635.488 & 345.297 & 4.736
256_4x64^3  &  1652.325 & 1652.325 & 498.574 & 3.314
2_4x64^4  &  1123.176 & 1123.176 & 324.561 & 3.461
4_4x64^4  &  909.491 & 909.491 & 435.487 & 2.088
16_4x64^4  &  1872.773 & 1872.773 & 497.774 & 3.762
2_4x128^1  &  0.110 & 0.110 & 0.010 & 10.954
4_4x128^1  &  0.218 & 0.218 & 0.020 & 10.937
16_4x128^1  &  0.870 & 0.870 & 0.080 & 10.814
64_4x128^1  &  3.478 & 3.478 & 0.321 & 10.822
256_4x128^1  &  13.974 & 13.974 & 1.277 & 10.945
2_4x128^2  &  8.723 & 8.723 & 0.927 & 9.409
4_4x128^2  &  17.354 & 17.354 & 1.849 & 9.384
16_4x128^2  &  69.418 & 69.418 & 7.370 & 9.419
64_4x128^2  &  274.764 & 274.764 & 28.289 & 9.713
256_4x128^2  &  1060.202 & 1060.202 & 117.633 & 9.013
2_4x128^3  &  757.045 & 757.045 & 94.838 & 7.983
4_4x128^3  &  805.676 & 805.676 & 185.510 & 4.343
16_4x128^3  &  1747.936 & 1747.936 & 464.911 & 3.760
64_4x128^3  &  1803.746 & 1803.746 & 516.285 & 3.494
256_4x128^3  &  1740.525 & 1740.525 & 524.759 & 3.317
2_4x128^4  &  1206.491 & 1206.491 & 343.999 & 3.507
2_8x2^1  &  0.003 & 0.003 & 0.000 & 9.742
4_8x2^1  &  0.006 & 0.006 & 0.001 & 9.755
16_8x2^1  &  0.025 & 0.025 & 0.002 & 9.832
64_8x2^1  &  0.097 & 0.097 & 0.010 & 9.706
256_8x2^1  &  0.388 & 0.388 & 0.040 & 9.610
2_8x2^2  &  0.017 & 0.017 & 0.002 & 7.660
4_8x2^2  &  0.034 & 0.034 & 0.004 & 7.748
16_8x2^2  &  0.136 & 0.136 & 0.018 & 7.692
64_8x2^2  &  0.535 & 0.535 & 0.070 & 7.624
256_8x2^2  &  2.152 & 2.152 & 0.281 & 7.649
2_8x2^3  &  0.101 & 0.101 & 0.015 & 6.637
4_8x2^3  &  0.200 & 0.200 & 0.031 & 6.552
16_8x2^3  &  0.802 & 0.802 & 0.121 & 6.610
64_8x2^3  &  3.195 & 3.195 & 0.482 & 6.627
256_8x2^3  &  12.852 & 12.852 & 1.916 & 6.706
2_8x2^4  &  0.635 & 0.635 & 0.105 & 6.046
4_8x2^4  &  1.261 & 1.261 & 0.211 & 5.980
16_8x2^4  &  5.052 & 5.052 & 0.847 & 5.967
64_8x2^4  &  20.178 & 20.178 & 3.398 & 5.938
256_8x2^4  &  80.951 & 80.951 & 13.371 & 6.054
2_8x2^5  &  4.150 & 4.150 & 0.740 & 5.609
4_8x2^5  &  8.310 & 8.310 & 1.466 & 5.670
16_8x2^5  &  33.321 & 33.321 & 5.850 & 5.696
64_8x2^5  &  132.637 & 132.637 & 23.319 & 5.688
256_8x2^5  &  405.046 & 405.046 & 68.180 & 5.941
2_8x2^6  &  28.147 & 28.147 & 5.225 & 5.387
4_8x2^6  &  56.352 & 56.352 & 10.489 & 5.373
16_8x2^6  &  224.943 & 224.943 & 42.414 & 5.304
64_8x2^6  &  464.230 & 464.230 & 101.550 & 4.571
256_8x2^6  &  548.536 & 548.536 & 62.605 & 8.762
2_8x2^7  &  195.739 & 195.739 & 37.846 & 5.172
4_8x2^7  &  327.504 & 327.504 & 73.417 & 4.461
16_8x2^7  &  524.320 & 524.320 & 117.819 & 4.450
64_8x2^7  &  571.658 & 571.658 & 110.018 & 5.196
256_8x2^7  &  584.982 & 584.982 & 68.115 & 8.588
2_8x2^8  &  475.929 & 475.929 & 117.393 & 4.054
4_8x2^8  &  473.286 & 473.286 & 121.237 & 3.904
16_8x2^8  &  607.072 & 607.072 & 122.752 & 4.946
2_8x2^9  &  555.639 & 555.639 & 125.161 & 4.439
4_8x2^9  &  508.686 & 508.686 & 96.054 & 5.296
2_8x4^1  &  0.006 & 0.006 & 0.001 & 9.977
4_8x4^1  &  0.012 & 0.012 & 0.001 & 9.919
16_8x4^1  &  0.049 & 0.049 & 0.005 & 9.983
64_8x4^1  &  0.195 & 0.195 & 0.020 & 9.711
256_8x4^1  &  0.786 & 0.786 & 0.081 & 9.741
2_8x4^2  &  0.041 & 0.041 & 0.005 & 8.023
4_8x4^2  &  0.083 & 0.083 & 0.010 & 7.995
16_8x4^2  &  0.332 & 0.332 & 0.042 & 7.907
64_8x4^2  &  1.312 & 1.312 & 0.169 & 7.767
256_8x4^2  &  5.277 & 5.277 & 0.674 & 7.835
2_8x4^3  &  0.272 & 0.272 & 0.040 & 6.755
4_8x4^3  &  0.543 & 0.543 & 0.081 & 6.701
16_8x4^3  &  2.167 & 2.167 & 0.325 & 6.665
64_8x4^3  &  8.702 & 8.702 & 1.280 & 6.798
256_8x4^3  &  34.743 & 34.743 & 5.161 & 6.731
2_8x4^4  &  1.795 & 1.795 & 0.298 & 6.034
4_8x4^4  &  3.601 & 3.601 & 0.600 & 5.999
16_8x4^4  &  14.298 & 14.298 & 2.367 & 6.040
64_8x4^4  &  57.705 & 57.705 & 9.533 & 6.053
256_8x4^4  &  229.452 & 229.452 & 36.606 & 6.268
2_8x4^5  &  12.146 & 12.146 & 2.148 & 5.654
4_8x4^5  &  24.234 & 24.234 & 4.269 & 5.676
16_8x4^5  &  97.767 & 97.767 & 16.630 & 5.879
64_8x4^5  &  388.210 & 388.210 & 66.197 & 5.864
256_8x4^5  &  992.897 & 992.897 & 159.312 & 6.232
2_8x4^6  &  83.904 & 83.904 & 15.032 & 5.582
4_8x4^6  &  166.426 & 166.426 & 29.899 & 5.566
16_8x4^6  &  662.974 & 662.974 & 118.927 & 5.575
64_8x4^6  &  1062.284 & 1062.284 & 215.733 & 4.924
256_8x4^6  &  1091.431 & 1091.431 & 147.777 & 7.386
2_8x4^7  &  581.143 & 581.143 & 108.339 & 5.364
4_8x4^7  &  718.014 & 718.014 & 206.641 & 3.475
16_8x4^7  &  1111.903 & 1111.903 & 238.315 & 4.666
64_8x4^7  &  1141.957 & 1141.957 & 225.498 & 5.064
256_8x4^7  &  1121.618 & 1121.618 & 158.198 & 7.090
2_8x4^8  &  859.510 & 859.510 & 237.546 & 3.618
4_8x4^8  &  882.222 & 882.222 & 240.919 & 3.662
16_8x4^8  &  1173.028 & 1173.028 & 241.425 & 4.859
2_8x4^9  &  912.131 & 912.131 & 244.493 & 3.731
4_8x4^9  &  911.992 & 911.992 & 203.861 & 4.474
2_8x8^1  &  0.012 & 0.012 & 0.001 & 9.928
4_8x8^1  &  0.024 & 0.024 & 0.002 & 9.929
16_8x8^1  &  0.098 & 0.098 & 0.010 & 9.935
64_8x8^1  &  0.395 & 0.390 & 0.040 & 9.659
256_8x8^1  &  1.565 & 1.558 & 0.161 & 9.706
2_8x8^2  &  0.114 & 0.188 & 0.014 & 13.796
4_8x8^2  &  0.227 & 0.376 & 0.028 & 13.389
16_8x8^2  &  0.899 & 1.504 & 0.113 & 13.361
64_8x8^2  &  3.617 & 6.018 & 0.449 & 13.405
256_8x8^2  &  14.468 & 23.860 & 1.801 & 13.248
2_8x8^3  &  0.958 & 1.326 & 0.139 & 9.525
4_8x8^3  &  1.916 & 2.653 & 0.278 & 9.529
16_8x8^3  &  7.619 & 10.610 & 1.113 & 9.535
64_8x8^3  &  30.593 & 42.440 & 4.433 & 9.574
256_8x8^3  &  121.905 & 169.761 & 17.687 & 9.598
2_8x8^4  &  7.904 & 14.043 & 1.275 & 11.013
4_8x8^4  &  15.738 & 27.644 & 2.571 & 10.753
16_8x8^4  &  62.951 & 111.746 & 10.293 & 10.857
64_8x8^4  &  249.941 & 445.805 & 38.045 & 11.718
256_8x8^4  &  1001.244 & 1764.595 & 160.788 & 10.975
2_8x8^5  &  64.078 & 139.574 & 11.169 & 12.496
4_8x8^5  &  127.689 & 275.486 & 22.293 & 12.357
16_8x8^5  &  509.515 & 801.221 & 83.076 & 9.644
64_8x8^5  &  1778.983 & 2375.332 & 340.176 & 6.983
256_8x8^5  &  1560.381 & 2476.019 & 380.824 & 6.502
2_8x8^6  &  515.683 & 943.158 & 85.997 & 10.967
4_8x8^6  &  1000.519 & 1303.273 & 184.679 & 7.057
16_8x8^6  &  1579.103 & 2781.760 & 420.698 & 6.612
64_8x8^6  &  1657.341 & 3106.873 & 442.154 & 7.027
256_8x8^6  &  1668.232 & 3130.955 & 382.094 & 8.194
2_8x8^7  &  1520.000 & 2277.776 & 425.777 & 5.350
4_8x8^7  &  1331.273 & 1898.146 & 445.221 & 4.263
16_8x8^7  &  1710.026 & 2910.669 & 456.088 & 6.382
64_8x8^7  &  1738.699 & 2891.238 & 449.914 & 6.426
256_8x8^7  &  1669.936 & 2808.527 & 400.732 & 7.008
2_8x8^8  &  1672.493 & 2794.804 & 460.455 & 6.070
4_8x8^8  &  1403.965 & 2212.732 & 456.767 & 4.844
16_8x8^8  &  1767.523 & 3348.141 & 455.884 & 7.344
2_8x8^9  &  1714.012 & 2829.401 & 458.390 & 6.172
4_8x8^9  &  1410.257 & 2357.018 & 441.142 & 5.343
2_8x16^1  &  0.024 & 0.024 & 0.002 & 9.949
4_8x16^1  &  0.049 & 0.049 & 0.005 & 9.954
16_8x16^1  &  0.196 & 0.196 & 0.020 & 9.892
64_8x16^1  &  0.779 & 0.779 & 0.080 & 9.711
256_8x16^1  &  3.144 & 3.144 & 0.319 & 9.869
2_8x16^2  &  0.346 & 0.346 & 0.041 & 8.371
4_8x16^2  &  0.690 & 0.690 & 0.084 & 8.207
16_8x16^2  &  2.759 & 2.759 & 0.337 & 8.195
64_8x16^2  &  11.064 & 11.064 & 1.354 & 8.169
256_8x16^2  &  44.138 & 44.138 & 5.305 & 8.320
2_8x16^3  &  4.545 & 4.545 & 0.647 & 7.027
4_8x16^3  &  9.178 & 9.178 & 1.296 & 7.079
16_8x16^3  &  36.433 & 36.433 & 5.165 & 7.054
64_8x16^3  &  146.008 & 146.008 & 19.775 & 7.383
256_8x16^3  &  576.360 & 576.360 & 77.577 & 7.430
2_8x16^4  &  60.413 & 60.413 & 9.443 & 6.398
4_8x16^4  &  120.648 & 120.648 & 18.313 & 6.588
16_8x16^4  &  481.175 & 481.175 & 70.822 & 6.794
64_8x16^4  &  1700.026 & 1700.026 & 280.965 & 6.051
256_8x16^4  &  1943.967 & 1943.967 & 637.937 & 3.047
2_8x16^5  &  808.421 & 808.421 & 128.151 & 6.308
4_8x16^5  &  1118.015 & 1118.015 & 248.658 & 4.496
16_8x16^5  &  2024.989 & 2024.989 & 634.174 & 3.193
64_8x16^5  &  2022.716 & 2022.716 & 684.199 & 2.956
256_8x16^5  &  2096.898 & 2096.898 & 691.053 & 3.034
2_8x16^6  &  1977.888 & 1977.888 & 662.546 & 2.985
4_8x16^6  &  1503.016 & 1503.016 & 681.260 & 2.206
16_8x16^6  &  2163.597 & 2163.597 & 689.222 & 3.139
2_8x16^7  &  2121.771 & 2121.771 & 689.287 & 3.078
2_8x32^1  &  0.049 & 0.049 & 0.005 & 9.672
4_8x32^1  &  0.098 & 0.098 & 0.010 & 9.737
16_8x32^1  &  0.393 & 0.393 & 0.040 & 9.828
64_8x32^1  &  1.572 & 1.572 & 0.161 & 9.752
256_8x32^1  &  6.288 & 6.288 & 0.646 & 9.732
2_8x32^2  &  1.158 & 1.158 & 0.140 & 8.267
4_8x32^2  &  2.328 & 2.328 & 0.282 & 8.262
16_8x32^2  &  9.337 & 9.337 & 1.127 & 8.281
64_8x32^2  &  37.150 & 37.150 & 4.434 & 8.378
256_8x32^2  &  148.995 & 148.995 & 17.904 & 8.322
2_8x32^3  &  27.879 & 27.879 & 3.868 & 7.207
4_8x32^3  &  55.863 & 55.863 & 7.674 & 7.279
16_8x32^3  &  223.030 & 223.030 & 29.621 & 7.529
64_8x32^3  &  877.169 & 877.169 & 116.836 & 7.508
256_8x32^3  &  1998.049 & 1998.049 & 443.820 & 4.502
2_8x32^4  &  693.100 & 693.100 & 101.652 & 6.818
4_8x32^4  &  1080.953 & 1080.953 & 201.963 & 5.352
16_8x32^4  &  2143.658 & 2143.658 & 708.892 & 3.024
64_8x32^4  &  2263.723 & 2263.723 & 917.497 & 2.467
256_8x32^4  &  2305.336 & 2305.336 & 961.894 & 2.397
2_8x32^5  &  2267.114 & 2267.114 & 836.975 & 2.709
4_8x32^5  &  1568.189 & 1568.189 & 889.469 & 1.763
16_8x32^5  &  2400.563 & 2400.563 & 925.158 & 2.595
2_8x64^1  &  0.098 & 0.098 & 0.010 & 9.823
4_8x64^1  &  0.197 & 0.197 & 0.020 & 9.940
16_8x64^1  &  0.779 & 0.779 & 0.081 & 9.670
64_8x64^1  &  3.158 & 3.158 & 0.321 & 9.823
256_8x64^1  &  12.522 & 12.522 & 1.276 & 9.812
2_8x64^2  &  4.244 & 4.244 & 0.507 & 8.369
4_8x64^2  &  8.399 & 8.399 & 1.017 & 8.257
16_8x64^2  &  33.862 & 33.862 & 4.042 & 8.378
64_8x64^2  &  135.092 & 135.092 & 15.999 & 8.444
256_8x64^2  &  534.726 & 534.726 & 61.273 & 8.727
2_8x64^3  &  195.623 & 195.623 & 25.902 & 7.552
4_8x64^3  &  386.145 & 386.145 & 51.723 & 7.466
16_8x64^3  &  1502.609 & 1502.609 & 202.177 & 7.432
64_8x64^3  &  2148.808 & 2148.808 & 733.426 & 2.930
256_8x64^3  &  2480.568 & 2480.568 & 968.061 & 2.562
2_8x64^4  &  2221.919 & 2221.919 & 636.720 & 3.490
4_8x64^4  &  1615.401 & 1615.401 & 851.432 & 1.897
16_8x64^4  &  2357.175 & 2357.175 & 961.780 & 2.451
2_8x128^1  &  0.197 & 0.197 & 0.020 & 9.850
4_8x128^1  &  0.391 & 0.391 & 0.040 & 9.762
16_8x128^1  &  1.565 & 1.565 & 0.160 & 9.778
64_8x128^1  &  6.234 & 6.234 & 0.642 & 9.715
256_8x128^1  &  25.043 & 25.043 & 2.553 & 9.810
2_8x128^2  &  16.085 & 16.085 & 1.901 & 8.461
4_8x128^2  &  32.084 & 32.084 & 3.828 & 8.382
16_8x128^2  &  128.338 & 128.338 & 15.259 & 8.411
64_8x128^2  &  506.667 & 506.667 & 58.202 & 8.705
256_8x128^2  &  1670.043 & 1670.043 & 231.083 & 7.227
2_8x128^3  &  1406.847 & 1406.847 & 191.457 & 7.348
4_8x128^3  &  1302.419 & 1302.419 & 368.710 & 3.532
16_8x128^3  &  2252.579 & 2252.579 & 897.963 & 2.509
64_8x128^3  &  2456.070 & 2456.070 & 1020.129 & 2.408
256_8x128^3  &  2508.594 & 2508.594 & 1043.298 & 2.404
2_8x128^4  &  2379.502 & 2379.502 & 683.657 & 3.481
2_16x2^1  &  0.006 & 0.006 & 0.001 & 9.170
4_16x2^1  &  0.012 & 0.012 & 0.001 & 9.285
16_16x2^1  &  0.046 & 0.046 & 0.005 & 9.154
64_16x2^1  &  0.183 & 0.183 & 0.020 & 9.177
256_16x2^1  &  0.739 & 0.739 & 0.081 & 9.162
2_16x2^2  &  0.060 & 0.060 & 0.008 & 7.590
4_16x2^2  &  0.120 & 0.120 & 0.016 & 7.553
16_16x2^2  &  0.481 & 0.481 & 0.063 & 7.618
64_16x2^2  &  1.903 & 1.903 & 0.254 & 7.499
256_16x2^2  &  7.592 & 7.592 & 1.019 & 7.452
2_16x2^3  &  0.696 & 0.696 & 0.106 & 6.558
4_16x2^3  &  1.386 & 1.386 & 0.212 & 6.551
16_16x2^3  &  5.556 & 5.556 & 0.839 & 6.622
64_16x2^3  &  22.098 & 22.098 & 3.349 & 6.598
256_16x2^3  &  88.561 & 88.561 & 12.881 & 6.875
2_16x2^4  &  8.680 & 8.680 & 1.465 & 5.927
4_16x2^4  &  17.413 & 17.413 & 2.900 & 6.004
16_16x2^4  &  69.341 & 69.341 & 11.152 & 6.218
64_16x2^4  &  272.915 & 272.915 & 45.730 & 5.968
256_16x2^4  &  458.873 & 458.873 & 70.315 & 6.526
2_16x2^5  &  112.121 & 112.121 & 19.716 & 5.687
4_16x2^5  &  221.851 & 221.851 & 39.811 & 5.573
16_16x2^5  &  439.794 & 439.794 & 150.527 & 2.922
64_16x2^5  &  605.963 & 605.963 & 148.077 & 4.092
256_16x2^5  &  641.585 & 641.585 & 69.332 & 9.254
2_16x2^6  &  461.053 & 461.053 & 173.940 & 2.651
4_16x2^6  &  478.812 & 478.812 & 178.580 & 2.681
16_16x2^6  &  664.359 & 664.359 & 181.890 & 3.653
2_16x2^7  &  548.680 & 548.680 & 122.567 & 4.477
2_16x4^1  &  0.011 & 0.011 & 0.001 & 9.523
4_16x4^1  &  0.023 & 0.023 & 0.002 & 9.529
16_16x4^1  &  0.091 & 0.091 & 0.010 & 9.352
64_16x4^1  &  0.365 & 0.365 & 0.040 & 9.152
256_16x4^1  &  1.472 & 1.472 & 0.159 & 9.255
2_16x4^2  &  0.132 & 0.132 & 0.017 & 7.751
4_16x4^2  &  0.263 & 0.263 & 0.034 & 7.718
16_16x4^2  &  1.052 & 1.052 & 0.137 & 7.658
64_16x4^2  &  4.230 & 4.230 & 0.554 & 7.637
256_16x4^2  &  16.919 & 16.919 & 2.209 & 7.658
2_16x4^3  &  1.572 & 1.572 & 0.240 & 6.560
4_16x4^3  &  3.144 & 3.144 & 0.480 & 6.551
16_16x4^3  &  12.622 & 12.622 & 1.895 & 6.661
64_16x4^3  &  50.299 & 50.299 & 7.536 & 6.675
256_16x4^3  &  200.819 & 200.819 & 29.007 & 6.923
2_16x4^4  &  20.163 & 20.163 & 3.394 & 5.941
4_16x4^4  &  39.795 & 39.795 & 6.628 & 6.004
16_16x4^4  &  162.507 & 162.507 & 25.438 & 6.388
64_16x4^4  &  633.945 & 633.945 & 104.016 & 6.095
256_16x4^4  &  1117.434 & 1117.434 & 153.368 & 7.286
2_16x4^5  &  265.225 & 265.225 & 45.831 & 5.787
4_16x4^5  &  525.343 & 525.343 & 91.995 & 5.711
16_16x4^5  &  1127.334 & 1127.334 & 323.191 & 3.488
64_16x4^5  &  1257.418 & 1257.418 & 302.616 & 4.155
256_16x4^5  &  1266.768 & 1266.768 & 151.557 & 8.358
2_16x4^6  &  869.943 & 869.943 & 344.797 & 2.523
4_16x4^6  &  923.022 & 923.022 & 354.171 & 2.606
16_16x4^6  &  1361.141 & 1361.141 & 359.906 & 3.782
2_16x4^7  &  954.630 & 954.630 & 254.609 & 3.749
2_16x8^1  &  0.023 & 0.023 & 0.002 & 9.418
4_16x8^1  &  0.046 & 0.046 & 0.005 & 9.413
16_16x8^1  &  0.186 & 0.186 & 0.020 & 9.448
64_16x8^1  &  0.733 & 0.733 & 0.080 & 9.123
256_16x8^1  &  2.957 & 2.957 & 0.320 & 9.246
2_16x8^2  &  0.326 & 0.326 & 0.041 & 7.851
4_16x8^2  &  0.655 & 0.655 & 0.084 & 7.756
16_16x8^2  &  2.593 & 2.593 & 0.334 & 7.763
64_16x8^2  &  10.370 & 10.370 & 1.341 & 7.733
256_16x8^2  &  41.372 & 41.372 & 5.382 & 7.687
2_16x8^3  &  4.321 & 4.321 & 0.649 & 6.655
4_16x8^3  &  8.561 & 8.561 & 1.296 & 6.604
16_16x8^3  &  34.373 & 34.373 & 5.145 & 6.680
64_16x8^3  &  136.711 & 136.711 & 19.796 & 6.906
256_16x8^3  &  546.843 & 546.843 & 75.025 & 7.289
2_16x8^4  &  57.126 & 57.126 & 9.373 & 6.095
4_16x8^4  &  114.252 & 114.252 & 18.182 & 6.284
16_16x8^4  &  454.985 & 454.985 & 69.268 & 6.568
64_16x8^4  &  1577.903 & 1577.903 & 284.510 & 5.546
256_16x8^4  &  1823.303 & 1823.303 & 368.539 & 4.947
2_16x8^5  &  769.238 & 769.238 & 125.728 & 6.118
4_16x8^5  &  1122.966 & 1122.966 & 251.967 & 4.457
16_16x8^5  &  1910.390 & 1910.390 & 664.422 & 2.875
64_16x8^5  &  1981.035 & 1981.035 & 631.923 & 3.135
256_16x8^5  &  1992.134 & 1992.134 & 368.156 & 5.411
2_16x8^6  &  1855.966 & 1855.966 & 698.037 & 2.659
4_16x8^6  &  1728.798 & 1728.798 & 707.551 & 2.443
16_16x8^6  &  2150.741 & 2150.741 & 712.040 & 3.021
2_16x8^7  &  2023.441 & 2023.441 & 558.541 & 3.623
2_16x16^1  &  0.046 & 0.046 & 0.005 & 9.773
4_16x16^1  &  0.092 & 0.093 & 0.010 & 9.524
16_16x16^1  &  0.373 & 0.371 & 0.039 & 9.519
64_16x16^1  &  1.485 & 1.478 & 0.162 & 9.147
256_16x16^1  &  5.913 & 5.913 & 0.644 & 9.183
2_16x16^2  &  0.878 & 0.878 & 0.112 & 7.823
4_16x16^2  &  1.755 & 1.751 & 0.226 & 7.739
16_16x16^2  &  6.966 & 11.379 & 0.895 & 12.717
64_16x16^2  &  27.863 & 45.322 & 3.620 & 12.519
256_16x16^2  &  112.042 & 182.069 & 14.265 & 12.763
2_16x16^3  &  15.048 & 20.851 & 2.224 & 9.375
4_16x16^3  &  29.810 & 41.263 & 4.465 & 9.242
16_16x16^3  &  118.788 & 165.488 & 17.763 & 9.317
64_16x16^3  &  473.358 & 660.210 & 66.186 & 9.975
256_16x16^3  &  1889.868 & 2560.000 & 263.290 & 9.723
2_16x16^4  &  246.154 & 436.745 & 40.685 & 10.735
4_16x16^4  &  494.502 & 862.176 & 75.641 & 11.398
16_16x16^4  &  1951.906 & 3278.818 & 299.187 & 10.959
64_16x16^4  &  2704.317 & 4504.907 & 1030.949 & 4.370
256_16x16^4  &  2780.574 & 5246.108 & 905.902 & 5.791
2_16x16^5  &  1434.397 & 2690.803 & 708.934 & 3.796
4_16x16^5  &  1481.143 & 2287.322 & 1089.974 & 2.099
16_16x16^5  &  3046.961 & 4742.197 & 1218.849 & 3.891
64_16x16^5  &  3071.467 & 4860.742 & 1210.580 & 4.015
256_16x16^5  &  2920.102 & 4731.419 & 971.872 & 4.868
2_16x16^6  &  1592.034 & 4877.987 & 1265.850 & 3.854
4_16x16^6  &  1570.364 & 3557.653 & 1256.971 & 2.830
16_16x16^6  &  3245.474 & 5898.734 & 1276.386 & 4.621
2_16x16^7  &  1600.873 & 3869.411 & 1208.254 & 3.202
2_16x32^1  &  0.092 & 0.092 & 0.010 & 9.463
4_16x32^1  &  0.185 & 0.185 & 0.020 & 9.142
16_16x32^1  &  0.736 & 0.736 & 0.081 & 9.118
64_16x32^1  &  2.944 & 2.944 & 0.320 & 9.193
256_16x32^1  &  11.930 & 11.930 & 1.293 & 9.227
2_16x32^2  &  2.632 & 2.632 & 0.338 & 7.788
4_16x32^2  &  5.263 & 5.263 & 0.672 & 7.827
16_16x32^2  &  21.108 & 21.108 & 2.735 & 7.719
64_16x32^2  &  84.656 & 84.656 & 10.727 & 7.892
256_16x32^2  &  335.079 & 335.079 & 42.776 & 7.833
2_16x32^3  &  70.303 & 70.303 & 10.383 & 6.771
4_16x32^3  &  141.141 & 141.141 & 20.582 & 6.858
16_16x32^3  &  559.247 & 559.247 & 78.547 & 7.120
64_16x32^3  &  2191.587 & 2191.587 & 308.751 & 7.098
256_16x32^3  &  3188.832 & 3188.832 & 1164.770 & 2.738
2_16x32^4  &  1585.219 & 1585.219 & 281.745 & 5.626
4_16x32^4  &  1539.103 & 1539.103 & 556.480 & 2.766
16_16x32^4  &  3482.372 & 3482.372 & 1554.423 & 2.240
64_16x32^4  &  3455.423 & 3455.423 & 1696.280 & 2.037
256_16x32^4  &  3636.246 & 3636.246 & 1678.035 & 2.167
2_16x32^5  &  2330.039 & 2330.039 & 1594.060 & 1.462
4_16x32^5  &  1864.052 & 1864.052 & 1666.296 & 1.119
16_16x32^5  &  3771.051 & 3771.051 & 1731.376 & 2.178
2_16x64^1  &  0.186 & 0.186 & 0.020 & 9.169
4_16x64^1  &  0.371 & 0.371 & 0.040 & 9.318
16_16x64^1  &  1.472 & 1.472 & 0.161 & 9.167
64_16x64^1  &  5.939 & 5.939 & 0.625 & 9.498
256_16x64^1  &  23.550 & 23.550 & 2.556 & 9.214
2_16x64^2  &  8.865 & 8.865 & 1.080 & 8.205
4_16x64^2  &  17.778 & 17.778 & 2.189 & 8.122
16_16x64^2  &  70.923 & 70.923 & 8.916 & 7.955
64_16x64^2  &  283.694 & 283.694 & 35.635 & 7.961
256_16x64^2  &  1117.091 & 1117.091 & 135.366 & 8.252
2_16x64^3  &  421.084 & 421.084 & 58.827 & 7.158
4_16x64^3  &  825.201 & 825.201 & 118.151 & 6.984
16_16x64^3  &  2897.492 & 2897.492 & 461.391 & 6.280
64_16x64^3  &  3633.548 & 3633.548 & 1601.543 & 2.269
256_16x64^3  &  4042.030 & 4042.030 & 1854.831 & 2.179
2_16x64^4  &  2339.820 & 2339.820 & 1280.692 & 1.827
4_16x64^4  &  1899.780 & 1899.780 & 1657.019 & 1.147
16_16x64^4  &  3954.644 & 3954.644 & 1851.093 & 2.136
2_16x128^1  &  0.368 & 0.368 & 0.040 & 9.199
4_16x128^1  &  0.746 & 0.746 & 0.080 & 9.366
16_16x128^1  &  2.931 & 2.931 & 0.322 & 9.113
64_16x128^1  &  11.724 & 11.724 & 1.253 & 9.354
256_16x128^1  &  47.100 & 47.100 & 5.161 & 9.126
2_16x128^2  &  32.169 & 32.169 & 3.954 & 8.135
4_16x128^2  &  63.832 & 63.832 & 7.820 & 8.163
16_16x128^2  &  255.328 & 255.328 & 32.035 & 7.970
64_16x128^2  &  1008.083 & 1008.083 & 121.344 & 8.308
256_16x128^2  &  3215.868 & 3215.868 & 482.124 & 6.670
2_16x128^3  &  1879.571 & 1879.571 & 398.334 & 4.719
4_16x128^3  &  1734.829 & 1734.829 & 768.264 & 2.258
16_16x128^3  &  3944.866 & 3944.866 & 1693.787 & 2.329
64_16x128^3  &  4090.688 & 4090.688 & 1917.655 & 2.133
256_16x128^3  &  4351.454 & 4351.454 & 1932.662 & 2.252
2_16x128^4  &  2423.651 & 2423.651 & 1267.538 & 1.912
2_32x2^1  &  0.011 & 0.011 & 0.001 & 8.951
4_32x2^1  &  0.022 & 0.022 & 0.003 & 8.875
16_32x2^1  &  0.089 & 0.089 & 0.010 & 8.883
64_32x2^1  &  0.360 & 0.360 & 0.040 & 9.005
256_32x2^1  &  1.441 & 1.441 & 0.160 & 9.015
2_32x2^2  &  0.226 & 0.226 & 0.030 & 7.578
4_32x2^2  &  0.451 & 0.451 & 0.059 & 7.575
16_32x2^2  &  1.797 & 1.797 & 0.239 & 7.527
64_32x2^2  &  7.096 & 7.096 & 0.975 & 7.282
256_32x2^2  &  28.684 & 28.684 & 3.858 & 7.435
2_32x2^3  &  5.152 & 5.152 & 0.790 & 6.517
4_32x2^3  &  10.226 & 10.226 & 1.568 & 6.520
16_32x2^3  &  40.827 & 40.827 & 6.306 & 6.475
64_32x2^3  &  163.308 & 163.308 & 23.993 & 6.806
256_32x2^3  &  374.577 & 374.577 & 80.456 & 4.656
2_32x2^4  &  129.070 & 129.070 & 20.817 & 6.200
4_32x2^4  &  194.395 & 194.395 & 43.167 & 4.503
16_32x2^4  &  403.606 & 403.606 & 161.400 & 2.501
64_32x2^4  &  633.336 & 633.336 & 172.252 & 3.677
256_32x2^4  &  675.814 & 675.814 & 71.071 & 9.509
2_32x2^5  &  495.868 & 495.868 & 223.609 & 2.218
4_32x2^5  &  433.553 & 433.553 & 221.878 & 1.954
16_32x2^5  &  704.045 & 704.045 & 218.863 & 3.217
2_32x4^1  &  0.023 & 0.023 & 0.002 & 9.168
4_32x4^1  &  0.045 & 0.045 & 0.005 & 9.191
16_32x4^1  &  0.179 & 0.179 & 0.020 & 9.180
64_32x4^1  &  0.714 & 0.714 & 0.079 & 8.987
256_32x4^1  &  2.870 & 2.870 & 0.313 & 9.162
2_32x4^2  &  0.472 & 0.472 & 0.062 & 7.653
4_32x4^2  &  0.941 & 0.941 & 0.122 & 7.713
16_32x4^2  &  3.773 & 3.773 & 0.495 & 7.625
64_32x4^2  &  15.091 & 15.091 & 2.046 & 7.375
256_32x4^2  &  60.682 & 60.682 & 8.174 & 7.424
2_32x4^3  &  11.065 & 11.065 & 1.674 & 6.609
4_32x4^3  &  21.760 & 21.760 & 3.319 & 6.556
16_32x4^3  &  86.716 & 86.716 & 13.507 & 6.420
64_32x4^3  &  344.309 & 344.309 & 51.130 & 6.734
256_32x4^3  &  927.841 & 927.841 & 166.645 & 5.568
2_32x4^4  &  271.713 & 271.713 & 44.907 & 6.051
4_32x4^4  &  466.858 & 466.858 & 91.835 & 5.084
16_32x4^4  &  1079.798 & 1079.798 & 342.828 & 3.150
64_32x4^4  &  1325.674 & 1325.674 & 347.984 & 3.810
256_32x4^4  &  1359.288 & 1359.288 & 148.559 & 9.150
2_32x4^5  &  911.288 & 911.288 & 441.483 & 2.064
4_32x4^5  &  953.564 & 953.564 & 439.343 & 2.170
16_32x4^5  &  1468.874 & 1468.874 & 434.706 & 3.379
2_32x8^1  &  0.044 & 0.044 & 0.005 & 9.207
4_32x8^1  &  0.089 & 0.089 & 0.010 & 9.292
16_32x8^1  &  0.354 & 0.354 & 0.039 & 9.141
64_32x8^1  &  1.410 & 1.410 & 0.159 & 8.892
256_32x8^1  &  5.665 & 5.665 & 0.630 & 8.998
2_32x8^2  &  1.048 & 1.048 & 0.135 & 7.758
4_32x8^2  &  2.102 & 2.102 & 0.274 & 7.667
16_32x8^2  &  8.320 & 8.320 & 1.105 & 7.532
64_32x8^2  &  33.542 & 33.542 & 4.414 & 7.600
256_32x8^2  &  134.167 & 134.167 & 17.728 & 7.568
2_32x8^3  &  25.348 & 25.348 & 3.787 & 6.694
4_32x8^3  &  50.318 & 50.318 & 7.581 & 6.637
16_32x8^3  &  201.648 & 201.648 & 29.106 & 6.928
64_32x8^3  &  803.582 & 803.582 & 114.306 & 7.030
256_32x8^3  &  1705.822 & 1705.822 & 361.625 & 4.717
2_32x8^4  &  630.043 & 630.043 & 97.120 & 6.487
4_32x8^4  &  983.864 & 983.864 & 205.674 & 4.784
16_32x8^4  &  2033.205 & 2033.205 & 759.902 & 2.676
64_32x8^4  &  2325.020 & 2325.020 & 715.746 & 3.248
256_32x8^4  &  2336.523 & 2336.523 & 326.984 & 7.146
2_32x8^5  &  1986.722 & 1986.722 & 876.960 & 2.265
4_32x8^5  &  1909.719 & 1909.719 & 873.462 & 2.186
16_32x8^5  &  2498.806 & 2498.806 & 864.605 & 2.890
2_32x16^1  &  0.089 & 0.089 & 0.010 & 9.233
4_32x16^1  &  0.179 & 0.179 & 0.019 & 9.299
16_32x16^1  &  0.708 & 0.708 & 0.077 & 9.221
64_32x16^1  &  2.845 & 2.845 & 0.316 & 9.002
256_32x16^1  &  11.379 & 11.379 & 1.259 & 9.035
2_32x16^2  &  2.513 & 2.513 & 0.332 & 7.571
4_32x16^2  &  5.039 & 5.039 & 0.671 & 7.506
16_32x16^2  &  20.421 & 20.421 & 2.735 & 7.468
64_32x16^2  &  81.684 & 81.684 & 10.680 & 7.648
256_32x16^2  &  322.494 & 322.494 & 42.336 & 7.617
2_32x16^3  &  67.039 & 67.039 & 10.364 & 6.468
4_32x16^3  &  136.882 & 136.882 & 20.059 & 6.824
16_32x16^3  &  537.313 & 537.313 & 79.449 & 6.763
64_32x16^3  &  2129.390 & 2129.390 & 303.912 & 7.007
256_32x16^3  &  2881.801 & 2881.801 & 846.796 & 3.403
2_32x16^4  &  1383.551 & 1383.551 & 285.248 & 4.850
4_32x16^4  &  1544.994 & 1544.994 & 568.713 & 2.717
16_32x16^4  &  3406.252 & 3406.252 & 1520.610 & 2.240
64_32x16^4  &  3589.317 & 3589.317 & 1459.302 & 2.460
256_32x16^4  &  3523.756 & 3523.756 & 788.775 & 4.467
2_32x16^5  &  2232.833 & 2232.833 & 1675.285 & 1.333
4_32x16^5  &  2002.771 & 2002.771 & 1667.840 & 1.201
16_32x16^5  &  3739.384 & 3739.384 & 1669.899 & 2.239
2_32x32^1  &  0.180 & 0.179 & 0.020 & 8.827
4_32x32^1  &  0.362 & 0.357 & 0.040 & 8.862
16_32x32^1  &  1.441 & 1.441 & 0.160 & 9.000
64_32x32^1  &  5.714 & 5.714 & 0.646 & 8.848
256_32x32^1  &  22.759 & 23.057 & 2.590 & 8.902
2_32x32^2  &  6.878 & 6.915 & 0.897 & 7.708
4_32x32^2  &  13.904 & 13.793 & 1.773 & 7.780
16_32x32^2  &  55.172 & 55.319 & 7.145 & 7.742
64_32x32^2  &  218.373 & 218.373 & 28.365 & 7.699
256_32x32^2  &  871.204 & 862.176 & 108.260 & 7.964
2_32x32^3  &  235.152 & 327.599 & 35.883 & 9.130
4_32x32^3  &  469.414 & 470.303 & 71.542 & 6.574
16_32x32^3  &  1856.598 & 1867.068 & 265.076 & 7.044
64_32x32^3  &  4636.079 & 4641.495 & 1054.082 & 4.403
256_32x32^3  &  5322.331 & 5327.684 & 1884.877 & 2.827
2_32x32^4  &  2226.650 & 4061.368 & 1204.944 & 3.371
4_32x32^4  &  2249.400 & 3492.293 & 2256.539 & 1.548
16_32x32^4  &  6018.041 & 6014.616 & 2699.757 & 2.228
64_32x32^4  &  6091.979 & 6090.004 & 2713.870 & 2.244
256_32x32^4  &  5878.179 & 5883.497 & 1982.616 & 2.968
2_32x32^5  &  2425.056 & 4145.567 & 2743.354 & 1.511
4_32x32^5  &  2339.754 & 3909.480 & 2783.789 & 1.404
16_32x32^5  &  6400.786 & 6401.709 & 2857.598 & 2.240
2_32x64^1  &  0.359 & 0.359 & 0.040 & 8.926
4_32x64^1  &  0.714 & 0.714 & 0.080 & 8.885
16_32x64^1  &  2.845 & 2.845 & 0.324 & 8.774
64_32x64^1  &  11.528 & 11.528 & 1.271 & 9.074
256_32x64^1  &  45.714 & 45.714 & 5.059 & 9.037
2_32x64^2  &  20.851 & 20.851 & 2.630 & 7.929
4_32x64^2  &  41.372 & 41.372 & 5.182 & 7.983
16_32x64^2  &  166.808 & 166.808 & 21.527 & 7.749
64_32x64^2  &  656.754 & 656.754 & 81.533 & 8.055
256_32x64^2  &  2606.546 & 2606.546 & 322.497 & 8.082
2_32x64^3  &  1069.011 & 1069.011 & 154.492 & 6.920
4_32x64^3  &  2012.690 & 2012.690 & 309.294 & 6.507
16_32x64^3  &  5348.728 & 5348.728 & 1216.851 & 4.396
64_32x64^3  &  6752.624 & 6752.624 & 3058.561 & 2.208
256_32x64^3  &  7163.091 & 7163.091 & 3127.810 & 2.290
2_32x64^4  &  5052.700 & 5052.700 & 2478.937 & 2.038
4_32x64^4  &  4261.482 & 4261.482 & 3133.767 & 1.360
16_32x64^4  &  7480.894 & 7480.894 & 3443.997 & 2.172
2_32x128^1  &  0.714 & 0.714 & 0.081 & 8.841
4_32x128^1  &  1.435 & 1.435 & 0.161 & 8.894
16_32x128^1  &  5.714 & 5.714 & 0.629 & 9.078
64_32x128^1  &  22.759 & 22.759 & 2.501 & 9.099
256_32x128^1  &  92.227 & 92.227 & 10.242 & 9.005
2_32x128^2  &  69.418 & 69.418 & 8.788 & 7.899
4_32x128^2  &  138.836 & 138.836 & 17.525 & 7.922
16_32x128^2  &  550.971 & 550.971 & 67.997 & 8.103
64_32x128^2  &  2169.716 & 2169.716 & 261.594 & 8.294
256_32x128^2  &  5515.140 & 5515.140 & 1072.531 & 5.142
2_32x128^3  &  3727.577 & 3727.577 & 896.037 & 4.160
4_32x128^3  &  3453.490 & 3453.490 & 1764.259 & 1.957
16_32x128^3  &  7107.309 & 7107.309 & 3393.017 & 2.095
64_32x128^3  &  7528.346 & 7528.346 & 3739.171 & 2.013
256_32x128^3  &  7522.191 & 7522.191 & 3772.401 & 1.994
2_32x128^4  &  5376.616 & 5376.616 & 2451.289 & 2.193
2_64x2^1  &  0.022 & 0.022 & 0.003 & 8.738
4_64x2^1  &  0.044 & 0.044 & 0.005 & 8.741
16_64x2^1  &  0.175 & 0.175 & 0.020 & 8.727
64_64x2^1  &  0.703 & 0.703 & 0.080 & 8.750
256_64x2^1  &  2.802 & 2.802 & 0.321 & 8.723
2_64x2^2  &  0.847 & 0.847 & 0.115 & 7.361
4_64x2^2  &  1.689 & 1.689 & 0.231 & 7.308
16_64x2^2  &  6.704 & 6.704 & 0.904 & 7.413
64_64x2^2  &  26.815 & 26.815 & 3.650 & 7.347
256_64x2^2  &  102.573 & 102.573 & 14.640 & 7.006
2_64x2^3  &  29.608 & 29.608 & 6.103 & 4.851
4_64x2^3  &  56.982 & 56.982 & 12.084 & 4.716
16_64x2^3  &  156.161 & 156.161 & 46.664 & 3.347
64_64x2^3  &  422.542 & 422.542 & 164.485 & 2.569
256_64x2^3  &  554.955 & 554.955 & 70.781 & 7.840
2_64x2^4  &  360.224 & 360.224 & 231.795 & 1.554
4_64x2^4  &  394.806 & 394.806 & 239.623 & 1.648
16_64x2^4  &  711.918 & 711.918 & 245.442 & 2.901
2_64x4^1  &  0.044 & 0.044 & 0.005 & 8.912
4_64x4^1  &  0.088 & 0.088 & 0.010 & 8.926
16_64x4^1  &  0.352 & 0.352 & 0.039 & 8.967
64_64x4^1  &  1.407 & 1.407 & 0.161 & 8.759
256_64x4^1  &  5.556 & 5.556 & 0.645 & 8.608
2_64x4^2  &  1.777 & 1.777 & 0.235 & 7.577
4_64x4^2  &  3.582 & 3.582 & 0.473 & 7.569
16_64x4^2  &  14.254 & 14.254 & 1.901 & 7.498
64_64x4^2  &  57.165 & 57.165 & 7.556 & 7.565
256_64x4^2  &  226.875 & 226.875 & 30.753 & 7.377
2_64x4^3  &  78.425 & 78.425 & 12.851 & 6.102
4_64x4^3  &  150.112 & 150.112 & 25.128 & 5.974
16_64x4^3  &  482.014 & 482.014 & 95.594 & 5.042
64_64x4^3  &  1024.809 & 1024.809 & 331.676 & 3.090
256_64x4^3  &  1317.785 & 1317.785 & 144.176 & 9.140
2_64x4^4  &  723.646 & 723.646 & 457.641 & 1.581
4_64x4^4  &  910.656 & 910.656 & 471.198 & 1.933
16_64x4^4  &  1466.459 & 1466.459 & 484.754 & 3.025
2_64x8^1  &  0.088 & 0.088 & 0.010 & 8.965
4_64x8^1  &  0.176 & 0.176 & 0.020 & 8.918
16_64x8^1  &  0.703 & 0.703 & 0.079 & 8.922
64_64x8^1  &  2.814 & 2.814 & 0.321 & 8.779
256_64x8^1  &  11.207 & 11.207 & 1.271 & 8.815
2_64x8^2  &  3.786 & 3.786 & 0.496 & 7.629
4_64x8^2  &  7.494 & 7.494 & 1.004 & 7.464
16_64x8^2  &  29.896 & 29.896 & 4.038 & 7.403
64_64x8^2  &  119.585 & 119.585 & 15.974 & 7.486
256_64x8^2  &  477.106 & 477.106 & 60.962 & 7.826
2_64x8^3  &  175.347 & 175.347 & 26.989 & 6.497
4_64x8^3  &  348.731 & 348.731 & 51.677 & 6.748
16_64x8^3  &  1109.317 & 1109.317 & 207.858 & 5.337
64_64x8^3  &  1950.894 & 1950.894 & 662.384 & 2.945
256_64x8^3  &  2123.337 & 2123.337 & 300.682 & 7.062
2_64x8^4  &  1768.692 & 1768.692 & 884.508 & 2.000
4_64x8^4  &  1918.821 & 1918.821 & 924.391 & 2.076
16_64x8^4  &  2655.537 & 2655.537 & 937.528 & 2.832
2_64x16^1  &  0.175 & 0.175 & 0.020 & 8.900
4_64x16^1  &  0.352 & 0.352 & 0.039 & 8.978
16_64x16^1  &  1.407 & 1.407 & 0.157 & 8.986
64_64x16^1  &  5.652 & 5.652 & 0.642 & 8.799
256_64x16^1  &  22.511 & 22.511 & 2.585 & 8.709
2_64x16^2  &  8.447 & 8.447 & 1.122 & 7.528
4_64x16^2  &  16.895 & 16.895 & 2.230 & 7.576
16_64x16^2  &  67.402 & 67.402 & 9.017 & 7.475
64_64x16^2  &  268.901 & 268.901 & 35.525 & 7.569
256_64x16^2  &  1064.456 & 1064.456 & 134.723 & 7.901
2_64x16^3  &  406.038 & 406.038 & 59.425 & 6.833
4_64x16^3  &  800.000 & 800.000 & 118.167 & 6.770
16_64x16^3  &  2107.222 & 2107.222 & 463.359 & 4.548
64_64x16^3  &  3424.366 & 3424.366 & 1394.756 & 2.455
256_64x16^3  &  3672.257 & 3672.257 & 659.435 & 5.569
2_64x16^4  &  2147.542 & 2147.542 & 1789.643 & 1.200
4_64x16^4  &  2172.158 & 2172.158 & 1826.643 & 1.189
16_64x16^4  &  4202.115 & 4202.115 & 1859.191 & 2.260
2_64x32^1  &  0.353 & 0.353 & 0.041 & 8.681
4_64x32^1  &  0.707 & 0.707 & 0.080 & 8.799
16_64x32^1  &  2.826 & 2.826 & 0.322 & 8.774
64_64x32^1  &  11.304 & 11.304 & 1.284 & 8.807
256_64x32^1  &  45.022 & 45.022 & 5.152 & 8.738
2_64x32^2  &  20.369 & 20.369 & 2.674 & 7.617
4_64x32^2  &  40.847 & 40.847 & 5.374 & 7.601
16_64x32^2  &  162.955 & 162.955 & 21.489 & 7.583
64_64x32^2  &  651.821 & 651.821 & 85.358 & 7.636
256_64x32^2  &  2540.257 & 2540.257 & 321.661 & 7.897
2_64x32^3  &  1090.550 & 1090.550 & 159.784 & 6.825
4_64x32^3  &  1812.997 & 1812.997 & 302.086 & 6.002
16_64x32^3  &  4593.167 & 4593.167 & 1220.469 & 3.763
64_64x32^3  &  5974.997 & 5974.997 & 2821.602 & 2.118
256_64x32^3  &  6492.292 & 6492.292 & 1537.589 & 4.222
2_64x32^4  &  2415.918 & 2415.918 & 3336.725 & 0.724
4_64x32^4  &  2414.585 & 2414.585 & 3442.066 & 0.701
16_64x32^4  &  6779.343 & 6779.343 & 3537.599 & 1.916
2_64x64^1  &  0.703 & 0.703 & 0.080 & 8.748
4_64x64^1  &  1.413 & 1.413 & 0.161 & 8.760
16_64x64^1  &  5.628 & 5.628 & 0.644 & 8.742
64_64x64^1  &  22.609 & 22.609 & 2.505 & 9.027
256_64x64^1  &  89.655 & 89.655 & 10.021 & 8.947
2_64x64^2  &  55.040 & 55.040 & 7.196 & 7.649
4_64x64^2  &  108.632 & 108.632 & 13.927 & 7.800
16_64x64^2  &  430.000 & 430.000 & 57.708 & 7.451
64_64x64^2  &  1711.088 & 1711.088 & 228.507 & 7.488
256_64x64^2  &  4455.177 & 4455.177 & 853.213 & 5.222
2_64x64^3  &  2433.892 & 2433.892 & 528.691 & 4.604
4_64x64^3  &  3255.881 & 3255.881 & 1041.214 & 3.127
16_64x64^3  &  6329.288 & 6329.288 & 3990.195 & 1.586
64_64x64^3  &  7352.894 & 7352.894 & 4814.968 & 1.527
256_64x64^3  &  7677.825 & 7677.825 & 3438.912 & 2.233
2_64x64^4  &  5437.356 & 5437.356 & 4225.161 & 1.287
4_64x64^4  &  4915.224 & 4915.224 & 5125.225 & 0.959
16_64x64^4  &  7659.060 & 7659.060 & 5432.170 & 1.410
2_64x128^1  &  1.413 & 1.413 & 0.160 & 8.848
4_64x128^1  &  2.814 & 2.814 & 0.323 & 8.699
16_64x128^1  &  11.304 & 11.304 & 1.286 & 8.790
64_64x128^1  &  45.217 & 45.217 & 5.152 & 8.776
256_64x128^1  &  179.310 & 179.310 & 20.643 & 8.686
2_64x128^2  &  164.233 & 164.233 & 21.527 & 7.629
4_64x128^2  &  324.178 & 324.178 & 42.630 & 7.604
16_64x128^2  &  1283.307 & 1283.307 & 161.594 & 7.942
64_64x128^2  &  4434.286 & 4434.286 & 642.441 & 6.902
256_64x128^2  &  6164.654 & 6164.654 & 2521.048 & 2.445
2_64x128^3  &  4452.602 & 4452.602 & 2427.405 & 1.834
4_64x128^3  &  4277.708 & 4277.708 & 4492.305 & 0.952
16_64x128^3  &  7571.381 & 7571.381 & 5858.613 & 1.292
64_64x128^3  &  7743.980 & 7743.980 & 6220.380 & 1.245
256_64x128^3  &  7760.972 & 7760.972 & 5582.979 & 1.390
2_64x128^4  &  5560.982 & 5560.982 & 4122.433 & 1.349
2_128x2^1  &  0.043 & 0.043 & 0.005 & 8.849
4_128x2^1  &  0.086 & 0.086 & 0.010 & 8.577
16_128x2^1  &  0.345 & 0.345 & 0.040 & 8.576
64_128x2^1  &  1.372 & 1.372 & 0.161 & 8.535
256_128x2^1  &  5.466 & 5.466 & 0.646 & 8.463
2_128x2^2  &  3.377 & 3.377 & 0.453 & 7.459
4_128x2^2  &  6.772 & 6.772 & 0.912 & 7.426
16_128x2^2  &  27.087 & 27.087 & 3.633 & 7.455
64_128x2^2  &  106.679 & 106.679 & 14.133 & 7.548
256_128x2^2  &  197.883 & 197.883 & 55.878 & 3.541
2_128x2^3  &  133.259 & 133.259 & 46.729 & 2.852
4_128x2^3  &  194.099 & 194.099 & 92.109 & 2.107
16_128x2^3  &  438.433 & 438.433 & 234.282 & 1.871
64_128x2^3  &  541.765 & 541.765 & 199.645 & 2.714
256_128x2^3  &  507.851 & 507.851 & 80.578 & 6.303
2_128x2^4  &  429.031 & 429.031 & 146.220 & 2.934
2_128x4^1  &  0.086 & 0.086 & 0.010 & 8.603
4_128x4^1  &  0.172 & 0.172 & 0.020 & 8.543
16_128x4^1  &  0.686 & 0.686 & 0.081 & 8.497
64_128x4^1  &  2.745 & 2.745 & 0.319 & 8.603
256_128x4^1  &  10.886 & 10.886 & 1.291 & 8.432
2_128x4^2  &  6.841 & 6.841 & 0.919 & 7.445
4_128x4^2  &  13.682 & 13.682 & 1.849 & 7.402
16_128x4^2  &  54.728 & 54.728 & 7.344 & 7.452
64_128x4^2  &  215.561 & 215.561 & 29.399 & 7.332
256_128x4^2  &  395.322 & 395.322 & 114.226 & 3.461
2_128x4^3  &  269.516 & 269.516 & 94.003 & 2.867
4_128x4^3  &  391.938 & 391.938 & 187.570 & 2.090
16_128x4^3  &  839.051 & 839.051 & 465.880 & 1.801
64_128x4^3  &  1044.563 & 1044.563 & 395.866 & 2.639
256_128x4^3  &  992.846 & 992.846 & 162.377 & 6.114
2_128x4^4  &  837.075 & 837.075 & 292.306 & 2.864
2_128x8^1  &  0.172 & 0.172 & 0.020 & 8.602
4_128x8^1  &  0.343 & 0.343 & 0.040 & 8.603
16_128x8^1  &  1.372 & 1.372 & 0.160 & 8.595
64_128x8^1  &  5.466 & 5.466 & 0.640 & 8.541
256_128x8^1  &  21.772 & 21.772 & 2.577 & 8.447
2_128x8^2  &  13.849 & 13.849 & 1.910 & 7.250
4_128x8^2  &  27.627 & 27.627 & 3.832 & 7.209
16_128x8^2  &  109.949 & 109.949 & 15.152 & 7.256
64_128x8^2  &  425.819 & 425.819 & 60.835 & 7.000
256_128x8^2  &  1095.346 & 1095.346 & 234.342 & 4.674
2_128x8^3  &  527.074 & 527.074 & 199.102 & 2.647
4_128x8^3  &  907.073 & 907.073 & 373.110 & 2.431
16_128x8^3  &  2093.298 & 2093.298 & 920.969 & 2.273
64_128x8^3  &  2577.481 & 2577.481 & 784.621 & 3.285
256_128x8^3  &  2459.224 & 2459.224 & 330.507 & 7.441
2_128x8^4  &  2190.708 & 2190.708 & 587.716 & 3.727
2_128x16^1  &  0.343 & 0.343 & 0.040 & 8.545
4_128x16^1  &  0.689 & 0.689 & 0.080 & 8.606
16_128x16^1  &  2.733 & 2.733 & 0.323 & 8.467
64_128x16^1  &  10.979 & 10.979 & 1.293 & 8.491
256_128x16^1  &  43.729 & 43.729 & 5.142 & 8.505
2_128x16^2  &  22.388 & 22.388 & 4.052 & 5.525
4_128x16^2  &  44.432 & 44.432 & 8.075 & 5.502
16_128x16^2  &  174.367 & 174.367 & 32.040 & 5.442
64_128x16^2  &  684.527 & 684.527 & 124.200 & 5.512
256_128x16^2  &  1754.863 & 1754.863 & 485.153 & 3.617
2_128x16^3  &  938.018 & 938.018 & 409.878 & 2.289
4_128x16^3  &  1291.750 & 1291.750 & 802.042 & 1.611
16_128x16^3  &  3765.061 & 3765.061 & 1816.706 & 2.072
64_128x16^3  &  4253.391 & 4253.391 & 1580.080 & 2.692
256_128x16^3  &  4065.028 & 4065.028 & 687.436 & 5.913
2_128x16^4  &  2428.891 & 2428.891 & 1194.137 & 2.034
2_128x32^1  &  0.692 & 0.692 & 0.080 & 8.637
4_128x32^1  &  1.378 & 1.378 & 0.161 & 8.566
16_128x32^1  &  5.489 & 5.489 & 0.627 & 8.753
64_128x32^1  &  22.051 & 22.051 & 2.573 & 8.570
256_128x32^1  &  87.830 & 87.830 & 10.302 & 8.525
2_128x32^2  &  67.652 & 67.652 & 8.933 & 7.573
4_128x32^2  &  134.593 & 134.593 & 17.890 & 7.523
16_128x32^2  &  535.561 & 535.561 & 71.840 & 7.455
64_128x32^2  &  2071.919 & 2071.919 & 272.156 & 7.613
256_128x32^2  &  3939.880 & 3939.880 & 1072.204 & 3.675
2_128x32^3  &  1568.073 & 1568.073 & 944.245 & 1.661
4_128x32^3  &  1875.195 & 1875.195 & 1857.162 & 1.010
16_128x32^3  &  6296.675 & 6296.675 & 3585.668 & 1.756
64_128x32^3  &  6835.564 & 6835.564 & 3177.047 & 2.152
256_128x32^3  &  6618.778 & 6618.778 & 1496.144 & 4.424
2_128x32^4  &  2510.227 & 2510.227 & 2481.962 & 1.011
2_128x64^1  &  1.378 & 1.378 & 0.160 & 8.596
4_128x64^1  &  2.745 & 2.745 & 0.319 & 8.611
16_128x64^1  &  10.979 & 10.979 & 1.281 & 8.569
64_128x64^1  &  43.729 & 43.729 & 5.139 & 8.509
256_128x64^1  &  173.445 & 173.445 & 20.528 & 8.449
2_128x64^2  &  160.836 & 160.836 & 21.527 & 7.471
4_128x64^2  &  324.211 & 324.211 & 43.267 & 7.493
16_128x64^2  &  1276.684 & 1276.684 & 165.599 & 7.709
64_128x64^2  &  3584.000 & 3584.000 & 678.471 & 5.282
256_128x64^2  &  5684.788 & 5684.788 & 2671.808 & 2.128
2_128x64^3  &  3945.567 & 3945.567 & 2615.938 & 1.508
4_128x64^3  &  4227.004 & 4227.004 & 4835.746 & 0.874
16_128x64^3  &  7347.489 & 7347.489 & 5811.311 & 1.264
64_128x64^3  &  7721.358 & 7721.358 & 5634.178 & 1.370
256_128x64^3  &  7776.361 & 7776.361 & 3225.435 & 2.411
2_128x64^4  &  5333.344 & 5333.344 & 4288.278 & 1.244
2_128x128^1  &  2.745 & 2.745 & 0.319 & 8.611
4_128x128^1  &  5.489 & 5.489 & 0.640 & 8.571
16_128x128^1  &  22.051 & 22.051 & 2.568 & 8.588
64_128x128^1  &  87.830 & 87.830 & 10.290 & 8.535
256_128x128^1  &  348.354 & 348.354 & 40.950 & 8.507
2_128x128^2  &  430.576 & 430.576 & 57.472 & 7.492
4_128x128^2  &  852.228 & 852.228 & 114.235 & 7.460
16_128x128^2  &  2245.461 & 2245.461 & 429.274 & 5.231
64_128x128^2  &  4616.983 & 4616.983 & 1735.893 & 2.660
256_128x128^2  &  6393.392 & 6393.392 & 6152.459 & 1.039
2_128x128^3  &  5071.426 & 5071.426 & 5891.165 & 0.861
4_128x128^3  &  5014.181 & 5014.181 & 7456.291 & 0.672
16_128x128^3  &  7889.731 & 7889.731 & 8607.112 & 0.917
64_128x128^3  &  7908.091 & 7908.091 & 8383.372 & 0.943
256_128x128^3  &  7819.586 & 7819.586 & 6301.045 & 1.241
2_128x128^4  &  5445.985 & 5445.985 & 6553.215 & 0.831
