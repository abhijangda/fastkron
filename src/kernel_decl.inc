#define MAX_K 512
#define MIN_K 512
#define MIN_KP_K 8
#define MAX_KP_K 8
#define KERNEL_DECL(T, VecT, ElemType, K_EQUALS_VAR) \
KernelInfo{(void*)kronGemmKernel<T, VecT, 128, RowParallelismTy::Low, 2, 0, 256, 8, 8, 4, K_EQUALS_VAR, 1, 1, 1, 8, 1>,128, 8, 8, 4, 2, 256, 1, 1, 1, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 128, RowParallelismTy::Low, 2, 1, 256, 8, 8, 4, K_EQUALS_VAR, 1, 1, 1, 8, 1>,128, 8, 8, 4, 2, 256, 1, 1, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 1, 1, 256, 8, 8, 8, K_EQUALS_VAR, 1, 2, 4, 8, 1>,32, 8, 8, 8, 1, 256, 2, 4, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 2, 0, 64, 8, 8, 4, K_EQUALS_VAR, 1, 1, 1, 8, 1>,32, 8, 8, 4, 2, 64, 1, 1, 1, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 2, 1, 64, 8, 8, 4, K_EQUALS_VAR, 1, 1, 1, 8, 1>,32, 8, 8, 4, 2, 64, 1, 1, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 2, 0, 512, 8, 8, 8, K_EQUALS_VAR, 1, 4, 4, 8, 1>,32, 8, 8, 8, 2, 512, 4, 4, 1, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 2, 0, 64, 8, 8, 8, K_EQUALS_VAR, 1, 2, 1, 8, 2>,32, 8, 8, 8, 2, 64, 2, 1, 2, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 2, 1, 64, 8, 8, 8, K_EQUALS_VAR, 1, 2, 1, 8, 2>,32, 8, 8, 8, 2, 64, 2, 1, 2, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 2, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 4, 4, 8, 1>,32, 8, 8, 8, 2, 512, 4, 4, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 1, 1, 64, 8, 8, 8, K_EQUALS_VAR, 1, 2, 1, 8, 2>,32, 8, 8, 8, 1, 64, 2, 1, 2, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 128, RowParallelismTy::Low, 1, 1, 256, 8, 8, 8, K_EQUALS_VAR, 1, 1, 2, 8, 2>,128, 8, 8, 8, 1, 256, 1, 2, 2, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 2, 0, 512, 8, 8, 8, K_EQUALS_VAR, 1, 2, 8, 8, 3>,32, 8, 8, 8, 2, 512, 2, 8, 3, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 2, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 2, 8, 8, 3>,32, 8, 8, 8, 2, 512, 2, 8, 3, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 128, RowParallelismTy::Low, 2, 0, 512, 8, 8, 8, K_EQUALS_VAR, 1, 4, 1, 8, 2>,128, 8, 8, 8, 2, 512, 4, 1, 2, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 128, RowParallelismTy::Low, 2, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 4, 1, 8, 2>,128, 8, 8, 8, 2, 512, 4, 1, 2, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 2, 0, 512, 8, 8, 8, K_EQUALS_VAR, 1, 4, 4, 8, 2>,32, 8, 8, 8, 2, 512, 4, 4, 2, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 2, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 4, 4, 8, 2>,32, 8, 8, 8, 2, 512, 4, 4, 2, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 128, RowParallelismTy::Low, 1, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 1, 4, 8, 1>,128, 8, 8, 8, 1, 512, 1, 4, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 2, 0, 128, 8, 8, 8, K_EQUALS_VAR, 1, 1, 4, 8, 1>,32, 8, 8, 8, 2, 128, 1, 4, 1, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 2, 1, 128, 8, 8, 8, K_EQUALS_VAR, 1, 1, 4, 8, 1>,32, 8, 8, 8, 2, 128, 1, 4, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 2, 0, 512, 8, 8, 8, K_EQUALS_VAR, 1, 2, 8, 8, 2>,32, 8, 8, 8, 2, 512, 2, 8, 2, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 2, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 2, 8, 8, 2>,32, 8, 8, 8, 2, 512, 2, 8, 2, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 2, 0, 512, 8, 8, 8, K_EQUALS_VAR, 1, 4, 2, 8, 2>,64, 8, 8, 8, 2, 512, 4, 2, 2, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 2, 0, 64, 8, 8, 8, K_EQUALS_VAR, 1, 2, 1, 8, 1>,32, 8, 8, 8, 2, 64, 2, 1, 1, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 2, 1, 64, 8, 8, 8, K_EQUALS_VAR, 1, 2, 1, 8, 1>,32, 8, 8, 8, 2, 64, 2, 1, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 2, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 4, 2, 8, 2>,64, 8, 8, 8, 2, 512, 4, 2, 2, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 128, RowParallelismTy::Low, 1, 1, 512, 8, 8, 4, K_EQUALS_VAR, 1, 2, 1, 8, 1>,128, 8, 8, 4, 1, 512, 2, 1, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 128, RowParallelismTy::Low, 1, 1, 128, 8, 8, 8, K_EQUALS_VAR, 1, 1, 1, 8, 1>,128, 8, 8, 8, 1, 128, 1, 1, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 2, 0, 512, 8, 8, 4, K_EQUALS_VAR, 1, 4, 2, 8, 1>,32, 8, 8, 4, 2, 512, 4, 2, 1, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 2, 1, 512, 8, 8, 4, K_EQUALS_VAR, 1, 4, 2, 8, 1>,32, 8, 8, 4, 2, 512, 4, 2, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 1, 1, 256, 8, 8, 8, K_EQUALS_VAR, 1, 2, 2, 8, 1>,64, 8, 8, 8, 1, 256, 2, 2, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 1, 1, 128, 8, 8, 8, K_EQUALS_VAR, 1, 1, 4, 8, 2>,32, 8, 8, 8, 1, 128, 1, 4, 2, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 2, 0, 128, 8, 8, 8, K_EQUALS_VAR, 1, 2, 2, 8, 1>,32, 8, 8, 8, 2, 128, 2, 2, 1, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 2, 1, 128, 8, 8, 8, K_EQUALS_VAR, 1, 2, 2, 8, 1>,32, 8, 8, 8, 2, 128, 2, 2, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 1, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 4, 4, 8, 1>,32, 8, 8, 8, 1, 512, 4, 4, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 1, 1, 128, 8, 8, 4, K_EQUALS_VAR, 1, 1, 2, 8, 1>,32, 8, 8, 4, 1, 128, 1, 2, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 1, 1, 512, 8, 8, 4, K_EQUALS_VAR, 1, 1, 4, 8, 1>,64, 8, 8, 4, 1, 512, 1, 4, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 2, 0, 256, 8, 8, 4, K_EQUALS_VAR, 1, 1, 2, 8, 1>,64, 8, 8, 4, 2, 256, 1, 2, 1, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 2, 1, 256, 8, 8, 4, K_EQUALS_VAR, 1, 1, 2, 8, 1>,64, 8, 8, 4, 2, 256, 1, 2, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 2, 0, 64, 8, 8, 8, K_EQUALS_VAR, 1, 1, 1, 8, 2>,64, 8, 8, 8, 2, 64, 1, 1, 2, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 2, 1, 64, 8, 8, 8, K_EQUALS_VAR, 1, 1, 1, 8, 2>,64, 8, 8, 8, 2, 64, 1, 1, 2, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 128, RowParallelismTy::Low, 2, 0, 128, 8, 8, 8, K_EQUALS_VAR, 1, 1, 1, 8, 2>,128, 8, 8, 8, 2, 128, 1, 1, 2, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 128, RowParallelismTy::Low, 2, 1, 128, 8, 8, 8, K_EQUALS_VAR, 1, 1, 1, 8, 2>,128, 8, 8, 8, 2, 128, 1, 1, 2, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 128, RowParallelismTy::Low, 2, 0, 256, 8, 8, 8, K_EQUALS_VAR, 1, 2, 1, 8, 2>,128, 8, 8, 8, 2, 256, 2, 1, 2, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 128, RowParallelismTy::Low, 2, 1, 256, 8, 8, 8, K_EQUALS_VAR, 1, 2, 1, 8, 2>,128, 8, 8, 8, 2, 256, 2, 1, 2, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 128, RowParallelismTy::Low, 1, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 2, 2, 8, 3>,128, 8, 8, 8, 1, 512, 2, 2, 3, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 128, RowParallelismTy::Low, 1, 1, 256, 8, 8, 8, K_EQUALS_VAR, 1, 2, 1, 8, 2>,128, 8, 8, 8, 1, 256, 2, 1, 2, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 2, 0, 128, 8, 8, 8, K_EQUALS_VAR, 1, 2, 1, 8, 2>,64, 8, 8, 8, 2, 128, 2, 1, 2, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 2, 1, 128, 8, 8, 8, K_EQUALS_VAR, 1, 2, 1, 8, 2>,64, 8, 8, 8, 2, 128, 2, 1, 2, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 2, 0, 256, 8, 8, 8, K_EQUALS_VAR, 1, 2, 4, 8, 1>,32, 8, 8, 8, 2, 256, 2, 4, 1, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 2, 1, 256, 8, 8, 8, K_EQUALS_VAR, 1, 2, 4, 8, 1>,32, 8, 8, 8, 2, 256, 2, 4, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 1, 1, 256, 8, 8, 8, K_EQUALS_VAR, 1, 1, 4, 8, 1>,64, 8, 8, 8, 1, 256, 1, 4, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 2, 0, 256, 8, 8, 4, K_EQUALS_VAR, 1, 2, 1, 8, 1>,64, 8, 8, 4, 2, 256, 2, 1, 1, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 2, 1, 256, 8, 8, 4, K_EQUALS_VAR, 1, 2, 1, 8, 1>,64, 8, 8, 4, 2, 256, 2, 1, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 2, 0, 256, 8, 8, 8, K_EQUALS_VAR, 1, 2, 2, 8, 1>,64, 8, 8, 8, 2, 256, 2, 2, 1, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 256, RowParallelismTy::Low, 1, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 1, 2, 8, 1>,256, 8, 8, 8, 1, 512, 1, 2, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 1, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 4, 2, 8, 3>,64, 8, 8, 8, 1, 512, 4, 2, 3, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 2, 0, 512, 8, 8, 4, K_EQUALS_VAR, 1, 1, 4, 8, 1>,64, 8, 8, 4, 2, 512, 1, 4, 1, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 1, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 2, 4, 8, 3>,64, 8, 8, 8, 1, 512, 2, 4, 3, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 2, 1, 512, 8, 8, 4, K_EQUALS_VAR, 1, 1, 4, 8, 1>,64, 8, 8, 4, 2, 512, 1, 4, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 2, 0, 256, 8, 8, 8, K_EQUALS_VAR, 1, 2, 2, 8, 2>,64, 8, 8, 8, 2, 256, 2, 2, 2, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 2, 1, 256, 8, 8, 8, K_EQUALS_VAR, 1, 2, 2, 8, 1>,64, 8, 8, 8, 2, 256, 2, 2, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 1, 1, 64, 8, 8, 8, K_EQUALS_VAR, 1, 1, 2, 8, 2>,32, 8, 8, 8, 1, 64, 1, 2, 2, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 2, 1, 256, 8, 8, 8, K_EQUALS_VAR, 1, 2, 2, 8, 2>,64, 8, 8, 8, 2, 256, 2, 2, 2, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 128, RowParallelismTy::Low, 2, 0, 512, 8, 8, 8, K_EQUALS_VAR, 1, 1, 4, 8, 3>,128, 8, 8, 8, 2, 512, 1, 4, 3, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 128, RowParallelismTy::Low, 2, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 1, 4, 8, 3>,128, 8, 8, 8, 2, 512, 1, 4, 3, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 128, RowParallelismTy::Low, 2, 0, 512, 8, 8, 8, K_EQUALS_VAR, 1, 2, 2, 8, 3>,128, 8, 8, 8, 2, 512, 2, 2, 3, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 1, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 4, 4, 8, 3>,32, 8, 8, 8, 1, 512, 4, 4, 3, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 2, 0, 256, 8, 8, 8, K_EQUALS_VAR, 1, 1, 8, 8, 2>,32, 8, 8, 8, 2, 256, 1, 8, 2, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 2, 1, 256, 8, 8, 8, K_EQUALS_VAR, 1, 1, 8, 8, 2>,32, 8, 8, 8, 2, 256, 1, 8, 2, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 1, 1, 64, 8, 8, 8, K_EQUALS_VAR, 1, 1, 1, 8, 2>,64, 8, 8, 8, 1, 64, 1, 1, 2, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 1, 1, 128, 8, 8, 4, K_EQUALS_VAR, 1, 1, 1, 8, 1>,64, 8, 8, 4, 1, 128, 1, 1, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 128, RowParallelismTy::Low, 2, 0, 512, 8, 8, 4, K_EQUALS_VAR, 1, 2, 1, 8, 1>,128, 8, 8, 4, 2, 512, 2, 1, 1, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 128, RowParallelismTy::Low, 2, 1, 512, 8, 8, 4, K_EQUALS_VAR, 1, 2, 1, 8, 1>,128, 8, 8, 4, 2, 512, 2, 1, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 128, RowParallelismTy::Low, 1, 1, 256, 8, 8, 4, K_EQUALS_VAR, 1, 1, 1, 8, 1>,128, 8, 8, 4, 1, 256, 1, 1, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 1, 1, 128, 8, 8, 8, K_EQUALS_VAR, 1, 2, 1, 8, 2>,64, 8, 8, 8, 1, 128, 2, 1, 2, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 2, 0, 128, 8, 8, 8, K_EQUALS_VAR, 1, 1, 2, 8, 2>,64, 8, 8, 8, 2, 128, 1, 2, 2, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 1, 1, 512, 8, 8, 4, K_EQUALS_VAR, 1, 2, 2, 8, 1>,64, 8, 8, 4, 1, 512, 2, 2, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 2, 1, 128, 8, 8, 8, K_EQUALS_VAR, 1, 1, 2, 8, 2>,64, 8, 8, 8, 2, 128, 1, 2, 2, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 128, RowParallelismTy::Low, 2, 0, 512, 8, 8, 8, K_EQUALS_VAR, 1, 2, 2, 8, 2>,128, 8, 8, 8, 2, 512, 2, 2, 2, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 128, RowParallelismTy::Low, 2, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 2, 2, 8, 2>,128, 8, 8, 8, 2, 512, 2, 2, 2, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 2, 0, 64, 8, 8, 8, K_EQUALS_VAR, 1, 1, 1, 8, 1>,64, 8, 8, 8, 2, 64, 1, 1, 1, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 1, 1, 256, 8, 8, 8, K_EQUALS_VAR, 1, 1, 8, 8, 2>,32, 8, 8, 8, 1, 256, 1, 8, 2, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 2, 1, 64, 8, 8, 8, K_EQUALS_VAR, 1, 1, 1, 8, 1>,64, 8, 8, 8, 2, 64, 1, 1, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 2, 0, 512, 8, 8, 8, K_EQUALS_VAR, 1, 1, 8, 8, 1>,64, 8, 8, 8, 2, 512, 1, 8, 1, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 2, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 1, 8, 8, 1>,64, 8, 8, 8, 2, 512, 1, 8, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 1, 1, 128, 8, 8, 8, K_EQUALS_VAR, 1, 2, 2, 8, 1>,32, 8, 8, 8, 1, 128, 2, 2, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 1, 1, 256, 8, 8, 4, K_EQUALS_VAR, 1, 1, 2, 8, 1>,64, 8, 8, 4, 1, 256, 1, 2, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 1, 1, 256, 8, 8, 4, K_EQUALS_VAR, 1, 2, 1, 8, 1>,64, 8, 8, 4, 1, 256, 2, 1, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 2, 0, 128, 8, 8, 8, K_EQUALS_VAR, 1, 4, 1, 8, 1>,32, 8, 8, 8, 2, 128, 4, 1, 1, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 2, 1, 128, 8, 8, 8, K_EQUALS_VAR, 1, 4, 1, 8, 1>,32, 8, 8, 8, 2, 128, 4, 1, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 2, 0, 512, 8, 8, 8, K_EQUALS_VAR, 1, 4, 2, 8, 3>,64, 8, 8, 8, 2, 512, 4, 2, 3, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 2, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 4, 2, 8, 3>,64, 8, 8, 8, 2, 512, 4, 2, 3, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 2, 0, 256, 8, 8, 8, K_EQUALS_VAR, 1, 1, 4, 8, 1>,64, 8, 8, 8, 2, 256, 1, 4, 1, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 2, 1, 256, 8, 8, 8, K_EQUALS_VAR, 1, 1, 4, 8, 1>,64, 8, 8, 8, 2, 256, 1, 4, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 128, RowParallelismTy::Low, 2, 0, 512, 8, 8, 8, K_EQUALS_VAR, 1, 2, 2, 8, 1>,128, 8, 8, 8, 2, 512, 2, 2, 1, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 512, RowParallelismTy::Low, 1, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 1, 1, 8, 2>,512, 8, 8, 8, 1, 512, 1, 1, 2, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 2, 0, 128, 8, 8, 8, K_EQUALS_VAR, 1, 2, 1, 8, 1>,64, 8, 8, 8, 2, 128, 2, 1, 1, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 2, 1, 128, 8, 8, 8, K_EQUALS_VAR, 1, 2, 1, 8, 1>,64, 8, 8, 8, 2, 128, 2, 1, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 512, RowParallelismTy::Low, 2, 0, 512, 8, 8, 8, K_EQUALS_VAR, 1, 1, 1, 8, 1>,512, 8, 8, 8, 2, 512, 1, 1, 1, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 512, RowParallelismTy::Low, 2, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 1, 1, 8, 1>,512, 8, 8, 8, 2, 512, 1, 1, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 128, RowParallelismTy::Low, 1, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 2, 2, 8, 2>,128, 8, 8, 8, 1, 512, 2, 2, 2, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 128, RowParallelismTy::Low, 2, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 2, 2, 8, 1>,128, 8, 8, 8, 2, 512, 2, 2, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 256, RowParallelismTy::Low, 2, 0, 512, 8, 8, 8, K_EQUALS_VAR, 1, 1, 2, 8, 3>,256, 8, 8, 8, 2, 512, 1, 2, 3, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 256, RowParallelismTy::Low, 2, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 1, 2, 8, 3>,256, 8, 8, 8, 2, 512, 1, 2, 3, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 2, 0, 512, 8, 8, 8, K_EQUALS_VAR, 1, 1, 8, 8, 3>,64, 8, 8, 8, 2, 512, 1, 8, 3, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 2, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 1, 8, 8, 3>,64, 8, 8, 8, 2, 512, 1, 8, 3, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 2, 0, 512, 8, 8, 4, K_EQUALS_VAR, 1, 4, 1, 8, 1>,64, 8, 8, 4, 2, 512, 4, 1, 1, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 2, 1, 512, 8, 8, 4, K_EQUALS_VAR, 1, 4, 1, 8, 1>,64, 8, 8, 4, 2, 512, 4, 1, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 128, RowParallelismTy::Low, 2, 0, 256, 8, 8, 8, K_EQUALS_VAR, 1, 1, 2, 8, 1>,128, 8, 8, 8, 2, 256, 1, 2, 1, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 128, RowParallelismTy::Low, 2, 1, 256, 8, 8, 8, K_EQUALS_VAR, 1, 1, 2, 8, 1>,128, 8, 8, 8, 2, 256, 1, 2, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 2, 0, 64, 8, 8, 8, K_EQUALS_VAR, 1, 1, 2, 8, 1>,32, 8, 8, 8, 2, 64, 1, 2, 1, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 2, 1, 64, 8, 8, 8, K_EQUALS_VAR, 1, 1, 2, 8, 1>,32, 8, 8, 8, 2, 64, 1, 2, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 256, RowParallelismTy::Low, 2, 0, 512, 8, 8, 8, K_EQUALS_VAR, 1, 2, 1, 8, 2>,256, 8, 8, 8, 2, 512, 2, 1, 2, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 256, RowParallelismTy::Low, 2, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 2, 1, 8, 2>,256, 8, 8, 8, 2, 512, 2, 1, 2, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 1, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 2, 8, 8, 3>,32, 8, 8, 8, 1, 512, 2, 8, 3, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 1, 1, 128, 8, 8, 8, K_EQUALS_VAR, 1, 4, 1, 8, 2>,32, 8, 8, 8, 1, 128, 4, 1, 2, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 1, 1, 512, 8, 8, 4, K_EQUALS_VAR, 1, 4, 2, 8, 1>,32, 8, 8, 4, 1, 512, 4, 2, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 2, 0, 128, 8, 8, 8, K_EQUALS_VAR, 1, 4, 1, 8, 2>,32, 8, 8, 8, 2, 128, 4, 1, 2, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 2, 1, 128, 8, 8, 8, K_EQUALS_VAR, 1, 4, 1, 8, 2>,32, 8, 8, 8, 2, 128, 4, 1, 2, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 1, 1, 256, 8, 8, 8, K_EQUALS_VAR, 1, 4, 1, 8, 2>,64, 8, 8, 8, 1, 256, 4, 1, 2, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 2, 0, 256, 8, 8, 8, K_EQUALS_VAR, 1, 4, 2, 8, 2>,32, 8, 8, 8, 2, 256, 4, 2, 2, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 2, 1, 256, 8, 8, 8, K_EQUALS_VAR, 1, 4, 2, 8, 2>,32, 8, 8, 8, 2, 256, 4, 2, 2, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 1, 1, 64, 8, 8, 8, K_EQUALS_VAR, 1, 2, 1, 8, 1>,32, 8, 8, 8, 1, 64, 2, 1, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 256, RowParallelismTy::Low, 1, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 2, 1, 8, 2>,256, 8, 8, 8, 1, 512, 2, 1, 2, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 512, RowParallelismTy::Low, 2, 0, 512, 8, 8, 8, K_EQUALS_VAR, 1, 1, 1, 8, 3>,512, 8, 8, 8, 2, 512, 1, 1, 3, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 512, RowParallelismTy::Low, 2, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 1, 1, 8, 3>,512, 8, 8, 8, 2, 512, 1, 1, 3, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 128, RowParallelismTy::Low, 2, 0, 512, 8, 8, 8, K_EQUALS_VAR, 1, 1, 4, 8, 1>,128, 8, 8, 8, 2, 512, 1, 4, 1, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 128, RowParallelismTy::Low, 2, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 1, 4, 8, 1>,128, 8, 8, 8, 2, 512, 1, 4, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 2, 0, 512, 8, 8, 8, K_EQUALS_VAR, 1, 2, 4, 8, 3>,64, 8, 8, 8, 2, 512, 2, 4, 3, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 2, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 2, 4, 8, 3>,64, 8, 8, 8, 2, 512, 2, 4, 3, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 1, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 2, 8, 8, 1>,32, 8, 8, 8, 1, 512, 2, 8, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 1, 1, 64, 8, 8, 4, K_EQUALS_VAR, 1, 1, 1, 8, 1>,32, 8, 8, 4, 1, 64, 1, 1, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 1, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 1, 8, 8, 1>,64, 8, 8, 8, 1, 512, 1, 8, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 128, RowParallelismTy::Low, 2, 0, 256, 8, 8, 8, K_EQUALS_VAR, 1, 2, 1, 8, 1>,128, 8, 8, 8, 2, 256, 2, 1, 1, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 128, RowParallelismTy::Low, 2, 1, 256, 8, 8, 8, K_EQUALS_VAR, 1, 2, 1, 8, 1>,128, 8, 8, 8, 2, 256, 2, 1, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 256, RowParallelismTy::Low, 2, 0, 512, 8, 8, 4, K_EQUALS_VAR, 1, 1, 1, 8, 1>,256, 8, 8, 4, 2, 512, 1, 1, 1, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 256, RowParallelismTy::Low, 2, 1, 512, 8, 8, 4, K_EQUALS_VAR, 1, 1, 1, 8, 1>,256, 8, 8, 4, 2, 512, 1, 1, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 2, 0, 64, 8, 8, 8, K_EQUALS_VAR, 1, 1, 2, 8, 2>,32, 8, 8, 8, 2, 64, 1, 2, 2, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 1, 1, 64, 8, 8, 8, K_EQUALS_VAR, 1, 1, 1, 8, 1>,64, 8, 8, 8, 1, 64, 1, 1, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 256, RowParallelismTy::Low, 1, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 2, 1, 8, 1>,256, 8, 8, 8, 1, 512, 2, 1, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 2, 1, 64, 8, 8, 8, K_EQUALS_VAR, 1, 1, 2, 8, 2>,32, 8, 8, 8, 2, 64, 1, 2, 2, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 2, 0, 128, 8, 8, 8, K_EQUALS_VAR, 1, 1, 2, 8, 1>,64, 8, 8, 8, 2, 128, 1, 2, 1, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 2, 1, 128, 8, 8, 8, K_EQUALS_VAR, 1, 1, 2, 8, 1>,64, 8, 8, 8, 2, 128, 1, 2, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 2, 0, 512, 8, 8, 8, K_EQUALS_VAR, 1, 4, 2, 8, 1>,64, 8, 8, 8, 2, 512, 4, 2, 1, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 2, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 4, 2, 8, 1>,64, 8, 8, 8, 2, 512, 4, 2, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 1, 1, 256, 8, 8, 8, K_EQUALS_VAR, 1, 1, 4, 8, 2>,64, 8, 8, 8, 1, 256, 1, 4, 2, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 1, 1, 256, 8, 8, 8, K_EQUALS_VAR, 1, 4, 1, 8, 1>,64, 8, 8, 8, 1, 256, 4, 1, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 128, RowParallelismTy::Low, 2, 0, 512, 8, 8, 8, K_EQUALS_VAR, 1, 4, 1, 8, 3>,128, 8, 8, 8, 2, 512, 4, 1, 3, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 128, RowParallelismTy::Low, 1, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 1, 4, 8, 3>,128, 8, 8, 8, 1, 512, 1, 4, 3, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 128, RowParallelismTy::Low, 2, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 4, 1, 8, 3>,128, 8, 8, 8, 2, 512, 4, 1, 3, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 1, 1, 256, 8, 8, 4, K_EQUALS_VAR, 1, 1, 4, 8, 1>,32, 8, 8, 4, 1, 256, 1, 4, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 256, RowParallelismTy::Low, 1, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 1, 2, 8, 3>,256, 8, 8, 8, 1, 512, 1, 2, 3, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 1, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 4, 4, 8, 2>,32, 8, 8, 8, 1, 512, 4, 4, 2, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 128, RowParallelismTy::Low, 2, 0, 512, 8, 8, 4, K_EQUALS_VAR, 1, 1, 2, 8, 1>,128, 8, 8, 4, 2, 512, 1, 2, 1, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 256, RowParallelismTy::Low, 1, 1, 256, 8, 8, 8, K_EQUALS_VAR, 1, 1, 1, 8, 2>,256, 8, 8, 8, 1, 256, 1, 1, 2, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 1, 1, 128, 8, 8, 8, K_EQUALS_VAR, 1, 2, 2, 8, 2>,32, 8, 8, 8, 1, 128, 2, 2, 2, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 128, RowParallelismTy::Low, 2, 1, 512, 8, 8, 4, K_EQUALS_VAR, 1, 1, 2, 8, 1>,128, 8, 8, 4, 2, 512, 1, 2, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 2, 0, 512, 8, 8, 8, K_EQUALS_VAR, 1, 1, 8, 8, 2>,64, 8, 8, 8, 2, 512, 1, 8, 2, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 2, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 1, 8, 8, 2>,64, 8, 8, 8, 2, 512, 1, 8, 2, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 1, 1, 64, 8, 8, 8, K_EQUALS_VAR, 1, 1, 2, 8, 1>,32, 8, 8, 8, 1, 64, 1, 2, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 1, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 1, 8, 8, 2>,64, 8, 8, 8, 1, 512, 1, 8, 2, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 256, RowParallelismTy::Low, 2, 0, 512, 8, 8, 8, K_EQUALS_VAR, 1, 1, 2, 8, 2>,256, 8, 8, 8, 2, 512, 1, 2, 2, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 2, 0, 128, 8, 8, 8, K_EQUALS_VAR, 1, 1, 4, 8, 2>,32, 8, 8, 8, 2, 128, 1, 4, 2, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 2, 1, 128, 8, 8, 8, K_EQUALS_VAR, 1, 1, 4, 8, 2>,32, 8, 8, 8, 2, 128, 1, 4, 2, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 256, RowParallelismTy::Low, 1, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 1, 2, 8, 2>,256, 8, 8, 8, 1, 512, 1, 2, 2, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 256, RowParallelismTy::Low, 2, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 1, 2, 8, 2>,256, 8, 8, 8, 2, 512, 1, 2, 2, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 1, 1, 128, 8, 8, 8, K_EQUALS_VAR, 1, 1, 4, 8, 1>,32, 8, 8, 8, 1, 128, 1, 4, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 1, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 2, 8, 8, 2>,32, 8, 8, 8, 1, 512, 2, 8, 2, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 256, RowParallelismTy::Low, 2, 0, 256, 8, 8, 8, K_EQUALS_VAR, 1, 1, 1, 8, 2>,256, 8, 8, 8, 2, 256, 1, 1, 2, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 2, 0, 256, 8, 8, 4, K_EQUALS_VAR, 1, 1, 4, 8, 1>,32, 8, 8, 4, 2, 256, 1, 4, 1, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 1, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 2, 4, 8, 1>,64, 8, 8, 8, 1, 512, 2, 4, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 2, 1, 256, 8, 8, 4, K_EQUALS_VAR, 1, 1, 4, 8, 1>,32, 8, 8, 4, 2, 256, 1, 4, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 256, RowParallelismTy::Low, 2, 1, 256, 8, 8, 8, K_EQUALS_VAR, 1, 1, 1, 8, 2>,256, 8, 8, 8, 2, 256, 1, 1, 2, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 128, RowParallelismTy::Low, 2, 0, 512, 8, 8, 8, K_EQUALS_VAR, 1, 1, 4, 8, 2>,128, 8, 8, 8, 2, 512, 1, 4, 2, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 128, RowParallelismTy::Low, 2, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 1, 4, 8, 2>,128, 8, 8, 8, 2, 512, 1, 4, 2, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 2, 0, 256, 8, 8, 8, K_EQUALS_VAR, 1, 2, 4, 8, 2>,32, 8, 8, 8, 2, 256, 2, 4, 2, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 2, 1, 256, 8, 8, 8, K_EQUALS_VAR, 1, 2, 4, 8, 2>,32, 8, 8, 8, 2, 256, 2, 4, 2, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 2, 0, 128, 8, 8, 4, K_EQUALS_VAR, 1, 1, 2, 8, 1>,32, 8, 8, 4, 2, 128, 1, 2, 1, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 2, 1, 128, 8, 8, 4, K_EQUALS_VAR, 1, 1, 2, 8, 1>,32, 8, 8, 4, 2, 128, 1, 2, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 256, RowParallelismTy::Low, 2, 0, 256, 8, 8, 8, K_EQUALS_VAR, 1, 1, 1, 8, 1>,256, 8, 8, 8, 2, 256, 1, 1, 1, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 256, RowParallelismTy::Low, 2, 1, 256, 8, 8, 8, K_EQUALS_VAR, 1, 1, 1, 8, 1>,256, 8, 8, 8, 2, 256, 1, 1, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 2, 0, 512, 8, 8, 8, K_EQUALS_VAR, 1, 2, 4, 8, 2>,64, 8, 8, 8, 2, 512, 2, 4, 2, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 1, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 1, 8, 8, 3>,64, 8, 8, 8, 1, 512, 1, 8, 3, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 2, 0, 512, 8, 8, 4, K_EQUALS_VAR, 1, 2, 2, 8, 1>,64, 8, 8, 4, 2, 512, 2, 2, 1, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 1, 1, 256, 8, 8, 8, K_EQUALS_VAR, 1, 1, 8, 8, 1>,32, 8, 8, 8, 1, 256, 1, 8, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 2, 1, 512, 8, 8, 4, K_EQUALS_VAR, 1, 2, 2, 8, 1>,64, 8, 8, 4, 2, 512, 2, 2, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 2, 0, 512, 8, 8, 4, K_EQUALS_VAR, 1, 2, 4, 8, 1>,32, 8, 8, 4, 2, 512, 2, 4, 1, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 2, 1, 512, 8, 8, 4, K_EQUALS_VAR, 1, 2, 4, 8, 1>,32, 8, 8, 4, 2, 512, 2, 4, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 512, RowParallelismTy::Low, 1, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 1, 1, 8, 3>,512, 8, 8, 8, 1, 512, 1, 1, 3, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 2, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 2, 4, 8, 2>,64, 8, 8, 8, 2, 512, 2, 4, 2, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 512, RowParallelismTy::Low, 1, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 1, 1, 8, 1>,512, 8, 8, 8, 1, 512, 1, 1, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 256, RowParallelismTy::Low, 2, 0, 512, 8, 8, 8, K_EQUALS_VAR, 1, 2, 1, 8, 1>,256, 8, 8, 8, 2, 512, 2, 1, 1, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 128, RowParallelismTy::Low, 1, 1, 128, 8, 8, 8, K_EQUALS_VAR, 1, 1, 1, 8, 2>,128, 8, 8, 8, 1, 128, 1, 1, 2, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 1, 1, 256, 8, 8, 8, K_EQUALS_VAR, 1, 4, 2, 8, 1>,32, 8, 8, 8, 1, 256, 4, 2, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 2, 0, 256, 8, 8, 8, K_EQUALS_VAR, 1, 4, 1, 8, 2>,64, 8, 8, 8, 2, 256, 4, 1, 2, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 2, 1, 256, 8, 8, 8, K_EQUALS_VAR, 1, 4, 1, 8, 2>,64, 8, 8, 8, 2, 256, 4, 1, 2, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 1, 1, 128, 8, 8, 4, K_EQUALS_VAR, 1, 2, 1, 8, 1>,32, 8, 8, 4, 1, 128, 2, 1, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 256, RowParallelismTy::Low, 2, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 2, 1, 8, 1>,256, 8, 8, 8, 2, 512, 2, 1, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 1, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 4, 2, 8, 2>,64, 8, 8, 8, 1, 512, 4, 2, 2, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 128, RowParallelismTy::Low, 2, 0, 256, 8, 8, 8, K_EQUALS_VAR, 1, 1, 2, 8, 2>,128, 8, 8, 8, 2, 256, 1, 2, 2, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 128, RowParallelismTy::Low, 2, 1, 256, 8, 8, 8, K_EQUALS_VAR, 1, 1, 2, 8, 2>,128, 8, 8, 8, 2, 256, 1, 2, 2, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 1, 1, 32, 8, 8, 8, K_EQUALS_VAR, 1, 1, 1, 8, 1>,32, 8, 8, 8, 1, 32, 1, 1, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 2, 0, 32, 8, 8, 8, K_EQUALS_VAR, 1, 1, 1, 8, 1>,32, 8, 8, 8, 2, 32, 1, 1, 1, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 2, 1, 32, 8, 8, 8, K_EQUALS_VAR, 1, 1, 1, 8, 1>,32, 8, 8, 8, 2, 32, 1, 1, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 2, 0, 128, 8, 8, 8, K_EQUALS_VAR, 1, 2, 2, 8, 2>,32, 8, 8, 8, 2, 128, 2, 2, 2, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 2, 1, 128, 8, 8, 8, K_EQUALS_VAR, 1, 2, 2, 8, 2>,32, 8, 8, 8, 2, 128, 2, 2, 2, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 1, 1, 256, 8, 8, 4, K_EQUALS_VAR, 1, 2, 2, 8, 1>,32, 8, 8, 4, 1, 256, 2, 2, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 2, 0, 256, 8, 8, 4, K_EQUALS_VAR, 1, 4, 1, 8, 1>,32, 8, 8, 4, 2, 256, 4, 1, 1, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 256, RowParallelismTy::Low, 1, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 2, 1, 8, 3>,256, 8, 8, 8, 1, 512, 2, 1, 3, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 2, 1, 256, 8, 8, 4, K_EQUALS_VAR, 1, 4, 1, 8, 1>,32, 8, 8, 4, 2, 256, 4, 1, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 2, 0, 256, 8, 8, 8, K_EQUALS_VAR, 1, 4, 1, 8, 1>,64, 8, 8, 8, 2, 256, 4, 1, 1, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 2, 1, 256, 8, 8, 8, K_EQUALS_VAR, 1, 4, 1, 8, 1>,64, 8, 8, 8, 2, 256, 4, 1, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 2, 0, 128, 8, 8, 4, K_EQUALS_VAR, 1, 1, 1, 8, 1>,64, 8, 8, 4, 2, 128, 1, 1, 1, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 128, RowParallelismTy::Low, 1, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 4, 1, 8, 1>,128, 8, 8, 8, 1, 512, 4, 1, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 2, 1, 128, 8, 8, 4, K_EQUALS_VAR, 1, 1, 1, 8, 1>,64, 8, 8, 4, 2, 128, 1, 1, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 1, 1, 128, 8, 8, 8, K_EQUALS_VAR, 1, 1, 2, 8, 1>,64, 8, 8, 8, 1, 128, 1, 2, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 512, RowParallelismTy::Low, 2, 0, 512, 8, 8, 8, K_EQUALS_VAR, 1, 1, 1, 8, 2>,512, 8, 8, 8, 2, 512, 1, 1, 2, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 128, RowParallelismTy::Low, 2, 0, 128, 8, 8, 8, K_EQUALS_VAR, 1, 1, 1, 8, 1>,128, 8, 8, 8, 2, 128, 1, 1, 1, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 128, RowParallelismTy::Low, 2, 1, 128, 8, 8, 8, K_EQUALS_VAR, 1, 1, 1, 8, 1>,128, 8, 8, 8, 2, 128, 1, 1, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 512, RowParallelismTy::Low, 2, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 1, 1, 8, 2>,512, 8, 8, 8, 2, 512, 1, 1, 2, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 128, RowParallelismTy::Low, 1, 1, 256, 8, 8, 8, K_EQUALS_VAR, 1, 2, 1, 8, 1>,128, 8, 8, 8, 1, 256, 2, 1, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 2, 1, 256, 8, 8, 8, K_EQUALS_VAR, 1, 1, 4, 8, 2>,64, 8, 8, 8, 2, 256, 1, 4, 2, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 1, 1, 256, 8, 8, 8, K_EQUALS_VAR, 1, 2, 4, 8, 2>,32, 8, 8, 8, 1, 256, 2, 4, 2, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 2, 0, 256, 8, 8, 8, K_EQUALS_VAR, 1, 1, 8, 8, 1>,32, 8, 8, 8, 2, 256, 1, 8, 1, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 2, 1, 256, 8, 8, 8, K_EQUALS_VAR, 1, 1, 8, 8, 1>,32, 8, 8, 8, 2, 256, 1, 8, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 1, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 4, 2, 8, 1>,64, 8, 8, 8, 1, 512, 4, 2, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 128, RowParallelismTy::Low, 1, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 2, 2, 8, 1>,128, 8, 8, 8, 1, 512, 2, 2, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 2, 0, 512, 8, 8, 8, K_EQUALS_VAR, 1, 2, 4, 8, 1>,64, 8, 8, 8, 2, 512, 2, 4, 1, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 2, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 2, 4, 8, 1>,64, 8, 8, 8, 2, 512, 2, 4, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 1, 1, 256, 8, 8, 4, K_EQUALS_VAR, 1, 4, 1, 8, 1>,32, 8, 8, 4, 1, 256, 4, 1, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 128, RowParallelismTy::Low, 2, 0, 512, 8, 8, 8, K_EQUALS_VAR, 1, 4, 1, 8, 1>,128, 8, 8, 8, 2, 512, 4, 1, 1, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 128, RowParallelismTy::Low, 2, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 4, 1, 8, 1>,128, 8, 8, 8, 2, 512, 4, 1, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 1, 1, 256, 8, 8, 8, K_EQUALS_VAR, 1, 2, 2, 8, 2>,64, 8, 8, 8, 1, 256, 2, 2, 2, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 256, RowParallelismTy::Low, 2, 0, 512, 8, 8, 8, K_EQUALS_VAR, 1, 2, 1, 8, 3>,256, 8, 8, 8, 2, 512, 2, 1, 3, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 256, RowParallelismTy::Low, 2, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 2, 1, 8, 3>,256, 8, 8, 8, 2, 512, 2, 1, 3, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 2, 0, 256, 8, 8, 8, K_EQUALS_VAR, 1, 4, 2, 8, 1>,32, 8, 8, 8, 2, 256, 4, 2, 1, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 2, 1, 256, 8, 8, 8, K_EQUALS_VAR, 1, 4, 2, 8, 1>,32, 8, 8, 8, 2, 256, 4, 2, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 256, RowParallelismTy::Low, 1, 1, 512, 8, 8, 4, K_EQUALS_VAR, 1, 1, 1, 8, 1>,256, 8, 8, 4, 1, 512, 1, 1, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 1, 1, 256, 8, 8, 8, K_EQUALS_VAR, 1, 4, 2, 8, 2>,32, 8, 8, 8, 1, 256, 4, 2, 2, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 2, 0, 256, 8, 8, 4, K_EQUALS_VAR, 1, 2, 2, 8, 1>,32, 8, 8, 4, 2, 256, 2, 2, 1, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 2, 1, 256, 8, 8, 4, K_EQUALS_VAR, 1, 2, 2, 8, 1>,32, 8, 8, 4, 2, 256, 2, 2, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 2, 0, 512, 8, 8, 8, K_EQUALS_VAR, 1, 2, 8, 8, 1>,32, 8, 8, 8, 2, 512, 2, 8, 1, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 2, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 2, 8, 8, 1>,32, 8, 8, 8, 2, 512, 2, 8, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 2, 0, 512, 8, 8, 8, K_EQUALS_VAR, 1, 4, 4, 8, 3>,32, 8, 8, 8, 2, 512, 4, 4, 3, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 2, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 4, 4, 8, 3>,32, 8, 8, 8, 2, 512, 4, 4, 3, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 128, RowParallelismTy::Low, 1, 1, 256, 8, 8, 8, K_EQUALS_VAR, 1, 1, 2, 8, 1>,128, 8, 8, 8, 1, 256, 1, 2, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 128, RowParallelismTy::Low, 1, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 1, 4, 8, 2>,128, 8, 8, 8, 1, 512, 1, 4, 2, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 2, 0, 128, 8, 8, 4, K_EQUALS_VAR, 1, 2, 1, 8, 1>,32, 8, 8, 4, 2, 128, 2, 1, 1, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 2, 1, 128, 8, 8, 4, K_EQUALS_VAR, 1, 2, 1, 8, 1>,32, 8, 8, 4, 2, 128, 2, 1, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 128, RowParallelismTy::Low, 1, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 4, 1, 8, 2>,128, 8, 8, 8, 1, 512, 4, 1, 2, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 1, 1, 128, 8, 8, 8, K_EQUALS_VAR, 1, 4, 1, 8, 1>,32, 8, 8, 8, 1, 128, 4, 1, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 256, RowParallelismTy::Low, 2, 0, 512, 8, 8, 8, K_EQUALS_VAR, 1, 1, 2, 8, 1>,256, 8, 8, 8, 2, 512, 1, 2, 1, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 1, 1, 512, 8, 8, 4, K_EQUALS_VAR, 1, 4, 1, 8, 1>,64, 8, 8, 4, 1, 512, 4, 1, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 256, RowParallelismTy::Low, 2, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 1, 2, 8, 1>,256, 8, 8, 8, 2, 512, 1, 2, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 256, RowParallelismTy::Low, 1, 1, 256, 8, 8, 8, K_EQUALS_VAR, 1, 1, 1, 8, 1>,256, 8, 8, 8, 1, 256, 1, 1, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 128, RowParallelismTy::Low, 1, 1, 512, 8, 8, 4, K_EQUALS_VAR, 1, 1, 2, 8, 1>,128, 8, 8, 4, 1, 512, 1, 2, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 128, RowParallelismTy::Low, 2, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 2, 2, 8, 3>,128, 8, 8, 8, 2, 512, 2, 2, 3, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 1, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 2, 4, 8, 2>,64, 8, 8, 8, 1, 512, 2, 4, 2, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 1, 1, 128, 8, 8, 8, K_EQUALS_VAR, 1, 1, 2, 8, 2>,64, 8, 8, 8, 1, 128, 1, 2, 2, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 128, RowParallelismTy::Low, 1, 1, 512, 8, 8, 8, K_EQUALS_VAR, 1, 4, 1, 8, 3>,128, 8, 8, 8, 1, 512, 4, 1, 3, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 32, RowParallelismTy::Low, 1, 1, 512, 8, 8, 4, K_EQUALS_VAR, 1, 2, 4, 8, 1>,32, 8, 8, 4, 1, 512, 2, 4, 1, ElemType, 1, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 2, 0, 256, 8, 8, 8, K_EQUALS_VAR, 1, 1, 4, 8, 2>,64, 8, 8, 8, 2, 256, 1, 4, 2, ElemType, 0, K_EQUALS_VAR},\
KernelInfo{(void*)kronGemmKernel<T, VecT, 64, RowParallelismTy::Low, 1, 1, 128, 8, 8, 8, K_EQUALS_VAR, 1, 2, 1, 8, 1>,64, 8, 8, 8, 1, 128, 2, 1, 1, ElemType, 1, K_EQUALS_VAR}
